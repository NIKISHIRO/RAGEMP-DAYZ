{"version":3,"sources":["assets/huds/eat/40.svg","assets/items/item_weapon_ak47.png","assets/items/item_armor.png","assets/items/item_ammo_shotgun.png","assets/items/item_clothes_mask_1.jpg","assets/items/item_clothes_mask_2.jpg","assets/items/item_clothes_mask_3.jpg","assets/items/item_clothes_mask_4.jpg","assets/items/item_clothes_mask_5.jpg","assets/huds/health/100.svg","assets/huds/health/80.svg","assets/huds/health/60.svg","assets/huds/health/40.svg","assets/huds/health/20.svg","assets/huds/health/empty.svg","assets/huds/eat/100.svg","assets/huds/eat/80.svg","assets/huds/eat/60.svg","assets/huds/eat/empty.svg","assets/huds/temperature/100.svg","assets/huds/temperature/80.svg","assets/huds/temperature/60.svg","assets/huds/temperature/40.svg","assets/huds/temperature/15.svg","assets/huds/temperature/empty.svg","assets/huds/dehydration/100.svg","assets/huds/dehydration/70.svg","assets/huds/dehydration/40.svg","assets/huds/dehydration/10.svg","assets/huds/dehydration/empty.svg","serviceWorker.ts","types.ts","actions/inventoryActions.ts","actions/notificationActions.ts","actions/hudsDataActions.ts","actions/lootCreateDataActions.ts","reducers/UIReducer.ts","actions/displayUIActions.ts","reducers/clothesReducer.ts","actions/clothesActions.ts","actions/characterActions.ts","reducers/characterReducer.ts","actions/authActions.ts","reducers/authReducer.ts","reducers/index.ts","helpers/emitter.ts","store/config.ts","helpers/playerEvents/index.ts","helpers/getImages.ts","helpers/playerEvents/rpcCall.ts","components/UserInterface/Inventory/SelectedInventoryItem/TabSplitComponent/index.tsx","components/UserInterface/Inventory/SelectedInventoryItem/index.tsx","components/UserInterface/Inventory/SelectedGroundItem/index.tsx","components/UserInterface/Inventory/InventoryCell/index.tsx","components/UserInterface/Inventory/InventoryCells/index.tsx","components/UserInterface/Inventory/index.tsx","components/UserInterface/ItemsGround/ItemsGroundCells/index.tsx","components/UserInterface/ItemsGround/index.tsx","components/UserInterface/index.tsx","components/App/NotifyComp/index.tsx","components/App/Huds/HudsMenuData/index.tsx","components/App/Huds/HealthHud.tsx","components/App/Huds/EatHud.tsx","components/App/Huds/TemperatureHud.tsx","components/App/Huds/DehydrationHud.tsx","components/App/Huds/CircularLine.tsx","components/App/Huds/CircularHudWithImage.tsx","components/App/Huds/index.tsx","components/AdminInterface/LootCreate/index.tsx","components/AdminInterface/VehicleCreate/index.tsx","components/AdminInterface/index.tsx","components/StartMenu/Auth/index.tsx","components/StartMenu/Character/CharacterSlider/index.tsx","components/StartMenu/Character/CharacterFace/index.tsx","components/shared/AnySelect/index.tsx","components/StartMenu/Character/CharacterHeadParent/index.tsx","components/StartMenu/Character/CharacterHead/index.tsx","components/StartMenu/Character/CharacterHair/index.tsx","components/StartMenu/Character/CharacterHeading/index.tsx","helpers/helps.ts","components/StartMenu/Character/CharacterHeadOverlay/index.tsx","components/StartMenu/Character/CharacterEyes/index.tsx","components/StartMenu/Character/index.tsx","components/StartMenu/index.tsx","components/App/index.tsx","components/Root/index.tsx","index.tsx","helpers/playerEvents/rpcRegister.ts"],"names":["module","exports","Boolean","window","location","hostname","match","ItemType","ItemKey","deleteInventoryItemById","id","dispatch","getState","inventoryItems","UI","inventory","items","invItems","splice","setInventoryItems","type","payload","splitInventoryItemByIndex","itemId","splitCount","Number","isInteger","findItem","JSON","parse","stringify","newItem","item","amount","data","shortid","generate","setGroundItems","NotifyVariant","NotifyVertical","NotifyHorizontal","HudType","enqueueSnackbar","notification","key","options","Date","getTime","Math","random","setHudsData","value","PropType","setLootCreateData","setPropLootCreateData","lootCreate","loot","initialState","objectId","objectHash","position","rotation","hudsData","health","armor","hunger","dehydration","temperature","isBleeding","displayUI","huds","notifications","slots","ground","ITEM_WEAPON_AK47","WEAPON","name","description","maxStackCount","serverId","isDelete","weight","ITEM_AMMO_SHOTGUN","COMMON","ITEM_ARMOR","ARMOR","ITEM_CLOTHES_MASK_1","CLOTHES","UIReducer","state","action","SET_TEMPERATURE_HUDS","SET_HUNGER_HUDS","SET_DEHYDRATION_HUDS","SET_ARMOR_HUDS","SET_HEALTH_HUDS","map","dismissAll","dismissed","filter","snackbar","isShow","ClothesReducer","setEyesColor","setHeadOverlayProp","overlayId","index","setHairColor","setGender","gender","setHairId","setParentIndex","parent","defaultHead","father","mother","defaultFace","feature","defaultHeadOverlay","defaultState","headOverlay","face","head","similarity","skin","hair","hairColorId","eyes","characterReducer","characterState","faceIndex","updateAuthProp","prop","subProp","register","login","val","isValid","isTouch","regular","password","email","confirmPassword","authReducer","newState","emitter","EventEmitter","history","createMemoryHistory","initialEntries","pathname","initialIndex","store","createStore","combineReducers","auth","character","clothes","router","connectRouter","compose","applyMiddleware","routerMiddleware","thunk","logger","console","log","on","push","msg","variant","origin","message","anchorOrigin","vertical","horizontal","setDisplayUI","images","img_item_weapon_ak47","img_item_armor","img_item_ammo_shotgun","item_clothes_mask_1","ITEM_CLOTHES_MASK_2","item_clothes_mask_2","ITEM_CLOTHES_MASK_3","item_clothes_mask_3","ITEM_CLOTHES_MASK_4","item_clothes_mask_4","ITEM_CLOTHES_MASK_5","item_clothes_mask_5","takeInventoryItemToServer","a","callServer","dropInventoryItemToServer","itemKey","usesInventoryItemByServerId","callClient","setLootCreateRotation","pos","hash","serverLogin","h","setCharacterGender","resetCharacter","setCharacterHair","dId","coord","n","setCharacterHairColor","setCharacterHeadOverlay","setCharacterEyes","updateCharacterCameraPosition","serverCheckLogin","serverCharacterReady","TabSplitComponent","props","isInventory","UIState","useSelector","useDispatch","groundItems","maxSplit","useState","inputValue","setInputValue","checkRangeValue","isNaN","onIconBtnClick","event","idx","findIndex","i","onPopClose","serverResult","result","groundItem","inventoryItem","unshift","text","DEFAULT","ERROR","className","Slider","defaultValue","valueLabelDisplay","step","ceil","min","max","onChange","disabled","marks","parseInt","target","onClick","IconButton","color","aria-label","component","classes","root","SelectedInventoryItem","anchorEl","useToggle","toggle","Tab1","onDropItem","onUsesItem","Tab2","Tab3","Popover","paper","open","onClose","transformOrigin","SelectedGroundItem","InventoryCell","currentInvItem","nextItem","itemImage","currentItem","setCurrentItem","setAnchorEl","isStack","currentInvItemIdx","onMouseDown","button","floor","onStackClick","stopPropagation","currentItemIndex","nextItemIndex","sum","stackItems","draggableId","dragProvided","snapshot","e","currentTarget","onSelectItem","ref","innerRef","draggableProps","dragHandleProps","src","draggable","toFixed","InventoryCells","droppableId","provided","style","isDraggingOver","overflowY","overflowX","height","border","droppableProps","placeholder","Inventory","inventoryWeight","reduce","acc","inventoryFixWeight","ItemsGroundCells","ItemsGround","length","display","fontSize","textAlign","move","source","destination","droppableSource","droppableDestination","sourceClone","Array","from","destClone","removed","reorder","list","startIndex","endIndex","ItemsUI","id2List","droppable","droppable1","getList","onDragEnd","onDragStart","displayed","NotifyComp","useSnackbar","closeSnackbar","React","useEffect","forEach","includes","reason","myKey","onExited","removeSnackbar","HudsMenuData","blood","HealthHud","isLowHP","pulseAnimation","keyframes","pulse","HealthPulseDiv","styled","div","healthImage","image_blood_100","image_blood_80","image_blood_60","image_blood_40","image_blood_20","image_blood_empty","EatHud","imgIcon","img_icon_100","img_icon_80","img_icon_60","img_icon_40","img_empty","TemperatureHud","img_icon_20","img_icon_empty","DehydrationHud","img_icon_70","img_icon_10","CircularLine","maxValue","CircularProgress","size","CircularHudWithImage","styles","width","top","left","transform","hud","Huds","hudStyles","bottom","right","healthStyles","eatStyles","dehydrationStyles","temperatureStyles","textShadow","SliderType","LootCreate","createObject","p","r","onSliderChange","ROTATION","FormControl","InputLabel","Select","labelId","OBJECT_HASH","setLootCreateHash","MenuItem","Button","v","VehicleCreate","AdminInterface","href","Bounce","Animation","btnRegValidStyles","opacity","inputStyles","isError","Register","registerState","isLoginValid","isLoginTouch","isEmailValid","isEmailTouch","isPassValid","isPassTouch","isConfirmPassValid","isConfirmPassTouch","clickRegisterBtn","SUCCESS","test","setRegister","checkData","onBlur","isDisabled","in","Login","setState","Auth","toggleState","setToggle","CharacterSlider","ReactSlider","thumbClassName","trackClassName","renderThumb","CharacterFace","setCharacterFaceFeature","setFaceFeature","AnySelect","onLeftClick","onRightClick","topText","useHover","isHoverLeft","hoverLeftRef","isHoverRight","hoverRightRef","cssSelectHeadArrowLeft","verticalAlign","cssSelectHeadArrowRight","justifyContent","alignItems","margin","CharacterHeadParent","parents","sendData","parentsObj","parentIndex","c","fatherObj","motherObj","CharacterHead","setCharacterHeadProp","setHeadProp","hairList","male","female","CharacterHair","hairId","CharacterHeading","onSliderCameraChange","setCharacterCamera","cssSlider","paddingBottom","setCharacterHeading","range","CharacterHeadOverlay","getIndex","onLeft","onRight","CharacterEyes","CharacterTitle","title","textTransform","Character","onGenderClick","onClickReset","onReady","Drawer","backdrop","placement","show","Header","Body","appearance","active","Footer","StartMenu","Clear","App","exact","path","to","Root","hideIconVariant","maxSnack","autoHideDuration","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","emit"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,kSCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,ICRMC,EAOAC,E,uDCRNC,EAA0B,SAACC,GAC7B,OAAO,SAACC,EAAUC,GACd,IAAY,IAARF,EAAJ,CAD2B,IAOZG,EAFAD,IAAPE,GACAC,UACAC,MACFC,EAAQ,YAAOJ,GAErBI,EAASC,OAAOR,EAAI,GACpBC,EACIQ,EAAkBF,OA+DxBE,EAAoB,SAACH,GACvB,OAAO,SAACL,EAAUC,GACdD,EAAS,CACLS,KArFuB,sBAsFvBC,QAASL,MAMfM,EAA4B,SAACC,EAAgBC,GAC/C,OAAO,SAACb,EAAUC,GACd,GAAKa,OAAOC,UAAUF,MAIlBA,GAAc,GAAlB,CAL2B,IAWnBR,EAFOJ,IAAPE,GACAC,UACAC,MACFC,EAAQ,YAAOD,GACfW,EAAWC,KAAKC,MAAMD,KAAKE,UAAUb,EAASM,KAC9CQ,EAAUH,KAAKC,MAAMD,KAAKE,UAAUH,IACpCK,EAAOf,EAASM,GAEtB,KAAIS,EAAKC,QAAUT,GAAnB,CAIA,IAAMS,EAASD,EAAKC,OAAST,EAC7BG,EAASM,OAASA,EAClBF,EAAQG,KAAKC,QAAb,mBAAmCA,IAAQC,YAC3CL,EAAQE,OAAST,EAEjBP,EAASC,OAAOK,EAAQ,GACxBN,EAASC,OAAOK,EAAQ,EAAGI,EAAUI,GACrCpB,EAASQ,EAAkBF,QAI7BoB,EAAiB,SAACrB,GACpB,OAAO,SAACL,EAAUC,GACdD,EAAS,CACLS,KA/HoB,mBAgIpBC,QAASL,O,SD1HTT,K,gBAAAA,E,cAAAA,E,gBAAAA,E,mBAAAA,M,cAOAC,K,oCAAAA,E,wBAAAA,E,sCAAAA,E,0CAAAA,E,0CAAAA,E,0CAAAA,E,0CAAAA,E,2CAAAA,M,KEjBL,IAIK8B,EAQPC,EAKAC,G,SAbOF,K,kBAAAA,E,kBAAAA,E,cAAAA,E,kBAAAA,E,aAAAA,M,cAQPC,K,UAAAA,E,iBAAAA,M,cAKAC,K,gBAAAA,E,YAAAA,E,eAAAA,M,KAWL,IC5BYC,ED4BNC,EAAkB,SAACC,GACrB,IAAMC,EAAMD,EAAaE,SAAWF,EAAaE,QAAQD,IAEzD,MAAO,CACHxB,KAhCwB,mBAiCxBuB,aAAa,eACNA,EADK,CAERC,IAAKA,IAAO,IAAIE,MAAOC,UAAYC,KAAKC,aC3BpD,SAASC,EAAY9B,EAAe+B,GAChC,OAAO,SAACxC,EAAUC,GAEVuC,EAAQ,MACRA,EAAQ,KAERA,EAAQ,IACRA,EAAQ,GAGZxC,EAAS,CACLS,KAAMA,EACNC,QAAS8B,M,SApBTV,K,kCAAAA,E,gCAAAA,E,kCAAAA,E,4CAAAA,E,6CAAAA,M,KCEL,IAWKW,EATZ,SAASC,EAAkBnB,GACvB,OAAO,SAACvB,EAAUC,GACdD,EAAS,CACLS,KALwB,uBAMxBC,QAASa,KAWrB,SAASoB,EAAsBlC,EAAgB+B,GAC3C,OAAO,SAACxC,EAAUC,GAAc,IAEpB2C,EADO3C,IAAPE,GACAyC,WAEFC,EAAI,eAAOD,GACjBC,EAAKpC,GAAQ+B,EAEbxC,EAAS,CACLS,KA1BwB,uBA2BxBC,QAASmC,M,SAhBTJ,K,yBAAAA,E,oBAAAA,E,qBAAAA,M,KC6BZ,IA8DMK,EAAwB,CAC1BF,WAAY,CACRG,SAAU,EACVC,WAAY,mBACZC,SAAU,CAAC,EAAG,EAAG,GACjBC,SAAU,CAAC,EAAG,EAAG,IAErBC,SAAU,CACNC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,YAAa,IACbC,YAAa,IACbC,YAAY,GAEhBC,UAAW,CACPC,MAAM,GAEVC,cAAe,GACfxD,UAAW,CACPyD,MAAO,GACPxD,MAAO,IAEXyD,OAAQ,CACJzD,MAtFsB,CAC1B,CACI4B,IAAKpC,EAAQkE,iBACbzC,OAAQ,EACRC,KAAM,CACFd,KAAMb,EAASoE,OACfC,KAAM,SACNC,YAAa,uCACbC,cAAe,EACfC,SAAU5C,IAAQC,WAClBD,QAASA,IAAQC,WACjB4C,UAAU,EACVC,OAAQ,IAIhB,CACIrC,IAAKpC,EAAQ0E,kBACbjD,OAAQ,GACRC,KAAM,CACFd,KAAMb,EAAS4E,OACfP,KAAM,gBACNC,YAAa,qEACbC,cAAe,GACfC,SAAU5C,IAAQC,WAClBD,QAASA,IAAQC,WACjB4C,UAAU,EACVC,OAAQ,KAIhB,CACIrC,IAAKpC,EAAQ4E,WACbnD,OAAQ,EACRC,KAAM,CACFd,KAAMb,EAAS8E,MACfT,KAAM,QACNC,YAAa,6CACbC,cAAe,EACfC,SAAU5C,IAAQC,WAClBD,QAASA,IAAQC,WACjB4C,UAAU,EACVC,OAAQ,IAIhB,CACIrC,IAAKpC,EAAQ8E,oBACbrD,OAAQ,EACRC,KAAM,CACFd,KAAMb,EAASgF,QACfX,KAAM,mCACNC,YAAa,uCACbC,cAAe,EACfC,SAAU5C,IAAQC,WAClBD,QAASA,IAAQC,WACjB4C,UAAU,EACVC,OAAQ,OAiCpB,SAASO,IAAuD,IAA7CC,EAA4C,uDAA3BhC,EAAciC,EAAa,uCAC3D,OAAQA,EAAOtE,MACX,IDpI4B,uBCqIxB,OAAO,eACAqE,EADP,CAEIlC,WAAW,eAAMmC,EAAOrE,WAGhC,KAAKoB,EAAQkD,qBACT,OAAO,eACAF,EADP,CAEI3B,SAAS,eACF2B,EAAM3B,SADL,CAEJK,YAAauB,EAAOrE,YAIhC,KAAKoB,EAAQmD,gBACT,OAAO,eACAH,EADP,CAEI3B,SAAS,eACF2B,EAAM3B,SADL,CAEJG,OAAQyB,EAAOrE,YAI3B,KAAKoB,EAAQoD,qBACT,OAAO,eACAJ,EADP,CAEI3B,SAAS,eACF2B,EAAM3B,SADL,CAEJI,YAAawB,EAAOrE,YAIhC,KAAKoB,EAAQqD,eACT,OAAO,eACAL,EADP,CAEI3B,SAAS,eACF2B,EAAM3B,SADL,CAEJE,MAAO0B,EAAOrE,YAI1B,KAAKoB,EAAQsD,gBACT,OAAO,eACAN,EADP,CAEI3B,SAAS,eACF2B,EAAM3B,SADL,CAEJC,OAAQ2B,EAAOrE,YAI3B,ICvLsB,iBDwLlB,OAAO,eACAoE,EADP,CAEIpB,UAAWqB,EAAOrE,UAG1B,IH/LwB,mBGgMpB,OAAO,eACAoE,EADP,CAEIlB,cAAc,GAAD,mBACNkB,EAAMlB,eADA,cAGL3B,IAAK8C,EAAO9C,KACT8C,EAAO/C,kBAK1B,IH1MsB,iBG2MlB,OAAO,eACA8C,EADP,CAEIlB,cAAekB,EAAMlB,cAAcyB,KAAI,SAAArD,GAAY,OAC9C+C,EAAOO,YAActD,EAAaC,MAAQ8C,EAAO9C,IAAlD,eACWD,EADX,CACyBuD,WAAW,IADpC,eAEWvD,QAIvB,IHnNuB,kBGoNnB,OAAO,eACA8C,EADP,CAEIlB,cAAekB,EAAMlB,cAAc4B,QAC/B,SAAAxD,GAAY,OAAIA,EAAaC,MAAQ8C,EAAO9C,SAIxD,IJvNoB,eIwNhB,OAAO,eAAK6C,EAAZ,CAAmBW,SAAS,eAAKV,EAAOrE,WAE5C,IJ7N2B,sBI+NvB,OADAoE,EAAM1E,UAAUC,MAAQ0E,EAAOrE,QACxB,eAAKoE,GAEhB,IJ/N2B,sBIiOvB,OADAA,EAAM1E,UAAUyD,MAAQkB,EAAOrE,QACxB,eAAKoE,GAEhB,IJpOwB,mBIqOpB,OAAO,eAAKA,EAAZ,CAAmBhB,OAAQ,CAAEzD,MAAO0E,EAAOrE,WAE/C,QACI,OAAOoE,GEtOnB,IAAMhC,EAA6B,CAC/B4C,QAAQ,GAGZ,SAASC,IAAiE,IAAlDb,EAAiD,uDAA3BhC,EAAciC,EAAa,uCACrE,OAAQA,EAAOtE,MACX,ICZgB,UDaZ,OAAO,eAAKqE,EAAZ,CAAmBY,OAAQX,EAAOrE,UAEtC,QACI,OAAO,eAAKoE,I,oBENxB,SAASc,EAAa7F,GAClB,OAAO,SAACC,EAAUC,GACdD,EAAS,CACLS,KALkB,iBAMlBC,QAASX,KAKrB,SAAS8F,EAAmBC,EAAmBC,GAC3C,OAAO,SAAC/F,EAAUC,GACdD,EAAS,CACLS,KAfyB,wBAgBzBsF,QACAD,eAKZ,SAASE,EAAajG,GAClB,OAAO,SAACC,EAAUC,GACdD,EAAS,CACLS,KA1BkB,iBA2BlBC,QAASX,KAKrB,SAASkG,EAAUC,GACf,OAAO,SAAClG,EAAUC,GACdD,EAAS,CACLS,KApCc,aAqCdC,QAASwF,KAKrB,SAASC,EAAUpG,GACf,OAAO,SAACC,EAAUC,GACdD,EAAS,CACLS,KA9Ce,cA+CfC,QAASX,KAuBrB,SAASqG,EAAeC,EAAgBN,GACpC,OAAO,SAAC/F,EAAUC,GACdD,EAAS,CACLS,KA3EoB,mBA4EpB4F,OAAQA,EACRN,MAAOA,KChCnB,IAAMO,EAAwB,CAC1BC,OAAQ,CAAER,MAAO,GACjBS,OAAQ,CAAET,MAAO,IAGfU,EAA0B,CAC5B,CAAEV,MAAO,EAAGW,SAAU,EAAKzC,KAAM,iEACjC,CAAE8B,MAAO,EAAGW,SAAU,EAAKzC,KAAM,iEACjC,CAAE8B,MAAO,EAAGW,SAAU,EAAKzC,KAAM,sGACjC,CAAE8B,MAAO,EAAGW,SAAU,EAAKzC,KAAM,sGACjC,CAAE8B,MAAO,EAAGW,SAAU,EAAKzC,KAAM,4GACjC,CAAE8B,MAAO,EAAGW,SAAU,EAAKzC,KAAM,+FACjC,CAAE8B,MAAO,EAAGW,SAAU,EAAKzC,KAAM,6EACjC,CAAE8B,MAAO,EAAGW,SAAU,EAAKzC,KAAM,mFACjC,CAAE8B,MAAO,EAAGW,SAAU,EAAKzC,KAAM,iEACjC,CAAE8B,MAAO,EAAGW,SAAU,EAAKzC,KAAM,iEACjC,CAAE8B,MAAO,GAAIW,SAAU,EAAKzC,KAAM,iEAClC,CAAE8B,MAAO,GAAIW,SAAU,EAAKzC,KAAM,iEAClC,CAAE8B,MAAO,GAAIW,SAAU,EAAKzC,KAAM,uEAClC,CAAE8B,MAAO,GAAIW,SAAU,EAAKzC,KAAM,mFAClC,CAAE8B,MAAO,GAAIW,SAAU,EAAKzC,KAAM,6EAClC,CAAE8B,MAAO,GAAIW,SAAU,EAAKzC,KAAM,qGAClC,CAAE8B,MAAO,GAAIW,SAAU,EAAKzC,KAAM,2GAClC,CAAE8B,MAAO,GAAIW,SAAU,EAAKzC,KAAM,qGAClC,CAAE8B,MAAO,GAAIW,SAAU,EAAKzC,KAAM,uHAClC,CAAE8B,MAAO,GAAIW,SAAU,EAAKzC,KAAM,4DAGhC0C,EAAqB,CACvB,CAAEb,UAAW,EAAGC,MAAO,EAAG9B,KAAM,iHAChC,CAAE6B,UAAW,EAAGC,MAAO,EAAG9B,KAAM,8EAChC,CAAE6B,UAAW,EAAGC,MAAO,EAAG9B,KAAM,kCAChC,CAAE6B,UAAW,EAAGC,MAAO,EAAG9B,KAAM,oDAChC,CAAE6B,UAAW,EAAGC,MAAO,EAAG9B,KAAM,4BAChC,CAAE6B,UAAW,EAAGC,MAAO,EAAG9B,KAAM,8CAChC,CAAE6B,UAAW,EAAGC,MAAO,EAAG9B,KAAM,qDAChC,CAAE6B,UAAW,EAAGC,MAAO,EAAG9B,KAAM,kCAChC,CAAE6B,UAAW,EAAGC,MAAO,EAAG9B,KAAM,4BAChC,CAAE6B,UAAW,EAAGC,MAAO,EAAG9B,KAAM,+FAChC,CAAE6B,UAAW,GAAIC,MAAO,EAAG9B,KAAM,oFACjC,CAAE6B,UAAW,GAAIC,MAAO,EAAG9B,KAAM,wEACjC,CAAE6B,UAAW,GAAIC,MAAO,EAAG9B,KAAM,2HAG/BnB,EAA+B,CACjC8D,aAAc,CACVC,YAAa5F,KAAKC,MAAMD,KAAKE,UAAUwF,IACvCG,KAAM7F,KAAKC,MAAMD,KAAKE,UAAUsF,IAChCM,KAAM9F,KAAKC,MAAMD,KAAKE,UAAUmF,IAChCU,WAAY,GACZC,KAAM,GACNC,KAAM,EACNhB,OAAQ,OACRiB,YAAa,EACbC,KAAM,GAEVP,YAAaF,EACbI,KAAK,eAAKT,GACVQ,KAAK,GAAD,OAAML,GACVO,WAAY,GACZC,KAAM,GACNC,KAAM,EACNhB,OAAQ,OACRiB,YAAa,EACbC,KAAM,GAGV,SAASC,IAAqD,IAApCvC,EAAmC,uDAA3BhC,EAAciC,EAAa,uCACzD,OAAQA,EAAOtE,MAEX,ID7GsB,iBCgHlB,OAFAqE,EAAMsC,KAAOrC,EAAOrE,QAEb,eACAoE,GAIX,IDtH6B,wBCyHzB,OAFAA,EAAM+B,YAAY9B,EAAOe,WAAWC,MAAQhB,EAAOgB,MAE5C,eACAjB,GAIX,ID/HsB,iBCgIlB,OAAO,eACAA,EADP,CAEIqC,YAAapC,EAAOrE,UAI5B,IDvIkB,aCyId,OADAoE,EAAMoB,OAASnB,EAAOrE,QACf,eACAoE,GAIX,ID/ImB,cCiJf,OADAA,EAAMoC,KAAOnC,EAAOrE,QACb,eACAoE,GAIX,IDvJqB,gBCwJjB,OAAO,eACAA,EADP,eAEKC,EAAOd,KAAOc,EAAOvC,QAI9B,ID/JwB,mBCkKpB,OAFAsC,EAAMiC,KAAKhC,EAAOsB,QAAQN,MAAQhB,EAAOgB,MAElC,eACAjB,GAIX,IDxKwB,mBCyKpB,IAAMwC,EAAc,eAAOxC,GACrBgC,EAAI,eAAOQ,EAAeR,MAC1BS,EAAYxC,EAAOwC,UACnBb,EAAU3B,EAAO2B,QAGvB,OAFAI,EAAKS,GAAWb,QAAUA,EAEnB,eACAY,GAGX,IDpLmC,8BCqL/B,OAAO,eACAxC,EADP,GAEO7D,KAAKC,MAAMD,KAAKE,UAAU2D,EAAM8B,gBAI3C,QACI,OAAO9B,GCzLnB,SAAS0C,EAAeC,EAAcC,EAAiBlF,GACnD,OAAO,SAACxC,EAAUC,GACdD,EAAS,CACLS,KANwB,uBAOxBgH,OACAC,UACAlF,WCqBZ,IAAMM,EAA0B,CAC5B6E,SAAU,CACNC,MAAO,CACHC,IAAK,GACLC,SAAS,EACTC,SAAS,EACTC,QAAS,yBAEbC,SAAU,CACNJ,IAAK,GACLC,SAAS,EACTC,SAAS,EACTC,QAAS,+BAEbE,MAAO,CACHL,IAAI,GACJC,SAAS,EACTC,SAAS,EACTC,QAAS,cAEbG,gBAAiB,CACbN,IAAK,GACLC,SAAS,EACTC,SAAS,KAKrB,SAASK,IAAgD,IAApCtD,EAAmC,uDAA3BhC,EAAciC,EAAa,uCACpD,OAAQA,EAAOtE,MACX,ID5D4B,uBC+DxB,OAFAqE,EAAM6C,SAAS5C,EAAO0C,MAAM1C,EAAO2C,SAAW3C,EAAOvC,MAE9C,eACAsC,GAIX,IDnEoB,eCoEhB,IAAMuD,EAAQ,eAAOvD,GAGrB,OAFAuD,EAASV,SAAW5C,EAAOrE,QAEpB,eACA2H,GAIX,QACI,OAAO,eACAvD,ICjEnB,I,sDCZMwD,GAAe,I,QAAIC,GCMzB,IFM2BC,GGJLxI,GDFhBwI,GAAUC,YAAoB,CAChCC,eAAgB,CAAE,OAAQ,OAAQ,CAAEC,SAAU,WAC9CC,aAAc,IAGZC,GAAQC,aFCaN,GEALA,GFAiBO,YAAgB,CACnDC,KAAMZ,EACNa,UAAW5B,EACXlH,GAAI0E,EACJqE,QAASvD,EACTwD,OAAQC,YAAcZ,OEJtBa,YACIC,YACIC,YAAiBf,IACjBgB,IACAC,OAKZC,QAAQC,IAAI,QAASd,ICdC7I,GDgBT6I,GAAM7I,SAAU6I,GAAM5I,SCf/BqI,GAAQsB,GAAG,aAAa,WACpB5J,GAAS6J,YAAK,cAGlBvB,GAAQsB,GAAG,eAAe,WACtB5J,GAAS6J,YAAK,gBAGlBvB,GAAQsB,GAAG,oBAAoB,WAC3B5J,GAAS6J,YAAK,yBAGlBvB,GAAQsB,GAAG,uBAAuB,SAACvJ,GAC/BL,GAAS0B,EAAerB,OAG5BiI,GAAQsB,GAAG,2BAA2B,SAACvJ,GACnCL,GAASQ,EAAkBH,OAG/BiI,GAAQsB,GAAG,aAAa,SAACE,EAAaC,EAAiBC,GACnDhK,GAAS+B,EAAgB,CACrBkI,QAASH,EACT5H,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjCyH,QAASA,EACTG,aAAc,CACVC,SAAUH,EAAOG,SACjBC,WAAYJ,EAAOI,mBAMnC9B,GAAQsB,GAAG,sBAAsB,SAAClG,GAC9B1D,GV1CR,SAAsB0D,GAClB,OAAO,SAAC1D,EAAUC,GACdD,EAAS,CACLS,KALkB,iBAMlBC,QAASgD,KUsCJ2G,CAAa3G,OAG1B4E,GAAQsB,GAAG,aAAa,SAAC3F,GACrBjE,GAAS6J,YAAK,IAAD,OAAK5F,QAGtBqE,GAAQsB,GAAG,uBAAuB,SAACxG,GAC/BpD,GACIuC,EAAYT,EAAQsD,gBAAiBhC,OAI7CkF,GAAQsB,GAAG,sBAAsB,SAACvG,GAC9BrD,GACIuC,EAAYT,EAAQqD,eAAgB9B,OAI5CiF,GAAQsB,GAAG,uBAAuB,SAACtG,GAC/BtD,GACIuC,EAAYT,EAAQmD,gBAAiB3B,OAI7CgF,GAAQsB,GAAG,4BAA4B,SAACtG,GACpCtD,GACIuC,EAAYT,EAAQoD,qBAAsB5B,OAIlDgF,GAAQsB,GAAG,4BAA4B,SAACtF,GfDlB,IAACT,EeEnB7D,IfFmB6D,EeGGS,EfFnB,SAACtE,EAAUC,GACdD,EAAS,CACLS,KA1EuB,sBA2EvBC,QAASmD,U,yPgBtEfyG,IAAM,qBACPzK,EAAQkE,iBAAmBwG,MADpB,eAEP1K,EAAQ4E,WAAa+F,MAFd,eAGP3K,EAAQ0E,kBAAoBkG,MAHrB,eAIP5K,EAAQ8E,oBAAsB+F,MAJvB,eAKP7K,EAAQ8K,oBAAsBC,MALvB,eAMP/K,EAAQgL,oBAAsBC,MANvB,eAOPjL,EAAQkL,oBAAsBC,MAPvB,eAQPnL,EAAQoL,oBAAsBC,MARvB,I,mECQGC,G,qFAAf,WAAyC/G,EAAkB9C,GAA3D,UAAA8J,EAAA,+EACWC,sBAAW,6BAA8B,CAAEjH,WAAU9C,YADhE,4C,+BAKegK,G,qFAAf,WAAyCC,EAAiBjK,GAA1D,UAAA8J,EAAA,+EACWC,sBAAW,6BAA8B,CAACE,UAASjK,YAD9D,4C,+BAKekK,G,mFAAf,WAA2CpH,GAA3C,UAAAgH,EAAA,+EACWC,sBAAW,8BAA+BjH,IADrD,4C,+BAMexB,G,mFAAf,WAA0BI,GAA1B,UAAAoI,EAAA,+EACWK,sBAAW,yBAA0BzI,IADhD,4C,+BAUe0I,G,mFAAf,WAAqCC,GAArC,UAAAP,EAAA,+EACWK,sBAAW,kCAAmCE,IADzD,4C,sEAIA,WAAiCC,GAAjC,UAAAR,EAAA,+EACWK,sBAAW,8BAA+BG,IADrD,4C,+BAWeC,G,qFAAf,WAA2BjE,EAAeK,GAA1C,UAAAmD,EAAA,+EACWC,sBAAW,eAAgB,CAACzD,QAAOK,cAD9C,4C,sEAMA,WAAmC6D,GAAnC,UAAAV,EAAA,+EACWK,sBAAW,+BAAgCK,IADtD,4C,sEAKA,WAAuC/F,EAAeW,GAAtD,UAAA0E,EAAA,+EACWK,sBAAW,4BAA6B,CAAC1F,QAAOW,aAD3D,4C,+BAKeqF,G,mFAAf,WAAkC7F,GAAlC,UAAAkF,EAAA,+EACWK,sBAAW,8BAA+BvF,IADrD,4C,sEAIA,WAAoC3E,GAApC,UAAA6J,EAAA,+EACWK,sBAAW,iCAAkClK,IADxD,4C,+BAIeyK,K,gFAAf,uBAAAZ,EAAA,+EACWK,sBAAW,2BADtB,4C,+BAIeQ,G,mFAAf,WAAgCC,GAAhC,UAAAd,EAAA,+EACWK,sBAAW,4BAA6BS,IADnD,4C,sEAIA,WAAkCC,EAAwBC,GAA1D,UAAAhB,EAAA,+EACWK,sBAAW,kCAAmC,CAACU,QAAOC,OADjE,4C,+BAQeC,G,mFAAf,WAAqCtM,GAArC,UAAAqL,EAAA,+EACWK,sBAAW,kCAAmC1L,IADzD,4C,+BAIeuM,G,qFAAf,WAAuCxG,EAAmBC,GAA1D,UAAAqF,EAAA,+EACWK,sBAAW,+BAAgC,CAAC3F,YAAWC,WADlE,4C,+BAIewG,G,mFAAf,WAAgC1E,GAAhC,UAAAuD,EAAA,+EACWK,sBAAW,4BAA6B5D,IADnD,4C,+BAIe2E,K,gFAAf,uBAAApB,EAAA,+EACWK,sBAAW,qCADtB,4C,+BAIegB,G,mFAAf,WAAgC7E,GAAhC,UAAAwD,EAAA,+EACWC,sBAAW,qBAAsBzD,IAD5C,4C,+BAKe8E,G,mFAAf,WAAoCnL,GAApC,UAAA6J,EAAA,+EACWC,sBAAW,yBAA0B9J,IADhD,4C,sBCnGA,SAASoL,GAAkBC,GAAe,IAC9BvL,EAAsBuL,EAAtBvL,KAAMwL,EAAgBD,EAAhBC,YACRC,EAAUC,aAAY,SAACjI,GACzB,OAAOA,EAAM3E,IAAM,MAEjBH,EAAWgN,cAET5M,EAAsB0M,EAAtB1M,UAAW0D,EAAWgJ,EAAXhJ,OACJ5D,EAAmBE,EAA1BC,MACO4M,EAAgBnJ,EAAvBzD,MACFiB,EAASD,EAAKC,OACd4L,EAAW5L,EAAS,EAXW,EAaD6L,mBAAcD,GAbb,oBAa9BE,EAb8B,KAalBC,EAbkB,KAe/BC,EAAkB,SAAC9K,GAChB1B,OAAOC,UAAUyB,KAAU+K,MAAM/K,IAClC6K,EAAc,GAGd7K,EAAQ0K,GACRG,EAAcH,GAGd1K,EAAQ0K,GACRG,EAAc7K,GAGdA,EAAQ,GACR6K,EAAc,IAsBhBG,EAAc,yCAAG,WAAOC,GAAP,0BAAArC,EAAA,0DAEfyB,EAFe,gBAGTa,EAAMxN,EAAeyN,WAAU,SAACC,GAAD,OAAOA,IAAMvM,KAClDqI,QAAQC,IAAI,qBAAsB+D,IAErB,IAATA,GACA1N,EACIW,EAA0B+M,EAAKN,IAIvCR,EAAMiB,aAZS,0BAcfjB,EAAMiB,cAGO,KADPH,EAAMT,EAAYU,WAAU,SAACC,GAAD,OAAOA,IAAMvM,MAhBhC,sBAkBP+L,GAAc,GAlBP,wBAmBPR,EAAMiB,aAnBC,4CAwBgB1C,GAA0B9J,EAAKE,KAAK6C,SAAUgJ,GAxB9D,SAwBLU,EAxBK,QAyBMC,QACbrE,QAAQC,IAAI,wHAA0BtI,GAEhC2M,EAAa/M,KAAKC,MAAMD,KAAKE,UAAU8L,EAAYS,KACnDO,EAAgBhN,KAAKC,MAAMD,KAAKE,UAAU6M,KAE1C1M,EAAS0M,EAAW1M,OAAS8L,GACtB,IACTH,EAAYS,GAAKpM,OAASA,EAE1B2M,EAAc3M,OAAS8L,EACvBa,EAAc1M,KAAKC,QAAnB,UA/FK,mBA+FL,OAAuDA,IAAQC,YAC/DvB,EAAegO,QAAQD,IAGvB3M,GAAU,IACVoI,QAAQC,IAAI,eACZsD,EAAY1M,OAAOmN,EAAK,GACxBO,EAAc3M,OAAS0M,EAAW1M,OAClCpB,EAAegO,QAAQD,IAG3BjO,EACIQ,EAAkBS,KAAKC,MAAMD,KAAKE,UAAUjB,MAEhDF,EACI0B,EAAeuL,IAEnBjN,EACI+B,EAAgB,CACZkI,QAAS6D,EAAaK,KAClBjM,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjCyH,QAASpI,EAAcyM,QACvBlE,aAAc,CACVE,WAAY,SACZD,SAAU,eAM9BnK,EACI+B,EAAgB,CACZkI,QAAS6D,EAAaK,KAClBjM,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjCyH,QAASpI,EAAc0M,MACvBnE,aAAc,CACVE,WAAY,SACZD,SAAU,cA3EvB,QAoFnByC,EAAMiB,aApFa,4CAAH,sDAuFpB,OACI,yBAAKS,UAAU,yBACX,yBAAKA,UAAU,+BACX,kBAACC,GAAA,EAAD,CACIC,aAAe,EACfC,kBAAkB,OAClBC,KAAOrM,KAAKsM,KAAKrN,EAAS,IAAM,IAChCsN,IAAM,EACNC,IAAM3B,EACN1K,MAAQ4K,EACR0B,SAnHO,SAACrB,EAAYjL,GACX,kBAAVA,IAIX8K,EAAgB9K,GAChBkH,QAAQC,IAAI,0BAA2BnH,GAElB,kBAAVA,GACP6K,EAAc7K,KA2GNuM,SAAW7B,GAAY,EACvB8B,OAAK,KAIb,2BAAOvO,KAAK,OAAO+B,MAAQ4K,EAAa0B,SA5G1B,SAACrB,GACnB,IAAMjL,EAAQyM,SAASxB,EAAMyB,OAAO1M,OACpC8K,EAAgB9K,MA4GZ,yBAAK2M,QAAU3B,GACX,kBAAC4B,GAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,iBAAiBC,UAAU,OAAOC,QAAS,CAAEC,KAAM,wBACtF,kBAAC,KAAD,S,aChKpB,SAASC,GAAsB9C,GAAe,IAClCvL,EAA+BuL,EAA/BvL,KAAMsO,EAAyB/C,EAAzB+C,SAAU9B,EAAejB,EAAfiB,WADiB,EAEf+B,aAAU,GAA5B9K,EAFiC,EAEjCA,MAAO+K,EAF0B,EAE1BA,OACT7P,EAAWgN,cACXnE,EAAQkE,aAAY,SAACjI,GACvB,OAAOA,EAAM3E,IAAM,MAGvB,SAAS2P,IACL,IAAMC,EAAU,yCAAG,mCAAA3E,EAAA,sEACYE,GAA0BjK,EAAKY,IAAKZ,EAAKC,QADrD,cAGEyM,SACbrE,QAAQC,IAAI,aAActI,GACpBnB,EAFe,YAEM2I,EAAMzI,UAAUC,OACrC4M,EAHe,YAGGpE,EAAM/E,OAAOzD,QAGxB,KAFPqN,EAAM7E,EAAMzI,UAAUC,MAAMsN,WAAU,SAAAC,GAAC,OAAIA,IAAMvM,SAG7CD,EADM,eACQC,IACZE,KAAKC,QAAb,UA5BA,iBA4BA,OAAwCA,IAAQC,YAChDvB,EAAeK,OAAOmN,EAAK,GAC3BT,EAAYiB,QAAQ9M,GAEpBpB,EAAS,CACLS,KnBzCW,sBmB0CXC,QAASR,IAGbF,EAAS,CACLS,KnB7CQ,mBmB8CRC,QAASuM,MAtBN,2CAAH,qDA4BV+C,EAAU,yCAAG,iCAAA5E,EAAA,sEACYI,GAA4BnK,EAAKE,KAAK6C,UADlD,QACT0J,EADS,QAIEC,SACP7N,EADe,YACM2I,EAAMzI,UAAUC,OACrCqN,EAAMxN,EAAeyN,WAAU,SAAAC,GAAC,OAAIA,IAAMvM,KAE5CA,EAAKE,KAAK8C,UACVrE,EACIF,EAAwB4N,KAKpC1N,EACI+B,EAAgB,CACZkI,QAAS6D,EAAaK,KAClBjM,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjCyH,QAAS+D,EAAaC,OAASpM,EAAcyM,QAAUzM,EAAc0M,MACrEnE,aAAc,CACVE,WAAY,SACZD,SAAU,cAvBf,2CAAH,qDA8BhB,OACI,yBAAKmE,UAAU,sBACX,yBAAKa,QAAU,kBAAMU,EAAO,KAA5B,6BACA,yBAAKV,QAAUa,GAAf,4EACA,yBAAKb,QAAU,kBAAMU,EAAO,KAA5B,0DACA,yBAAKV,QAAUY,GAAf,2DAKZ,SAASE,IACL,OACI,yBAAK3B,UAAU,kDACX,yBAAKA,UAAU,8BACX,gCACMjN,EAAKE,KAAK0C,KADhB,SACgC5C,EAAKC,OADrC,UAIJ,yBAAKgN,UAAU,qCACX,kBAAC3B,GAAD,CAAmBE,aAAW,EAACgB,WAAaA,EAAaxM,KAAOA,MAMhF,SAAS6O,IACL,OACI,yBAAK5B,UAAU,kDACX,yBAAKA,UAAU,qCACX,kFAAiBjN,EAAKE,KAAK0C,MAC3B,iEAAe5C,EAAKC,QACpB,oFAAmBD,EAAKE,KAAK4C,eAC7B,oEAAkB9C,EAAKE,KAAK+C,QAC5B,kFAAiBjD,EAAKE,KAAK2C,aAC3B,oDAAY7C,EAAKE,KAAKd,QAMtC,OACI,kBAAC0P,GAAA,EAAD,CACIX,QAAU,CAAEC,KAAM,sBAAuBW,MAAO,wBAChDrQ,GAAK,eACLsQ,OAASV,EACTA,SAAWA,EACXW,QAAUzC,EACV3D,aAAc,CACVC,SAAU,MACVC,WAAY,QAEhBmG,gBAAiB,CACbpG,SAAU,MACVC,WAAY,SAGhB,yBAAKkE,UAAU,gBACC,IAAVxJ,GAAe,kBAACgL,EAAD,MACL,IAAVhL,GAAe,kBAACmL,EAAD,MACL,IAAVnL,GAAe,kBAACoL,EAAD,QCpIjC,SAASM,GAAmB5D,GAAe,IAC/BvL,EAA+BuL,EAA/BvL,KAAMsO,EAAyB/C,EAAzB+C,SAAU9B,EAAejB,EAAfiB,WADc,EAEZ+B,aAAU,GAA5B9K,EAF8B,EAE9BA,MAF8B,EAEvB+K,OAEf,SAASC,IACL,OACI,yBAAKxB,UAAU,kDACX,yBAAKA,UAAU,8BACX,gCACMjN,EAAKE,KAAK0C,KADhB,SACgC5C,EAAKC,OADrC,UAIJ,yBAAKgN,UAAU,qCACX,kBAAC3B,GAAD,CAAmBkB,WAAaA,EAAaxM,KAAOA,MAMpE,OACI,kBAAC8O,GAAA,EAAD,CACIX,QAAU,CAAEC,KAAM,sBAAuBW,MAAO,wBAChDrQ,GAAK,eACLsQ,OAASV,EACTA,SAAWA,EACXW,QAAUzC,EACV3D,aAAc,CACVC,SAAU,MACVC,WAAY,QAEhBmG,gBAAiB,CACbpG,SAAU,MACVC,WAAY,SAGhB,yBAAKkE,UAAU,gBACC,IAAVxJ,GAAe,kBAACgL,EAAD,QCpCjC,IAUMW,GAAgB,SAAC7D,GAAkB,ILFnBrB,EKoBdmF,EACAC,EAlBItP,EAA0BuL,EAA1BvL,KAAMtB,EAAoB6M,EAApB7M,GAAI8M,EAAgBD,EAAhBC,YAEZC,EAAUC,aAAY,SAACjI,GACzB,OAAOA,EAAM3E,IAAM,MAEjBH,EAAWgN,cAET5M,EAAsB0M,EAAtB1M,UAAW0D,EAAWgJ,EAAXhJ,OACXzD,EAAUD,EAAVC,MACO4M,EAAgBnJ,EAAvBzD,MACFuQ,GLbYrF,EKaalK,EAAKY,ILbGqI,GAAOiB,IKEV,EAcE4B,mBAAsB,MAdxB,oBAc7B0D,EAd6B,KAchBC,EAdgB,OAeJ3D,mBAAS,MAfL,oBAe7BwC,EAf6B,KAenBoB,EAfmB,KAiBhCC,GAAU,EAGd,GAAInE,EAAa,CACb,IAAMoE,EAAoB5Q,EAAMsN,WAAU,SAAAC,GAAC,OAAIA,IAAMvM,MAC1B,IAAvB4P,IACAP,EAAiBrQ,EAAM4Q,GACvBN,EAAWtQ,EAAM4Q,EAAoB,GAEjCP,GAAkBC,GACdD,EAAezO,MAAQ0O,EAAS1O,KAAOyO,EAAenP,KAAK4C,cAAgB,IAC3E6M,GAAU,IAM1B,IAMMnD,EAAa,WACfiD,EAAe,MACfC,EAAY,OAGVG,EAAW,yCAAG,WAAOzD,GAAP,wBAAArC,EAAA,0DAEZyB,GAAgC,IAAjBY,EAAM0D,OAFT,qBAGR9P,EAAKC,QAAU,GAHP,qDASC,KAFPoM,EAAMrN,EAAMsN,WAAU,SAAAC,GAAC,OAAIA,IAAMvM,MAP3B,iDAaZrB,EACIW,EAA0B+M,EAAKrL,KAAK+O,MAAM/P,EAAKC,OAAS,KAdhD,0BAkBNuL,GAAgC,IAAjBY,EAAM0D,OAlBf,wBAmBZzH,QAAQC,IAAI,iJAA+BtI,GAnB/B,UAsBe8J,GAA0B9J,EAAKE,KAAK6C,SAAU/C,EAAKC,QAtBlE,aAsBNwM,EAtBM,QAyBKC,OAzBL,qBA4BK,KAFPL,EAAMT,EAAYU,WAAU,SAAAC,GAAC,OAAIA,IAAMvM,MA1BrC,mDAgCF2M,EAAa/M,KAAKC,MAAMD,KAAKE,UAAU8L,EAAYS,MACnDO,EAAgBhN,KAAKC,MAAMD,KAAKE,UAAU6M,KAClCzM,KAAKC,QAAnB,UAxFa,mBAwFb,OAAuDA,IAAQC,YAC/DwM,EAAc3M,OAASD,EAAKC,OAC5BjB,EAAM6N,QAAQD,GACdhB,EAAY1M,OAAOmN,EAAK,GACxB1N,EAASQ,EAAkBH,IAC3BL,EAAS0B,EAAeuL,IAvChB,QA0CZjN,EACI+B,EAAgB,CACZkI,QAAS6D,EAAaK,KAClBjM,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjCyH,QAAS+D,EAAaC,OAASpM,EAAcyM,QAAUzM,EAAc0M,MACrEnE,aAAc,CACVE,WAAY,SACZD,SAAU,cAlDlB,wBAyDN0C,GAAgC,IAAjBY,EAAM0D,QAC3BzH,QAAQC,IAAI,0IAA6BtI,GA1D7B,4CAAH,sDA8DXgQ,EAAe,SAAC5D,GAClBA,EAAM6D,kBACN,IAAMC,EAAmBlR,EAAMsN,WAAU,SAAAC,GAAC,OAAIA,IAAMvM,KAC9CmQ,EAAgBnR,EAAMsN,WAAU,SAAAC,GAAC,OAAIA,IAAM+C,KACjDjH,QAAQC,IAAI,mBAAoB4H,GAChC7H,QAAQC,IAAI,gBAAiB6H,GAC7BxR,ErBvGW,SAACuR,EAA0BC,GAC1C,OAAO,SAACxR,EAAUC,GAAc,IAGpBI,EAFOJ,IAAPE,GACAC,UACAC,MACFC,EAAQ,YAAOD,GAErB,IAA0B,IAAtBkR,IAA8C,IAAnBC,EAA/B,CAIA,IAAMX,EAAW,eAAOxQ,EAAMkR,IACxBZ,EAAQ,eAAOtQ,EAAMmR,IAE3B,GAAIX,EAAY5O,MAAQ0O,EAAS1O,IAAjC,CAIA,IAAMkC,EAAgB0M,EAAYtP,KAAK4C,cACjCsN,EAAMZ,EAAYvP,OAASqP,EAASrP,OAK1C,GAHAoI,QAAQC,IAAI,gBAAiBxF,GAC7BuF,QAAQC,IAAI,MAAO8H,GAEfA,EAAMtN,EAAe,CACrB,IAAM7C,EAASmQ,EAAMtN,EACrB0M,EAAYvP,OAASA,EACrBqP,EAASrP,OAAS6C,EAClB7D,EAASC,OAAOgR,EAAkB,EAAGV,GACrCvQ,EAASC,OAAOiR,EAAe,EAAGb,QAElCA,EAASrP,OAASmQ,EAClBnR,EAASC,OAAOgR,EAAkB,EAAGZ,GACrCrQ,EAASC,OAAOiR,EAAe,GAGnCxR,EAAS,CACLS,KAnEuB,sBAoEvBC,QAASJ,OqBkEToR,CAAWH,EAAkBC,KAIrC,OACI,sCACQX,GAAehE,GAAe,kBAAC6C,GAAD,CAAuB7B,WAAaA,EAAa8B,SAAWA,EAAWtO,KAAOwP,MAC5GA,IAAgBhE,GAAe,kBAAC2D,GAAD,CAAoB3D,aAAW,EAACgB,WAAaA,EAAa8B,SAAWA,EAAWtO,KAAOwP,IAE1H,kBAAC,KAAD,CAAWc,YAActQ,EAAKE,KAAKC,QAAUuE,MAAQhG,IAChD,SAAC6R,EAAcC,GACZ,OACI,yBACI1C,QAAU,SAAC2C,GAAD,OA7Fb,SAACzQ,EAAYyQ,GAC9BpI,QAAQC,IAAI,eAAgBtI,GAC5ByP,EAAezP,GACf0P,EAAYe,EAAEC,eA0FuBC,CAAa3Q,EAAMyQ,IACpCZ,YAAcA,GAEd,yBAAKe,IAAML,EAAaM,UACpB,uCACI5D,UAAU,mBACLsD,EAAaO,eACbP,EAAaQ,iBAElB,yBAAK9D,UAAU,wBACX,yBAAK+D,IAAMzB,EAAY0B,WAAY,KAEvC,yBAAKhE,UAAU,uBACTjN,EAAKE,KAAK0C,MAEhB,yBAAKqK,UAAU,yBAAf,UACSjN,EAAKC,OADd,YACwBD,EAAKE,KAAK4C,gBAElC,yBAAKmK,UAAU,0BACRjN,EAAKE,KAAK+C,OAASjD,EAAKC,QAAQiR,QAAQ,GAD/C,qBAGEvB,GAAW,yBAAK1C,UAAU,UAAUa,QAAU,SAAC2C,GAAD,OAAOT,EAAaS,KAAK,kBAAC,KAAD,eCzJvGU,GAAiB,SAAC5F,GACpB,IAIQvM,EAJQ0M,aAAY,SAACjI,GACzB,OAAOA,EAAM3E,IAAM,MAEfC,UACAC,MAaR,OACI,oCACI,kBAAC,KAAD,CAAWoS,YAAY,eAClB,SAACC,EAAUb,GAAX,OACG,uCAAKI,IAAMS,EAASR,SAAWS,OAjC7BC,EAiCkDf,EAASe,eAhC7ElJ,QAAQC,IAAI,iBAAkBiJ,GAEvB,CACHC,UAAW,OACXC,UAAW,SACXC,OAAQ,QACRC,OAAQJ,EAAiB,mBAAqB,4BA0BkDF,EAASO,gBAdlG5S,EAAMgF,KAAI,SAAChE,EAAMtB,GACpB,OAAO,kBAAC,GAAD,CACHkC,IAAG,UAvBC,mBAuBD,OAAoBZ,EAAKE,KAAKC,SACjCzB,GAAKA,EACLsB,KAAOA,EACPwL,aAAW,OAWD6F,EAASQ,aAnCd,IAACN,OCDtB,SAASO,GAAUvG,GACf,IACQxM,EADM2M,aAAY,SAACjI,GAAD,OAAyBA,EAAM3E,IAAM,MACvDC,UACAyD,EAAiBzD,EAAjByD,MAEFuP,EAFmBhT,EAAVC,MAEegT,QAAO,SAACC,EAAKjS,GAAN,OAAeiS,EAAOjS,EAAKE,KAAK+C,OAASjD,EAAKC,SAAS,GAC5FoI,QAAQC,IAAI,kBAAmByJ,GAC/B,IAAMG,EAAqBzS,OAAOC,UAAUqS,GAAmBA,EAAgBb,QAAQ,GAAKa,EAAgBb,QAAQ,GAEpH,OACI,yBAAKjE,UAAU,aACX,yBAAKA,UAAU,UAAf,2DACiBiF,EADjB,IACwC1P,EADxC,KAGA,yBAAKyK,UAAU,oBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,qBACX,kBAAC,KAAD,QAGR,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,qBACX,kBAAC,KAAD,QAGR,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,qBACX,kBAAC,KAAD,QAGR,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,qBACX,kBAAC,KAAD,QAGR,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,qBACX,kBAAC,KAAD,SAIZ,yBAAKA,UAAU,wBAEX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,UC7CxB,IAUMkF,GAAmB,SAAC5G,GACtB,IAIQvM,EAJQ0M,aAAY,SAACjI,GACzB,OAAOA,EAAM3E,IAAM,MAEf2D,OACAzD,MAER,OACI,kBAAC,KAAD,CAAWoS,YAAY,cACtB,SAACC,EAAUb,GAAX,OACG,yCAAUa,EAASO,eAAnB,CAAoChB,IAAMS,EAASR,SAAWS,OAjBpDC,EAiByEf,EAASe,eAjB9D,CACtCC,UAAW,OACXC,UAAW,SACXC,OAAQ,QACRC,OAAQJ,EAAiB,mBAAqB,6BAchCvS,EAAMgF,KAAI,SAAChE,EAAMqM,GAAP,OAAe,kBAAC,GAAD,CAAezL,IAAG,UArBnC,iBAqBmC,OAA0BZ,EAAKE,KAAKC,SAAYzB,GAAK2N,EAAMrM,KAAOA,OAC7GqR,EAASQ,aAnBN,IAACN,MCJhBa,GAAc,WAChB,IAAM3O,EAAQiI,aAAY,SAACjI,GAAD,OAAkBA,GAAS,MAQrD,OACI,6BACI,yBAAKwJ,UAAU,gBACX,yBAAKA,UAAU,UAAf,gEACA,yBAAKA,UAAU,uBACTxJ,EAAM3E,GAAG2D,OAAOzD,MAAMqT,OAAS,kBAAC,GAAD,MAAuB,yBAAKf,MAXvD,CAClBgB,QAAS,QACTC,SAAU,SACVC,UAAW,WAQyD,sCCNtEC,GAAO,SAACC,EAAQC,EAAaC,EAAiBC,GAChD,IAAMC,EAAcC,MAAMC,KAAKN,GACzBO,EAAYF,MAAMC,KAAKL,GAFiD,EAG5DG,EAAY5T,OAAO0T,EAAgBlO,MAAO,GAArDwO,EAHuE,qBAK9ED,EAAU/T,OAAO2T,EAAqBnO,MAAO,EAAGwO,GAEhD,IAAMxG,EAAS,GAMf,OALAA,EAAOkG,EAAgBxB,aAAe0B,EACtCpG,EAAOmG,EAAqBzB,aAAe6B,EAE3C5K,QAAQC,IAAI,SAAUoE,GAEfA,GAILyG,GAAU,SAACC,EAAMC,EAAYC,GAC/B,IAAM5G,EAASqG,MAAMC,KAAKI,GADuB,EAE/B1G,EAAOxN,OAAOmU,EAAY,GAArCH,EAF0C,qBAKjD,OAFAxG,EAAOxN,OAAOoU,EAAU,EAAGJ,GAEpBxG,GAIX,SAAS6G,GAAQhI,GACb,IAAME,EAAUC,aAAY,SAACjI,GACzB,OAAOA,EAAM3E,IAAM,MAEjBH,EAAWgN,cAET5M,EAAsB0M,EAAtB1M,UAAW0D,EAAWgJ,EAAXhJ,OAGb+Q,EAAU,CACZC,UAAW,SACXC,WAAY,aAGVC,EAAU,SAACjV,GAAD,OAAQ+M,EAAQ+H,EAAQ9U,IAAKM,OAEvC4U,EAAS,yCAAG,WAAOlH,GAAP,gCAAA3C,EAAA,yDACN2I,EAAwBhG,EAAxBgG,OAAQC,EAAgBjG,EAAhBiG,YAEhBtK,QAAQC,IAAI,SAAUoE,GACtBrE,QAAQC,IAAI,SAAUoK,GACtBrK,QAAQC,IAAI,cAAeqK,GAGtBA,EARS,oDAaVD,EAAOtB,cAAgBuB,EAAYvB,YAbzB,iBAcJpS,EAAQmU,GACVQ,EAAQjB,EAAOtB,aACfsB,EAAOhO,MACPiO,EAAYjO,OAGhB2D,QAAQC,IAAI,WAAYtJ,GACxBqJ,QAAQC,IAAI,wBAAyBoK,EAAOtB,aAC5C/I,QAAQC,IAAI,uBAAwBqK,EAAYjO,OAErB,cAAvBgO,EAAOtB,aACPzS,EAAS0B,EAAerB,IAGD,eAAvB0T,EAAOtB,aACPzS,EAASQ,EAAkBH,IA7BrB,2BAiCJ0N,EAAS+F,GACXkB,EAAQjB,EAAOtB,aACfuC,EAAQhB,EAAYvB,aACpBsB,EACAC,GAKuB,eAAvBD,EAAOtB,YA1CD,wBA2CAvS,EA3CA,YA2CqBE,EAAUC,OAC/BgB,EAAOnB,EAAe6T,EAAOhO,OA5C7B,UA8CqBuF,GAA0BjK,EAAKY,IAAKZ,EAAKC,QA9C9D,eA+CWyM,SACb/N,EAAS0B,EAAeqM,EAAO+G,YAC/B9U,EAASQ,EAAkBuN,EAAOgH,cAjDhC,WAsDiB,cAAvBhB,EAAOtB,YAtDD,wBAuDN/I,QAAQC,IAAI,gGAENsD,EAzDA,YAyDkBnJ,EAAOzD,OACzBgB,EAAO4L,EAAY8G,EAAOhO,OAChC2D,QAAQC,IAAI,wGAA2BtI,GA3DjC,UA8DqB8J,GAA0B9J,EAAKE,KAAK6C,SAAU/C,EAAKC,QA9DxE,SA8DAwM,EA9DA,QA+DWC,SACb/N,EAAS0B,EAAeqM,EAAO+G,YAC/B9U,EAASQ,EAAkBuN,EAAOgH,cAGtC/U,EACI+B,EAAgB,CACZkI,QAAS6D,EAAaK,KACtBjM,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjCyH,QAAS+D,EAAaC,OAASpM,EAAcyM,QAAUzM,EAAc0M,MACrEnE,aAAc,CACVE,WAAY,SACZD,SAAU,cA5EpB,4CAAH,sDAyFD4C,aAAY,SAACjI,GAAD,OAAkBA,GAAS,MAErD,OACI,yBAAKwJ,UAAU,MACX,yBAAKA,UAAU,gBACX,kBAAC,KAAD,CAAiB2G,UAAYA,EAAYC,YATjC,SAAC3T,GACjBmI,QAAQC,IAAI,mBAAoBpI,KASpB,kBAAC,GAAD,MACA,kBAAC4R,GAAD,S,cClJhBgC,GAAiB,GAEfC,GAAa,WACf,IAAMpV,EAAWgN,cACXpJ,EAAqBmJ,aAAY,SAAClE,GAAD,OAAqBA,EAAM1I,GAAGyD,eAAiB,MAFjE,EAGsByR,yBAAnCtT,EAHa,EAGbA,gBAAiBuT,EAHJ,EAGIA,cA0CzB,OAhCAC,IAAMC,WAAU,WACZ5R,EAAc6R,SAAQ,YAAwD,IAT1D1V,EASKkC,EAAoD,EAApDA,IAAKgI,EAA+C,EAA/CA,QAA+C,IAAtC/H,eAAsC,MAA5B,GAA4B,MAAxBqD,eAAwB,SAGrE+P,EAAcrT,GAKdkT,GAAUO,SAASzT,KAGvBF,EAAgBkI,EAAD,aACXhI,OACGC,EAFQ,CAGXoO,QAAS,SAAC7C,EAAOkI,EAAQC,GACjB1T,EAAQoO,SACRpO,EAAQoO,QAAQ7C,EAAOkI,EAAQC,IAGvCC,SAAU,SAACpI,EAAOmI,GAxBN,IAAC7V,EA0BTC,E1BIG,SAAAiC,GAAG,MAAK,CAC3BxB,KA7C2B,kBA8C3BwB,O0BNyB6T,CAAeF,IA1Bf7V,EA2BO6V,EA1B5BT,GAAS,YAAOA,GAAU3P,QAAO,SAAAvD,GAAG,OAAIlC,IAAOkC,UAL3BlC,EAoCDkC,EAnCnBkT,GAAS,sBAAOA,IAAP,CAAkBpV,UAqC5B,CAAC6D,EAAe0R,EAAevT,EAAiB/B,IAE5C,MC1CX,SAAS+V,GAAanJ,GAClB,IACMoJ,EADU,IACFpJ,EAAMxJ,OAEpB,OACI,yBAAKkL,UAAU,kBACX,gEAAc0H,GACd,gEAAcpJ,EAAMvJ,OACpB,4EAAgBuJ,EAAMtJ,QACtB,gEAAcsJ,EAAMrJ,aACpB,oGAAoBqJ,EAAMpJ,c,+VCNtC,SAASyS,GAAUrJ,GAAe,IACtBxJ,EAAWwJ,EAAXxJ,OAGF8S,EAAU9S,GAAU,GAGpB+S,EAAiBC,aAAH,KAAeC,UAC7BC,EAAiBC,KAAOC,IAAV,KACFN,EAAU,OAAS,KAAmBC,GAGpDM,EAAcC,KAiBlB,OAhBItT,GAAU,KACVqT,EAAcE,MAEdvT,GAAU,KACVqT,EAAcG,MAEdxT,GAAU,KACVqT,EAAcI,MAEdzT,GAAU,KACVqT,EAAcK,MAEd1T,GAAU,IACVqT,EAAcM,MAId,kBAACT,EAAD,KACI,yBAAKhI,UAAU,eACX,yBAAK+D,IAAMoE,EAAc9D,MA9BxB,O,6GCLjB,SAASqE,GAAOpK,GAAe,IACnBtJ,EAAWsJ,EAAXtJ,OAGJ2T,EAAUC,KAiBd,OAhBI5T,EAAS,KACT2T,EAAUE,MAEV7T,EAAS,KACT2T,EAAUG,MAEV9T,EAAS,KACT2T,EAAUI,MAEV/T,EAAS,KACT2T,EAAUI,MAEV/T,EAAS,IACT2T,EAAUK,MAIV,yBAAKhJ,UAAU,YACX,yBAAK+D,IAAM4E,EAAUtE,MArBhB,M,kICAjB,SAAS4E,GAAe3K,GAAe,IAC3BpJ,EAAgBoJ,EAAhBpJ,YAGJyT,EAAUC,KAiBd,OAhBI1T,EAAc,KACdyT,EAAUE,MAEV3T,EAAc,KACdyT,EAAUG,MAEV5T,EAAc,KACdyT,EAAUI,MAEV7T,EAAc,KACdyT,EAAUO,MAEVhU,EAAc,IACdyT,EAAUQ,MAIV,yBAAKnJ,UAAU,oBACX,yBAAK+D,IAAM4E,EAAUtE,MArBhB,M,6GCHjB,SAAS+E,GAAe9K,GAAe,IAC3BrJ,EAAgBqJ,EAAhBrJ,YAGJ0T,EAAUC,KAcd,OAbI3T,EAAc,KACd0T,EAAUU,MAEVpU,EAAc,KACd0T,EAAUI,MAEV9T,EAAc,KACd0T,EAAUW,MAEVrU,EAAc,IACd0T,EAAUQ,MAIV,yBAAKnJ,UAAU,oBACX,yBAAK+D,IAAM4E,EAAUtE,MAlBhB,M,cCJjB,SAASkF,GAAajL,GAClB,IACMpK,EADUoK,EAAMkL,SAAW,IACTlL,EAAMpK,MAE9B,OACI,6BACI,kBAACuV,GAAA,EAAD,CAAkB1I,MAAM,YAAYtF,QAAQ,SAASvH,MAAQA,EAAQwV,KAAO,MCNxF,SAASC,GAAqBrL,GAC1B,IAAMsL,EAAM,eAAOtL,EAAM+F,MAAb,CAAoBwF,MAAOvL,EAAMoL,OAO7C,OACI,yBAAK1J,UAAU,uBAAuBqE,MAAQuF,GAC1C,kBAACL,GAAD,CAAcrV,MAAQoK,EAAMpK,MAAQsV,SAAW,MAC/C,yBAAKnF,MATS,CAClB1P,SAAU,WACVmV,IAAK,MACLC,KAAM,MACNC,UAAW,0BAKiB1L,EAAM2L,MCL1C,SAASC,GAAK5L,GACV,IAAM9H,EAAiBiI,aAAY,SAACjI,GAAD,OAAgBA,EAAM3E,IAAM,MAEzDiD,GADW4J,cACFlI,EAAM3B,SAASC,QACxBC,EAAQyB,EAAM3B,SAASE,MAEvBG,GADasB,EAAM3B,SAASM,WACdqB,EAAM3B,SAASK,aAC7BF,EAASwB,EAAM3B,SAASG,OACxBC,EAAcuB,EAAM3B,SAASI,YAE7BkV,EAA2B,CAC7BxV,SAAU,WACVyV,OAAQ,OACRC,MAAO,QAGPC,EAAe,GACfxV,GAAU,KAAIwV,EAAe,CAACpT,OAAQ,uBACtCpC,GAAU,KAAIwV,EAAe,CAACpT,OAAQ,uBACtCpC,GAAU,KAAIwV,EAAe,CAACpT,OAAQ,uBACtCpC,GAAU,KAAIwV,EAAe,CAACpT,OAAQ,uBACtCpC,GAAU,IAAGwV,EAAe,CAACpT,OAAQ,uBAEzC,IAAIqT,EAAY,GACZvV,EAAS,KAAIuV,EAAY,CAACrT,OAAQ,uBAClClC,EAAS,KAAIuV,EAAY,CAACrT,OAAQ,uBAClClC,EAAS,KAAIuV,EAAY,CAACrT,OAAQ,uBAClClC,EAAS,KAAIuV,EAAY,CAACrT,OAAQ,uBAClClC,EAAS,IAAGuV,EAAY,CAACrT,OAAQ,uBAErC,IAAIsT,EAAoB,GACpBvV,EAAc,KAAIuV,EAAoB,CAACtT,OAAQ,uBAC/CjC,EAAc,KAAIuV,EAAoB,CAACtT,OAAQ,uBAC/CjC,EAAc,KAAIuV,EAAoB,CAACtT,OAAQ,uBAC/CjC,EAAc,IAAGuV,EAAoB,CAACtT,OAAQ,uBAElD,IAAIuT,EAAoB,GAOxB,OANIvV,EAAc,KAAIuV,EAAoB,CAACvT,OAAQ,sBAC/ChC,EAAc,KAAIuV,EAAoB,CAACvT,OAAQ,sBAC/ChC,EAAc,KAAIuV,EAAoB,CAACvT,OAAQ,sBAC/ChC,EAAc,KAAIuV,EAAoB,CAACvT,OAAQ,sBAC/ChC,EAAc,IAAGuV,EAAoB,CAACvT,OAAQ,uBAG9C,yBAAK8I,UAAU,QACX,kBAACyH,GAAD,CAAc3S,OAASA,EAASC,MAAQA,EAAQC,OAASA,EAASC,YAAcA,EAAcC,YAAcA,IAE5G,kBAACyU,GAAD,CAAsBzV,MAAQY,EAASuP,MAAK,eAAO8F,EAAP,GAAqBG,EAArB,CAAmCD,MAAO,YAAaX,KAAO,GAAKO,IAAM,kBAACtC,GAAD,CAAW7S,OAASA,MACzI,kBAAC6U,GAAD,CAAsBzV,MAAQc,EAASqP,MAAK,eAAO8F,EAAP,GAAqBI,EAArB,CAAgCF,MAAO,YAAaX,KAAO,GAAKO,IAAM,kBAACvB,GAAD,CAAQ1T,OAASA,MACnI,kBAAC2U,GAAD,CAAsBzV,MAAQe,EAAcoP,MAAK,eAAO8F,EAAP,GAAqBK,EAArB,CAAwCH,MAAO,WAAYX,KAAO,GAAKO,IAAM,kBAACb,GAAD,CAAgBnU,YAAcA,MAC5J,kBAAC0U,GAAD,CAAsBzV,MAAQgB,EAAcmP,MAAK,eAAO8F,EAAP,GAAqBM,EAArB,CAAwCJ,MAAO,UAAWX,KAAO,GAAKO,IAAM,kBAAChB,GAAD,CAAgB/T,YAAcA,MAE3J,yBAAKmP,MAAQ,CAACqG,WAAY,kCAAmC/V,SAAU,WAAYyV,OAAQ,QAASC,MAAO,OAAQtJ,MAAO,SACtH,8FACA,uKACA,6C,WC1DX4J,G,kDAKL,SAASC,KACL,IAAMlZ,EAAWgN,cADC,EAEPD,aAAY,SAACjI,GACpB,OAAOA,EAAM3E,IAAM,MAEiCyC,WAAtCI,GALA,EAKVD,SALU,EAKAC,YAAYC,EALZ,EAKYA,SAAUC,EALtB,EAKsBA,SAMxCwG,QAAQC,IAAI,aAAc3G,GAG1B,IAAMmW,EAAY,yCAAG,iCAAA/N,EAAA,sEACExI,GAAWI,GADb,QACXzB,EADW,UAIP6X,EAAI7X,EAAK0B,SACToW,EAAI9X,EAAK2B,SACflD,EACI0C,EAAkB,CAAEK,SAAUxB,EAAKwB,SAAUC,WAAYzB,EAAKyB,WAAYC,SAAU,CAACmW,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAAKlW,SAAU,CAACmW,EAAE,GAAIA,EAAE,GAAIA,EAAE,QAPxH,2CAAH,qDAqBZC,EAAc,yCAAG,WAAO7Y,EAAkB0L,EAAwBsB,EAAYjL,GAA7D,UAAA4I,EAAA,yDACf3K,IAASwY,GAAWM,SADL,sBAED,MAAVpN,IACAjJ,EAAS,GAAKV,GAEJ,MAAV2J,IACAjJ,EAAS,GAAKV,GAEJ,MAAV2J,IACAjJ,EAAS,GAAKV,GAGlBxC,EACI2C,EAAsBF,EAAS8W,SAAUrW,IAb9B,SAiBTwI,GAAsBxI,GAjBb,2CAAH,4DAqBpB,OACI,yBAAKoL,UAAU,QACX,yBAAKA,UAAU,2BAAf,yHAGA,yBAAKA,UAAU,eACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,6BAAf,sGACA,yCAEI,6BACA,6BACA,kBAACkL,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAY1P,QAAQ,WAAWhK,GAAG,sBAAlC,kEACA,kBAAC2Z,GAAA,EAAD,CACIC,QAAQ,qBACR5Z,GAAG,sBACH+O,SA/CP,SAACrB,GAClBzN,EACI2C,EAAsBF,EAASmX,YAAanM,EAAMyB,OAAO1M,Q,qCAI7DqX,CAAkBpM,EAAMyB,OAAO1M,QA0CPA,MAAQQ,GAER,kBAAC8W,GAAA,EAAD,CAAUtX,MAAQ,qBAAlB,qBACA,kBAACsX,GAAA,EAAD,CAAUtX,MAAQ,oBAAlB,sBAGR,6BACA,6BACA,kBAACuX,GAAA,EAAD,CAAQ1K,MAAM,YAAYF,QAAUgK,GAApC,+CAGJ,6BAEA,0CACgBjW,EAAS,GADzB,IAC+BA,EAAS,GADxC,IAC+CA,EAAS,GACpD,6BACI,oCACI,kBAACqL,GAAA,EAAD,CACIiB,QAAU,CAACC,KAAM,qBACjBf,KArFR,GAsFQE,IArFhB,EAsFgBC,IAxFR,IAyFQrM,MAAQU,EAAS,GAAK8L,OAAK,EAC3BF,SAAW,SAACgD,EAAQkI,GAAT,OAAoBV,EAAeL,GAAWM,SAAU,IAAKzH,EAAGkI,QAI3F,6BACI,6BACI,oCACI,kBAACzL,GAAA,EAAD,CACIiB,QAAU,CAACC,KAAM,qBACjBf,KAlGR,GAmGQE,IAlGhB,EAmGgBC,IArGR,IAsGQrM,MAAQU,EAAS,GAAK8L,OAAK,EAC3BF,SAAW,SAACgD,EAAQkI,GAAT,OAAoBV,EAAeL,GAAWM,SAAU,IAAKzH,EAAGkI,QAI3F,6BACI,6BACI,oCACI,kBAACzL,GAAA,EAAD,CACIiB,QAAU,CAACC,KAAM,qBACjBf,KA/GR,GAgHQE,IA/GhB,EAgHgBC,IAlHR,IAmHQrM,MAAQU,EAAS,GAAK8L,OAAK,EAC3BF,SAAW,SAACgD,EAAQkI,GAAT,OAAoBV,EAAeL,GAAWM,SAAU,IAAKzH,EAAGkI,QAK3F,6BAEA,0CAAiB/W,EAAS,GAA1B,IAAgCA,EAAS,GAAzC,IAAgDA,EAAS,IACzD,gCCnJpB,SAASgX,KACL,OACI,yBAAK3L,UAAU,kBACX,yBAAKA,UAAU,2BAAf,0FCCZ,SAAS4L,KAAkB,IAAD,EACItK,aAAU,GAA5B9K,EADc,EACdA,MAAO+K,EADO,EACPA,OAEf,OACI,yBAAKvB,UAAU,SACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,cACX,4BACI,4BAAI,uBAAG6L,KAAK,IAAIhL,QAAU,kBAAMU,EAAO,KAAnC,0HACJ,4BAAI,uBAAGsK,KAAK,IAAIhL,QAAU,kBAAMU,EAAO,KAAnC,4FAGZ,yBAAKvB,UAAU,cACX,yBAAKA,UAAU,qBAAf,6HACY,IAAVxJ,GAAe,kBAACoU,GAAD,MACL,IAAVpU,GAAe,kBAACmV,GAAD,W,SFTpChB,K,oBAAAA,E,qBAAAA,Q,0BGDGmB,GAAWC,KAAXD,OAEFE,GAAoB,CACtBtH,OAAQ,oBACR3D,MAAO,UACPkL,QAAS,MAGPC,GAAc,SAACC,GAAD,MAAc,CAC9BzH,OAAQyH,EAAU,iCAAmC,GACrDpL,MAAOoL,EAAU,sBAAwB,KAG7C,SAASC,KACL,IAAM5V,EAAQiI,aAAY,SAACjI,GAAD,OAAkBA,GAAS,MAC/C9E,EAAWgN,cAEX2N,EAAgB7V,EAAMkE,KAAKrB,SAE3BiT,EAAeD,EAAc/S,MAAME,QACnC+S,EAAeF,EAAc/S,MAAMG,QACnC+S,EAAeH,EAAczS,MAAMJ,QACnCiT,EAAeJ,EAAczS,MAAMH,QACnCiT,EAAcL,EAAc1S,SAASH,QACrCmT,EAAcN,EAAc1S,SAASF,QACrCmT,EAAqBP,EAAcxS,gBAAgBL,QACnDqT,EAAqBR,EAAcxS,gBAAgBJ,QAcnDqT,EAAgB,yCAAG,6BAAAhQ,EAAA,2DACjBwP,GAAgBI,GAAeE,GAAsBJ,GADpC,gCAGUrO,GAAiBkO,EAAc/S,MAAMC,KAH/C,QAGXiG,EAHW,QAKAC,QACbvB,KACAxM,EACI6J,YAAK,gBAGT7J,EACI+B,EAAgB,CACZkI,QAAS6D,EAAaK,KAClBjM,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjCyH,QAAS+D,EAAaC,OAASpM,EAAc0Z,QAAU1Z,EAAc0M,MACrEnE,aAAc,CACVE,WAAY,SACZD,SAAU,cAnBjB,2CAAH,qDA4BhB2E,EAAW,SAACrB,GACd,IAAMxJ,EAAOwJ,EAAMyB,OAAOjL,KACpBzB,EAAQiL,EAAMyB,OAAO1M,MAE3BxC,EACIwH,EAAevD,EAAM,MAAOzB,IA7ClB,WACd,IAAM6F,EAAQ,eAAOsS,GACrBtS,EAAST,MAAME,QAAU6S,EAAc/S,MAAMI,QAAQsT,KAAKX,EAAc/S,MAAMC,KAC9EQ,EAASH,MAAMJ,QAAU6S,EAAczS,MAAMF,QAAQsT,KAAKX,EAAczS,MAAML,KAC9EQ,EAASJ,SAASH,QAAU6S,EAAc1S,SAASD,QAAQsT,KAAKX,EAAc1S,SAASJ,KACvFQ,EAASF,gBAAgBL,QAAUO,EAASF,gBAAgBN,MAAQQ,EAASJ,SAASJ,IAEtF7H,E7BjCR,SAAqB2H,GACjB,OAAO,SAAC3H,EAAUC,GACdD,EAAS,CACLS,KAhBgB,eAiBhBC,QAASiH,K6B8BT4T,CAAYlT,IAwChBmT,IAGEC,EAAS,SAAChO,GACZ,IAAMxJ,EAAOwJ,EAAMyB,OAAOjL,KAC1BjE,EACIwH,EAAevD,EAAM,WAAW,KAIlCyX,GAAcd,IAAiBI,IAAgBE,IAAuBJ,EAG5E,OAFApR,QAAQC,IAAI,aAAc+R,GAGtB,kBAAC,GAAD,CAAQC,IAAK,GACT,yBAAKrN,UAAU,mBACX,0BAAMA,UAAU,eACZ,yBAAKA,UAAU,qBACX,2BAAO4E,YAAY,6EAAiBzS,KAAK,OAAOwD,KAAK,QAAQzB,MAAQmY,EAAc/S,MAAMC,KAAO,GAAKiH,SAAWA,EAAW2M,OAASA,EAAS9I,MAAQ6H,GAAYK,IAAiBD,KAChLC,GAAgBD,GAAgB,kBAAC,KAAD,MAChCC,IAAiBD,GAAgB,0BAAMjI,MAAQ,CAACtD,MAAO,qBAAsB,kBAAC,KAAD,QAEnF,yBAAKf,UAAU,qBACX,2BAAO4E,YAAY,iCAAQzS,KAAK,QAAQwD,KAAK,QAAQzB,MAAQmY,EAAczS,MAAML,KAAO,GAAKiH,SAAWA,EAAW2M,OAASA,EAAS9I,MAAQ6H,GAAYG,EAAczS,MAAMH,UAAY4S,EAAczS,MAAMJ,WAC3MiT,GAAgBD,GAAgB,kBAAC,KAAD,MAChCC,IAAiBD,GAAgB,0BAAMnI,MAAQ,CAACtD,MAAO,qBAAsB,kBAAC,KAAD,QAEnF,yBAAKf,UAAU,qBACX,2BAAO4E,YAAY,kFAAiBzS,KAAK,WAAWwD,KAAK,WAAWzB,MAAQmY,EAAc1S,SAASJ,KAAO,GAAKiH,SAAWA,EAAW2M,OAASA,EAAS9I,MAAQ6H,GAAYS,IAAgBD,KACzLC,GAAeD,GAAe,kBAAC,KAAD,MAC9BC,IAAgBD,GAAe,0BAAMrI,MAAQ,CAACtD,MAAO,qBAAsB,kBAAC,KAAD,QAEjF,yBAAKf,UAAU,qBACX,2BAAO4E,YAAY,8FAAmBzS,KAAK,WAAWwD,KAAK,kBAAkBzB,MAAQmY,EAAcxS,gBAAgBN,KAAO,GAAKiH,SAAWA,EAAW2M,OAASA,EAAS9I,MAAQ6H,GAAYW,IAAuBD,KAChNC,GAAsBD,GAAsB,kBAAC,KAAD,MAC5CC,IAAuBD,GAAsB,0BAAMvI,MAAQ,CAACtD,MAAO,qBAAsB,kBAAC,KAAD,SAGnG,yBAAKf,UAAU,0BACX,4BACIA,UAAU,kBACVa,QAAU,kBAAMiM,KAChBrM,SAAW2M,EACX/I,MAAQ+I,EAAapB,GAAoB,IAJ7C,mCASJ,yBAAKhM,UAAU,iCACTuM,IAAiBD,GAAgB,+KAAiC,0BAAMjI,MAAO,CAACtD,MAAO,YAArB,sEAAjC,wNACjC0L,IAAiBD,GAAgB,wKACjCG,IAAgBD,GAAe,gJAA2B,0BAAMrI,MAAO,CAACtD,MAAO,YAArB,sEAA3B,kQAAqI,0BAAMsD,MAAO,CAACtD,MAAO,YAArB,iBAArI,KAC/B8L,IAAuBD,GAAsB,6IAYnE,SAASU,KACL,IAAM5b,EAAWgN,cADJ,EAGaG,mBAAoB,CAC1CvF,MAAO,GACPK,SAAU,KALD,oBAGNnD,EAHM,KAGC+W,EAHD,KAQP/M,EAAW,SAACrB,GACd,IAAMxJ,EAAOwJ,EAAMyB,OAAOjL,KACpBzB,EAAQiL,EAAMyB,OAAO1M,MAE3BqZ,EAAS,eACF/W,EADC,eAEHb,EAAOzB,MAIV2M,EAAO,yCAAG,6BAAA/D,EAAA,sEACeS,GAAY/G,EAAM8C,MAAO9C,EAAMmD,UAD9C,OACN6F,EADM,OAGZ9N,EACI+B,EAAgB,CACZkI,QAAS6D,EAAaK,KACtBjM,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjCyH,QAAS+D,EAAaC,OAASpM,EAAc0Z,QAAU1Z,EAAc0M,MACrEnE,aAAc,CACVE,WAAY,SACZD,SAAU,cAXd,2CAAH,qDAkBPuR,EAAa5W,EAAM8C,MAAM8L,OAAS,GAAK5O,EAAMmD,SAASyL,OAAS,EAErE,OACI,kBAAC,GAAD,CAAQiI,IAAK,GACT,yBAAKrN,UAAU,gBACX,0BAAMA,UAAU,eACZ,2BAAO4E,YAAY,4EAAgBzS,KAAK,OAAOwD,KAAK,QAAQzB,MAAQsC,EAAM8C,OAAS,GAAKkH,SAAWA,IACnG,2BAAOoE,YAAY,kFAAiBzS,KAAK,WAAWwD,KAAK,WAAWzB,MAAQsC,EAAMmD,UAAY,GAAK6G,SAAWA,KAElH,yBAAKR,UAAU,0BACX,4BACIA,UAAU,kBACVS,SAAW2M,EACX/I,MAAQ+I,EAAapB,GAAoB,GACzCnL,QAAUA,GAJd,2FAcpB,SAAS2M,KAAQ,IAAD,EACsClM,aAAU,GAA7CmM,EADH,EACJjX,MAA4BkX,EADxB,EACgBnM,OACX7C,cAEjB,OACI,kBAAC,GAAD,CAAQ2O,IAAK,GACT,yBAAKrN,UAAU,QACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,wBAAwBa,QAAU,kBAAM6M,EAAU,IAAKrJ,MAAQ,CAACtD,MAAuB,IAAhB0M,EAAoB,sBAAwB,KAAlI,sEAGA,yBAAKzN,UAAU,2BAA2Ba,QAAU,kBAAM6M,EAAU,IAAKrJ,MAAQ,CAACtD,MAAuB,IAAhB0M,EAAoB,sBAAwB,KAArI,uEAIJ,yBAAKzN,UAAU,0BACO,IAAhByN,GAAqB,kBAACH,GAAD,MACL,IAAhBG,GAAqB,kBAACrB,GAAD,U,wCC1N/C,SAASuB,GAAgBrP,GAAe,IAC5B8B,EAAoC9B,EAApC8B,KAAME,EAA8BhC,EAA9BgC,IAAKC,EAAyBjC,EAAzBiC,IAAKrM,EAAoBoK,EAApBpK,MAAOsM,EAAalC,EAAbkC,SAE/B,OACI,6BACI,kBAACoN,GAAA,EAAD,CACI5N,UAAU,mBACV6N,eAAe,kBACfC,eAAe,kBACfxN,IAAMA,EACNC,IAAMA,EACNH,KAAOA,EACPlM,MAAQA,EACR6Z,YAAa,SAACzP,EAAO9H,GAAR,OAAkB,wBAAS8H,IACxCkC,SAAW,SAACjH,GAAD,OAAciH,EAASjH,OCnBlD,SAASyU,KACL,IACMxV,EADQiG,aAAY,SAACjI,GAAD,OAAkBA,GAAS,MAClCmE,UAAUnC,KAEvB9G,EAAWgN,cAEXsM,EAAiB,SAACvT,EAAeW,I,uCACnC6V,CAAwBxW,EAAOW,GAC/B1G,EjCiDR,SAAwB+F,EAAeW,GACnC,OAAO,SAAC1G,EAAUC,GACdD,EAAS,CACLS,KAlEoB,mBAmEpB8G,UAAWxB,EACXW,QAASA,KiCtDJ8V,CAAezW,EAAOW,KAYnC,OACI,yBAAK4H,UAAU,kBATRxH,EAAKzB,KAAI,SAAAuI,GAAC,OACb,yBAAKU,UAAU,uBAAuBrM,IAAG,UAAM2L,EAAE7H,MAAR,YAAiB6H,EAAE7H,QACxD,yBAAKuI,UAAU,8BAA+BV,EAAE3J,MAChD,kBAACgY,GAAD,CAAiBrN,KAAM,EAAKC,IAAK,EAAKH,KAAM,GAAKlM,MAAQoL,EAAElH,QAAUoI,SAAW,SAAC1C,GAAD,OAAekN,EAAe1L,EAAE7H,MAAOqG,W,cCXvI,SAASqQ,GAAU7P,GAAe,IACtB8P,EAA8C9P,EAA9C8P,YAAaC,EAAiC/P,EAAjC+P,aAAcna,EAAmBoK,EAAnBpK,MAAOoa,EAAYhQ,EAAZgQ,QADb,EAEOC,eAFP,oBAEtBC,EAFsB,KAETC,EAFS,OAGSF,eAHT,oBAGtBG,EAHsB,KAGRC,EAHQ,KAgBvBC,EAAyB,CAC3BtJ,SAAU,OACVvE,MAAO,UACP8N,cAAe,SACf5C,QAASuC,EAAc,GAAK,GAG1BM,EAA0B,CAC5BxJ,SAAU,OACVvE,MAAO,UACP8N,cAAe,SACf5C,QAASyC,EAAe,GAAK,GAmBjC,OACI,yBAAKrK,MAzCuB,CAC5B1P,SAAU,WACV0Q,QAAS,OACT0J,eAAgB,gBAChBC,WAAY,SACZnF,MAAO,QACPtE,UAAW,SACX0J,OAAQ,WAmCJ,yBAAK5K,MAbW,CACpBkB,UAAW,SACX5Q,SAAU,WACVmV,IAAK,UACLC,KAAM,MACNC,UAAW,mBACXH,MAAO,OACP9I,MAAO,OACP2J,WAAY,wBAMF4D,GAGN,yBAAKjK,MAAQuK,EAAyB/N,QAAUuN,EAAczK,IAAM8K,GAChE,kBAAC,KAAD,CAAoBpK,MAAQ,CAACwK,cAAe,aAEhD,yBAAKxK,MAzBc,CACvBwF,MAAO,QACPvE,SAAU,WAwBApR,GAEN,yBAAKmQ,MAAQyK,EAA0BjO,QAAUwN,EAAe1K,IAAMgL,GAClE,kBAAC,KAAD,CAAqBtK,MAAQ,CAACwK,cAAe,cCtD7D,SAASK,GAAoB5Q,GAAe,IAChC6Q,EAAgD7Q,EAAhD6Q,QAASpX,EAAuCuG,EAAvCvG,OAAQqX,EAA+B9Q,EAA/B8Q,SAAUC,EAAqB/Q,EAArB+Q,WAAYxP,EAASvB,EAATuB,KAEzCyP,EADiB7Q,aAAY,SAACjI,GAAD,OAAkBA,GAAS,MAC3BmE,UAAUlC,KAAKV,GAAQN,MAEpD/F,EAAWgN,cA2BjB,OACI,yBAAKsB,UAAU,kBACX,kBAACmO,GAAD,CAAWC,YAdC,WAChB,IAAImB,EAAID,GAERC,GAAK,IACI,IACLA,EAAI,GAGR7d,EAASoG,EAAeC,EAAQwX,IAChCH,EAASrX,EAAQsX,EAAWF,EAAQpX,GAAQwX,MAKDlB,aA3B3B,WAChB,IAAMjJ,EAAS+J,EAAQpX,GAAQqN,OAAS,EACpCmK,EAAID,GAERC,GAAK,GACGnK,IACJmK,EAAInK,GAGR1T,EAASoG,EAAeC,EAAQwX,IAChCH,EAASrX,EAAQsX,EAAWF,EAAQpX,GAAQwX,MAiB4Brb,MAAQib,EAAQpX,GAAQuX,GAAehB,QAAUzO,KC1CjI,IAAM2P,GAAY,CACd,SAAY,EACZ,OAAU,EACV,OAAU,EACV,KAAQ,EACR,OAAU,EACV,KAAQ,EACR,KAAQ,EACR,MAAS,EACT,KAAQ,EACR,MAAS,EACT,QAAW,GACX,MAAS,GACT,MAAS,GACT,OAAU,GACV,QAAW,GACX,QAAW,GACX,SAAY,GACZ,MAAS,GACT,MAAS,GACT,OAAU,GACV,QAAW,GACX,OAAU,GACV,KAAQ,GACR,KAAQ,IAGNC,GAAY,CACd,OAAU,GACV,OAAU,GACV,QAAW,GACX,OAAU,GACV,OAAU,GACV,SAAY,GACZ,IAAO,GACP,IAAO,GACP,OAAU,GACV,OAAU,GACV,OAAU,GACV,OAAU,GACV,OAAU,GACV,OAAU,GACV,OAAU,GACV,QAAW,GACX,QAAW,GACX,OAAU,GACV,UAAa,GACb,UAAa,GACb,KAAQ,GACR,MAAS,IAKPN,GAAU,CAAElX,OAFH,CAAC,WAAY,SAAU,SAAU,OAAQ,SAAU,OAAQ,OAAQ,QAAS,OAAQ,QAAS,UAAW,QAAS,QAAS,SAAU,UAAW,UAAW,WAAY,QAAS,QAAS,SAAU,UAAW,SAAU,OAAQ,QAEpNC,OADX,CAAC,SAAU,SAAU,UAAW,SAAU,SAAU,WAAY,MAAO,MAAO,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAAW,UAAW,SAAU,YAAa,YAAa,OAAQ,UAGrO,SAASwX,KACL,IAAMN,EAAW,SAACzZ,EAAW4D,I,qCACzBoW,CAAqB,CAACha,OAAM4D,SAG1B/C,EAAQiI,aAAY,SAACjI,GAAD,OAAkBA,GAAS,MAC/C9E,EAAWgN,cAEX8B,EAAW,SAAC7K,EAAc4D,GAC5B6V,EAASzZ,EAAM4D,GACf7H,EpCUR,SAAqBiE,EAAczB,GAC/B,OAAO,SAACxC,EAAUC,GACdD,EAAS,CACLS,KApFiB,gBAqFjBwD,OACAzB,WoCfK0b,CAAYja,EAAM4D,KAG/B,OACI,yBAAKyG,UAAU,4BACX,kBAACkP,GAAD,CAAqBnX,OAAS,SAAWqX,SAAWA,EAAWD,QAAUA,GAAUE,WAAaG,GAAY3P,KAAK,6BACjH,kBAACqP,GAAD,CAAqBnX,OAAS,SAAWqX,SAAWA,EAAWD,QAAUA,GAAUE,WAAaI,GAAY5P,KAAK,6BAEjH,yBAAKG,UAAU,kCAAkCqE,MAAO,CAAC4K,OAAQ,WAAjE,oDACA,kBAACtB,GAAD,CAAiBrN,IAAM,EAAIC,IAAM,EAAIH,KAAO,GAAMlM,MAAQsC,EAAMmE,UAAUjC,WAAa8H,SAAW,SAACjH,GAAUiH,EAAS,aAAcjH,MAEpI,yBAAKyG,UAAU,kCAAkCqE,MAAO,CAAC4K,OAAQ,WAAjE,qDACA,kBAACtB,GAAD,CAAiBrN,IAAM,EAAIC,IAAM,EAAIH,KAAO,GAAMlM,MAAQsC,EAAMmE,UAAUhC,KAAO6H,SAAW,SAACjH,GAAUiH,EAAS,OAAQjH,OC9EpI,IAAMsW,GAAW,CACbC,KAAM,CACF,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC9E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChF,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAExCC,OAAQ,CACJ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAIxE,SAASC,KACL,IAAMxZ,EAAQiI,aAAY,SAACjI,GAAD,OAAkBA,GAAS,MAC/C9E,EAAWgN,cACX9G,EAASpB,EAAMmE,UAAU/C,OAC3BqY,EAASzZ,EAAMmE,UAAU/B,KACzBC,EAAcrC,EAAMmE,UAAU9B,YAE5BuV,EAAW,yCAAG,uBAAAtR,EAAA,6DAChBmT,GAAU,GAEG,IACTA,EAASJ,GAASjY,GAAQwN,OAAS,GAJvB,SAQVzH,GAAiBkS,GAASjY,GAAQqY,IARxB,OAUhBve,EACImG,EAAUoY,IAXE,2CAAH,qDAeX5B,EAAY,yCAAG,uBAAAvR,EAAA,6DACjBmT,GAAU,GAEGJ,GAASjY,GAAQwN,OAAS,IACnC6K,EAAS,GAJI,SAQXtS,GAAiBkS,GAASjY,GAAQqY,IARvB,OAUjBve,EACImG,EAAUoY,IAXG,2CAAH,qDAuClB,OACI,yBAAKjQ,UAAU,kBACX,kBAACmO,GAAD,CAAWja,MAAQ2b,GAASjY,GAAQqY,GAAU5B,aAAeA,EAAeD,YAAcA,EAAcE,QAAQ,sDAChH,kBAACH,GAAD,CAAWja,MAAQ2E,EAAcwV,aA3BX,YAC1BxV,GAAe,GACG,KACdA,EAAc,GAIlBkF,GAAsBlF,GAEtBnH,EAASgG,EAAamB,KAkBsDuV,YAfnD,YACzBvV,GAAe,GACG,IACdA,EAAc,IAIlBkF,GAAsBlF,GAEtBnH,EAASgG,EAAamB,KAM2FyV,QAAQ,6DCjFjI,SAAS4B,KAAoB,IACjBpE,EAAWC,KAAXD,OAQFqE,EAAuB,SAACtS,EAAwBC,GACjC,kBAANA,G,uCACPsS,CAAmBvS,EAAOC,IAI5BuS,EAAiB,CACnB9K,UAAW,SACXD,SAAU,SACVvE,MAAO,OACPuP,cAAe,QACf5F,WAAY,gCAGhB,OACI,yBAAK1K,UAAU,qBACf,kBAAC8L,EAAD,CAAQuB,IAAK,GACT,6BACI,6BACI,0BAAMhJ,MAAOgM,GAAb,+KAEA,kBAACzC,GAAA,EAAD,CACI5N,UAAU,iBACV6N,eAAe,gBACfC,eAAe,gBACfxN,IAAM,KACNC,IAAM,KACNH,KAAO,GACPF,aAAe,KACf6N,YAAa,SAACzP,EAAO9H,GAAR,OAAkB,wBAAS8H,IACxCkC,SAAW,SAACkL,GAAD,OAAYyE,EAAqB,IAAKzE,OAGzD,6BACI,0BAAMrH,MAAOgM,GAAb,2LAEA,kBAACzC,GAAA,EAAD,CACI5N,UAAU,iBACV6N,eAAe,gBACfC,eAAe,gBACfxN,IAAM,KACNC,IAAM,KACNH,KAAO,GACPF,aAAe,OACf6N,YAAa,SAACzP,EAAO9H,GAAR,OAAkB,wBAAS8H,IACxCkC,SAAW,SAACkL,GAAD,OAAYyE,EAAqB,IAAKzE,OAGzD,6BACI,0BAAMrH,MAAOgM,GAAb,6HAEA,kBAACzC,GAAA,EAAD,CACI5N,UAAU,iBACV6N,eAAe,gBACfC,eAAe,gBACfxN,IAAM,EACNC,IAAM,IACNL,aAAe,IACf6N,YAAa,SAACzP,EAAO9H,GAAR,OAAkB,wBAAS8H,IACxCkC,SAjEU,SAACtM,GACN,kBAAVA,G,qCACPqc,CAAoBrc,UCXhC,SAASsc,GAAMtc,EAAeoM,EAAaC,GAOvC,OANIrM,EAAQoM,IACRpM,EAAQoM,GAERpM,EAAQqM,IACRrM,EAAQqM,GAELrM,ECEX,SAASuc,KACL,IAAMja,EAAQiI,aAAY,SAACjI,GAAD,OAAkBA,GAAS,MAC/C9E,EAAWgN,cAIXgS,EAAW,SAAClZ,EAAWC,GACzB,OAAQD,GACJ,KAAK,EACD,OAAOgZ,GAAM/Y,EAAO,EAAG,IAE3B,KAAK,EACD,OAAO+Y,GAAM/Y,EAAO,EAAG,IAE3B,KAAK,EACD,OAAO+Y,GAAM/Y,EAAO,EAAG,IAE3B,KAAK,EACD,OAAO+Y,GAAM/Y,EAAO,EAAG,IAE3B,KAAK,EACD,OAAO+Y,GAAM/Y,EAAO,EAAG,IAE3B,KAAK,EACD,OAAO+Y,GAAM/Y,EAAO,EAAG,GAE3B,KAAK,EACD,OAAO+Y,GAAM/Y,EAAO,EAAG,IAE3B,KAAK,EACD,OAAO+Y,GAAM/Y,EAAO,EAAG,IAE3B,KAAK,EACD,OAAO+Y,GAAM/Y,EAAO,EAAG,GAE3B,KAAK,EACD,OAAO+Y,GAAM/Y,EAAO,EAAG,IAE3B,KAAK,GACD,OAAO+Y,GAAM/Y,EAAO,EAAG,IAE3B,KAAK,GACD,OAAO+Y,GAAM/Y,EAAO,EAAG,IAE3B,KAAK,GACD,OAAO+Y,GAAM/Y,EAAO,EAAG,GAE3B,QACI,OAAQ,IA4CpB,OACI,yBAAKuI,UAAU,0BAvBRxJ,EAAMmE,UAAUpC,YAAYxB,KAAI,SAAAuI,GAAM,IAAD,EACX9I,EAAMmE,UAAUpC,YAAY+G,EAAE9H,WAAnDC,EADgC,EAChCA,MAEJvD,EAAauD,EAMjB,OAJkB,KALsB,EACzBD,YAKXtD,EAAkB,IAAVuD,EAAc,eAAO,sBAI7B,yBAAK9D,IAAG,UAAM2L,EAAE3J,KAAR,YAAgB2J,EAAE7H,QACtB,kBAAC0W,GAAD,CACIC,YAAc,kBA7BnB,SAAC5W,EAAmBC,GAC/BA,EAAQiZ,EAASlZ,IAAaC,GAC9B/F,EACI6F,EAAmBC,EAAWkZ,EAASlZ,EAAWC,KAEtDuG,GAAwBxG,EAAWC,GAwBCkZ,CAAOrR,EAAE9H,UAAW8H,EAAE7H,QAC1C4W,aAAe,kBAtBnB,SAAC7W,EAAmBC,GAChCA,EAAQiZ,EAASlZ,IAAaC,GAC9B/F,EACI6F,EAAmBC,EAAWkZ,EAASlZ,EAAWC,KAEtDuG,GAAwBxG,EAAWC,GAiBEmZ,CAAQtR,EAAE9H,UAAW8H,EAAE7H,QAC5CvD,MAAQA,EACRoa,QAAUhP,EAAE3J,YCrFpC,SAASkb,KACL,IAAMra,EAAQiI,aAAY,SAACjI,GAAD,OAAkBA,GAAS,MAC/C9E,EAAWgN,cACb5F,EAAOtC,EAAMmE,UAAU7B,KAmB3B,OACI,yBAAKkH,UAAU,kBACX,kBAACmO,GAAD,CACIC,YAAc,kBAlBtBtV,EAAO0X,GADP1X,GAAQ,EACW,EAAG,IACtBpH,EACI4F,EAAawB,SAEjBmF,GAAiBnF,IAeTuV,aAAe,kBAXvBvV,EAAO0X,GADP1X,GAAQ,EACW,EAAG,IACtBpH,EACI4F,EAAawB,SAEjBmF,GAAiBnF,IAQT5E,MAAQ4E,EACRwV,QAAU,uDCnBPvC,KAAXD,OAER,SAASgF,GAAexS,GAA4B,IACxCyS,EAAUzS,EAAVyS,MAER,OACI,yBAAK1M,MAAQ,CAACiB,SAAU,SAAU2J,OAAQ,SAAU1J,UAAW,SAAUyL,cAAe,cAAiBD,GAIjH,SAASE,KACSxS,aAAY,SAACjI,GAAD,OAAkBA,EAAMmE,WAAa,MAA/D,IACM0R,EAAgB5N,aAAY,SAACjI,GAAD,OAAkBA,EAAMkE,KAAKrB,UAAY,MACrE3H,EAAWgN,cACTpF,EAA2B+S,EAA3B/S,MAAOM,EAAoByS,EAApBzS,MAAOD,EAAa0S,EAAb1S,SAEhBuX,EAAa,yCAAG,WAAOtZ,GAAP,UAAAkF,EAAA,sEACZY,KADY,uBAEZD,GAAmB7F,GAFP,OAGlBlG,EACIiG,EAAUC,IAEdlG,G1CiBG,SAACA,EAAUC,GACdD,EAAS,CACLS,KA3D+B,mC0CkCjB,2CAAH,sDAWbgf,EAAY,yCAAG,uBAAArU,EAAA,sEAEXY,KAFW,OAGjBhM,G1CSG,SAACA,EAAUC,GACdD,EAAS,CACLS,KA3D+B,mC0C6ClB,2CAAH,qDAQZif,EAAO,yCAAG,6BAAAtU,EAAA,sEACesB,GAAqB,CAC5C9E,MAAOA,EAAMC,IACbK,MAAOA,EAAML,IACbI,SAAUA,EAASJ,MAJX,OACNiG,EADM,OAQZ9N,EACI+B,EAAgB,CACZkI,QAAS6D,EAAaK,KAClBjM,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjCyH,QAAS+D,EAAaC,OAASpM,EAAc0Z,QAAU1Z,EAAc0M,MACrEnE,aAAc,CACVE,WAAY,SACZD,SAAU,cAM9BnK,EAAS6J,YAAK,UAtBF,2CAAH,qDAyBb,OACI,yBAAKyE,UAAU,aACX,kBAACqR,GAAA,EAAD,CACIC,UAAW,EACX5H,KAAO,KACP6H,UAAY,OACZC,MAAO,EACPxR,UAAU,oBAEV,kBAACqR,GAAA,EAAOI,OAAR,KACI,0BAAMzR,UAAU,kBAAkBa,QAAU,kBAAMsQ,MAAlD,qDAEJ,kBAACE,GAAA,EAAOK,KAAR,KACI,yBAAK1R,UAAU,qBACX,yBAAKA,UAAU,oBACX,kBAAC,KAAD,CAAQ2R,WAAW,QAAQ5Q,MAAM,MAAM2I,KAAK,KAAKkI,QAAM,EAAC/Q,QAAU,kBAAMqQ,EAAc,UAAtF,8CACA,kBAAC,KAAD,CAAQS,WAAW,QAAQ5Q,MAAM,SAAS2I,KAAK,KAAKkI,QAAM,EAAC/Q,QAAU,kBAAMqQ,EAAc,YAAzF,+CAEJ,kBAACJ,GAAD,CAAgBC,MAAM,6BACtB,kBAACrB,GAAD,MACA,kBAACoB,GAAD,CAAgBC,MAAM,6BACtB,kBAAC/C,GAAD,MACA,kBAAC8C,GAAD,CAAgBC,MAAM,kEACtB,kBAACF,GAAD,MACA,kBAACb,GAAD,MACA,kBAACS,GAAD,QAIR,kBAACY,GAAA,EAAOQ,OAAR,KACI,yBAAKxN,MAAQ,CAACkB,UAAW,WACrB,kBAAC,KAAD,CAAQoM,WAAW,QAAQjI,KAAK,KAAKrF,MAAO,CAACkB,UAAW,SAAUsE,MAAO,QAAShJ,QAAUuQ,GAA5F,2CAKZ,kBAAClB,GAAD,O,WC7GJpE,GAAWC,KAAXD,OAER,SAASgG,KACYpT,cAEjB,OACI,kBAAC,GAAD,CAAQ2O,IAAK,GACT,yBAAKrN,UAAU,cACX,yBAAKA,UAAU,4BCqB/B,SAAS+R,KACP,OAAQ,8BAGV,SAASC,KACP,IAEQ3c,EAFMoJ,aAAY,SAAClE,GAAD,OAAgBA,GAAS,MAChB1I,GAAGuD,UAC9BC,KAER,OACE,yBAAK2K,UAAU,OACX3K,GAAQ,kBAAC6U,GAAD,MACV,kBAAC,GAAD,MACA,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO+H,OAAK,EAACC,KAAK,SAASjR,UAAY8Q,KACvC,kBAAC,KAAD,CAAOE,OAAK,EAACC,KAAK,WAAWjR,UAAYqF,KACzC,kBAAC,KAAD,CAAO2L,OAAK,EAACC,KAAK,kBAAkBjR,UAAY2K,KAChD,kBAAC,KAAD,CAAOqG,OAAK,EAACC,KAAK,QAAQjR,UAAYuM,KACtC,kBAAC,KAAD,CAAOyE,OAAK,EAACC,KAAK,aAAajR,UAAYgQ,KAC3C,kBAAC,KAAD,CAAOgB,OAAK,EAACC,KAAK,aAAajR,UAAY6Q,MAE7C,kBAAC,KAAD,CAAUK,GAAG,cC/CnB,SAASC,KACL,OACI,kBAAC,IAAD,CAAU7X,MAAQA,IACd,kBAAC,oBAAD,CAAkB8X,iBAAkB,EAAQC,SAAW,EAAIC,iBAAmB,KAC1E,kBAAC,IAAD,CAAiBrY,QAAUA,IACvB,kBAAC8X,GAAD,SCJpBQ,IAASC,OACP,kBAACL,GAAD,MACAM,SAASC,eAAe,SxDgIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/X,QAAQ+X,MAAMA,EAAMxX,YyDpIxBtC,oBAAS,wBAAwB,SAACtH,GAC9BiI,GAAQoZ,KAAK,sBAAuBrhB,MAGxCsH,oBAAS,2BAA2B,SAACtH,GACjCiI,GAAQoZ,KAAK,0BAA2BrhB,MAG5CsH,oBAAS,2BAA2B,SAAC9D,GACjCyE,GAAQoZ,KAAK,yBAA0B7d,MAG3C8D,oBAAS,kBAAkB,SAACpG,GACxBmI,QAAQC,IAAI,sCACZD,QAAQC,IAAI,sCACZD,QAAQC,IAAIpI,GACZ+G,GAAQoZ,KAAK,YAAangB,EAAK4M,KAAM5M,EAAKwI,QAASxI,EAAKyI,WAG5DrC,oBAAS,sBAAsB,SAACjE,GAC5B4E,GAAQoZ,KAAK,qBAAsBhe,MAGvCiE,oBAAS,iBAAiB,SAAC1D,GACvBqE,GAAQoZ,KAAK,YAAazd,MAG9B0D,oBAAS,uBAAuB,SAACvE,GAC7BkF,GAAQoZ,KAAK,sBAAuBte,MAGxCuE,oBAAS,sBAAsB,SAACtE,GAC5BiF,GAAQoZ,KAAK,qBAAsBre,MAGvCsE,oBAAS,uBAAuB,SAACrE,GAC7BgF,GAAQoZ,KAAK,sBAAuBpe,MAGxCqE,oBAAS,4BAA4B,SAACrE,GAClCgF,GAAQoZ,KAAK,2BAA4Bpe,MAG7CqE,oBAAS,4BAA4B,SAACrD,GAClCgE,GAAQoZ,KAAK,2BAA4Bpd,Q","file":"static/js/main.ea37df3f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/40.4f68236c.svg\";","module.exports = __webpack_public_path__ + \"static/media/item_weapon_ak47.4540b0aa.png\";","module.exports = __webpack_public_path__ + \"static/media/item_armor.54e93891.png\";","module.exports = __webpack_public_path__ + \"static/media/item_ammo_shotgun.ad78f4ac.png\";","module.exports = __webpack_public_path__ + \"static/media/item_clothes_mask_1.df3617fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item_clothes_mask_2.b1f07183.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item_clothes_mask_3.4a1f8673.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item_clothes_mask_4.ce2bafeb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item_clothes_mask_5.fcc186f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100.504c8166.svg\";","module.exports = __webpack_public_path__ + \"static/media/80.d75a1d48.svg\";","module.exports = __webpack_public_path__ + \"static/media/60.a0e448c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/40.2ba0f73e.svg\";","module.exports = __webpack_public_path__ + \"static/media/20.d04326c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.78f4b6ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/100.bd994074.svg\";","module.exports = __webpack_public_path__ + \"static/media/80.52c8315a.svg\";","module.exports = __webpack_public_path__ + \"static/media/60.9dfb8ce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.d831e46c.svg\";","module.exports = __webpack_public_path__ + \"static/media/100.05b25b95.svg\";","module.exports = __webpack_public_path__ + \"static/media/80.a2558ffa.svg\";","module.exports = __webpack_public_path__ + \"static/media/60.efae3775.svg\";","module.exports = __webpack_public_path__ + \"static/media/40.2e7a3e76.svg\";","module.exports = __webpack_public_path__ + \"static/media/15.a7268e06.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.1954e3cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/100.4510934c.svg\";","module.exports = __webpack_public_path__ + \"static/media/70.c29a32e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/40.68dff684.svg\";","module.exports = __webpack_public_path__ + \"static/media/10.6eed6b11.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.9926f17b.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/* ОПИСАНИЕ ПРЕДМЕТА */\r\nexport interface BodyArmourData extends ItemData {\r\n    defence?: number;\r\n}\r\n\r\nexport interface WeaponData extends ItemData {\r\n    clip?: number;\r\n}\r\n\r\n/* ОПИСАНИЕ ПРЕДМЕТА */\r\nexport enum ItemType {\r\n    WEAPON = 'WEAPON',\r\n    ARMOR = 'ARMOR',\r\n    COMMON = 'COMMON',\r\n    CLOTHES = 'CLOTHES',\r\n}\r\n\r\nexport enum ItemKey {\r\n    ITEM_WEAPON_AK47 = 'ITEM_WEAPON_AK47',\r\n    ITEM_ARMOR = 'ITEM_ARMOR',\r\n    ITEM_AMMO_SHOTGUN = 'ITEM_AMMO_SHOTGUN',\r\n    ITEM_CLOTHES_MASK_1 = 'ITEM_CLOTHES_MASK_1',\r\n    ITEM_CLOTHES_MASK_2 = 'ITEM_CLOTHES_MASK_2',\r\n    ITEM_CLOTHES_MASK_3 = 'ITEM_CLOTHES_MASK_3',\r\n    ITEM_CLOTHES_MASK_4 = 'ITEM_CLOTHES_MASK_4',\r\n    ITEM_CLOTHES_MASK_5 = 'ITEM_CLOTHES_MASK_5',\r\n}\r\n\r\nexport type Item = {\r\n    key: ItemKey;\r\n    amount: number;\r\n    data: ItemData;\r\n}\r\n\r\nexport type ItemData = {\r\n    type: ItemType;\r\n    name: string; // Название предмета.\r\n    description: string;\r\n    maxStackCount: number; // Максимальный стак предмета.\r\n    weight: number; // Вес предмета (1 шт).\r\n    serverId: string;\r\n    shortid: string;\r\n    isDelete: boolean; // Удалить после использования?\r\n}\r\n\r\nexport interface DataBodyArmour extends ItemData {\r\n    defence?: number;\r\n}\r\n\r\nexport interface DataWeapon extends ItemData {\r\n    clip?: number;\r\n}\r\n\r\nexport interface DataBackpack extends ItemData {\r\n    slots: number;\r\n}","import { Item } from \"../types\";\r\nimport shortid from 'shortid';\r\n\r\nexport const SET_INVENTORY_ITEMS = 'SET_INVENTORY_ITEMS';\r\nexport const SET_GROUND_ITEMS = 'SET_GROUND_ITEMS';\r\nexport const SET_INVENTORY_SLOTS = 'SET_INVENTORY_SLOTS';\r\nexport const SET_SNACKBAR = 'SET_SNACKBAR';\r\nexport const GET_INVENTORY_ITEMS = 'GET_INVENTORY_ITEMS';\r\n\r\nconst deleteInventoryItemById = (id: number) => {\r\n    return (dispatch, getState) => {\r\n        if (id === -1) {\r\n            return;\r\n        }\r\n\r\n        const { UI } = getState();\r\n        const { inventory } = UI;\r\n        const { items: inventoryItems } = inventory;\r\n        const invItems = [...inventoryItems];\r\n\r\n        invItems.splice(id, 1);\r\n        dispatch(\r\n            setInventoryItems(invItems)\r\n        );\r\n    };\r\n};\r\n\r\nconst addInventoryItem = () => {\r\n    return (dispatch, getState) => {\r\n        console.log('addInventoryItem getState', getState());\r\n    };\r\n};\r\n\r\nconst stackItems = (currentItemIndex: number, nextItemIndex: number) => {\r\n    return (dispatch, getState) => {\r\n        const { UI } = getState();\r\n        const { inventory } = UI;\r\n        const { items } = inventory;\r\n        const invItems = [...items];\r\n\r\n        if (currentItemIndex === -1 || nextItemIndex === -1) {\r\n            return;\r\n        }\r\n\r\n        const currentItem = {...items[currentItemIndex]};\r\n        const nextItem = {...items[nextItemIndex]};\r\n\r\n        if (currentItem.key !== nextItem.key) {\r\n            return;\r\n        }\r\n\r\n        const maxStackCount = currentItem.data.maxStackCount;\r\n        const sum = currentItem.amount + nextItem.amount;\r\n\r\n        console.log('maxStackCount', maxStackCount);\r\n        console.log('sum', sum);\r\n\r\n        if (sum > maxStackCount) {\r\n            const amount = sum - maxStackCount;\r\n            currentItem.amount = amount;\r\n            nextItem.amount = maxStackCount;\r\n            invItems.splice(currentItemIndex, 1, currentItem);\r\n            invItems.splice(nextItemIndex, 1, nextItem);\r\n        } else {\r\n            nextItem.amount = sum; \r\n            invItems.splice(currentItemIndex, 1, nextItem);\r\n            invItems.splice(nextItemIndex, 1);\r\n        }\r\n\r\n        dispatch({\r\n            type: SET_INVENTORY_ITEMS,\r\n            payload: invItems,\r\n        });\r\n    };\r\n};\r\n\r\nconst setInventorySlots = (slots: number) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_INVENTORY_SLOTS,\r\n            payload: slots,\r\n        })\r\n    };\r\n};\r\n\r\nconst setInventoryItems = (items: Item[]) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_INVENTORY_ITEMS,\r\n            payload: items,\r\n        })\r\n    };\r\n};\r\n\r\n// Разделяет предметы в инвентаре.\r\nconst splitInventoryItemByIndex = (itemId: number, splitCount: number) => {\r\n    return (dispatch, getState) => {\r\n        if (!Number.isInteger(splitCount)) {\r\n            return;\r\n        }\r\n\r\n        if (splitCount <= 0) {\r\n            return;\r\n        }\r\n\r\n        const { UI } = getState();\r\n        const { inventory } = UI;\r\n        const { items } = inventory;\r\n        const invItems = [...items];\r\n        const findItem = JSON.parse(JSON.stringify(invItems[itemId]));\r\n        const newItem = JSON.parse(JSON.stringify(findItem));\r\n        const item = invItems[itemId];\r\n\r\n        if (item.amount <= splitCount) {\r\n            return;\r\n        }\r\n\r\n        const amount = item.amount - splitCount;\r\n        findItem.amount = amount;\r\n        newItem.data.shortid = `__newItem${shortid.generate()}`;\r\n        newItem.amount = splitCount;\r\n    \r\n        invItems.splice(itemId, 1);\r\n        invItems.splice(itemId, 0, findItem, newItem);\r\n        dispatch(setInventoryItems(invItems));\r\n    };\r\n};\r\n\r\nconst setGroundItems = (items: Item[]) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_GROUND_ITEMS,\r\n            payload: items,\r\n        })\r\n    };\r\n};\r\n\r\nexport {\r\n    addInventoryItem,\r\n    setInventoryItems,\r\n    setInventorySlots,\r\n    setGroundItems,\r\n    stackItems,\r\n    splitInventoryItemByIndex,\r\n    deleteInventoryItemById,\r\n}","export const ENQUEUE_SNACKBAR = 'ENQUEUE_SNACKBAR';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const REMOVE_SNACKBAR = 'REMOVE_SNACKBAR';\r\n\r\nexport enum NotifyVariant {\r\n    DEFAULT = 'default',\r\n    SUCCESS = 'success',\r\n    ERROR = 'error',\r\n    WARNING = 'warning',\r\n    INFO = 'info',\r\n}\r\n\r\nenum NotifyVertical {\r\n    TOP = 'top',\r\n    BOTTOM = 'bottom',\r\n}\r\n\r\nenum NotifyHorizontal {\r\n    CENTER = 'center',\r\n    LEFT = 'left',\r\n    RIGHT = 'right',\r\n}\r\n\r\nexport type NotifyOrigin = {\r\n    horizontal: NotifyHorizontal;\r\n    vertical: NotifyVertical;\r\n}\r\n\r\nconst enqueueSnackbar = (notification) => {\r\n    const key = notification.options && notification.options.key;\r\n\r\n    return {\r\n        type: ENQUEUE_SNACKBAR,\r\n        notification: {\r\n            ...notification,\r\n            key: key || new Date().getTime() + Math.random(),\r\n        },\r\n    };\r\n};\r\n\r\nconst closeSnackbar = key => ({\r\n    type: CLOSE_SNACKBAR,\r\n    dismissAll: !key, // dismiss all if no key has been defined\r\n    key,\r\n});\r\n\r\nconst removeSnackbar = key => ({\r\n    type: REMOVE_SNACKBAR,\r\n    key,\r\n});\r\n\r\nexport {\r\n    enqueueSnackbar,\r\n    closeSnackbar,\r\n    removeSnackbar,\r\n}","export enum HudType {\r\n    SET_HEALTH_HUDS = 'SET_HEALTH_HUDS',\r\n    SET_ARMOR_HUDS = 'SET_ARMOR_HUDS',\r\n    SET_HUNGER_HUDS = 'SET_HUNGER_HUDS',\r\n    SET_DEHYDRATION_HUDS = 'SET_DEHYDRATION_HUDS',\r\n    SET_TEMPERATURE_HUDS = 'SET_TEMPERATURE_HUDS',\r\n}\r\n\r\nfunction setHudsData(type: HudType, value: number) {\r\n    return (dispatch, getState) => {\r\n        \r\n        if (value > 100) {\r\n            value = 100;\r\n        }\r\n        if (value < 0) {\r\n            value = 0;\r\n        }\r\n        \r\n        dispatch({\r\n            type: type,\r\n            payload: value,\r\n        });                \r\n    };\r\n}\r\n\r\nexport {\r\n    setHudsData,\r\n}","import { LootCreateData } from \"../reducers/UIReducer\";\r\n\r\nexport const SET_LOOT_CREATE_DATA = 'SET_LOOT_CREATE_DATA';\r\n\r\nfunction setLootCreateData(data: LootCreateData) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_LOOT_CREATE_DATA,\r\n            payload: data,\r\n        });\r\n    };\r\n}\r\n\r\nexport enum PropType {\r\n    OBJECT_HASH = 'objectHash',\r\n    ROTATION = 'rotation',\r\n    POSITION = 'position',\r\n};\r\n\r\nfunction setPropLootCreateData(type: PropType, value: any) {\r\n    return (dispatch, getState) => {\r\n        const { UI } = getState();\r\n        const { lootCreate } = UI;\r\n\r\n        const loot = {...lootCreate};\r\n        loot[type] = value;\r\n\r\n        dispatch({\r\n            type: SET_LOOT_CREATE_DATA,\r\n            payload: loot,\r\n        })\r\n    };\r\n}\r\n\r\nexport {\r\n    setLootCreateData,\r\n    setPropLootCreateData,\r\n}","import { SET_INVENTORY_ITEMS, SET_GROUND_ITEMS, SET_INVENTORY_SLOTS, SET_SNACKBAR, GET_INVENTORY_ITEMS } from \"../actions/inventoryActions\";\r\nimport shortid from 'shortid';\r\nimport { Item, ItemKey, ItemType } from \"../types\";\r\nimport { ENQUEUE_SNACKBAR, CLOSE_SNACKBAR, REMOVE_SNACKBAR } from \"../actions/notificationActions\";\r\nimport { SET_DISPLAY_UI } from \"../actions/displayUIActions\";\r\nimport { HudType } from \"../actions/hudsDataActions\";\r\nimport { SET_LOOT_CREATE_DATA } from \"../actions/lootCreateDataActions\";\r\n\r\nexport type DisplayUI = {\r\n    huds: boolean;\r\n};\r\n\r\nexport type HudsData = {\r\n    health: number;\r\n    armor: number;\r\n    hunger: number;\r\n    dehydration: number;\r\n    temperature: number;\r\n    isBleeding: boolean;\r\n};\r\n\r\nexport type LootCreateData = {\r\n    objectId: number;\r\n    objectHash: string;\r\n    position: number[];\r\n    rotation: number[];\r\n};\r\n\r\nexport type UIState = {\r\n    lootCreate: LootCreateData;\r\n    hudsData: HudsData;\r\n    displayUI: DisplayUI;\r\n    notifications: any[];\r\n    inventory: {\r\n        slots: number;\r\n        items: Item[];\r\n    };\r\n    ground: {\r\n        items: Item[];\r\n    };\r\n}\r\n\r\nconst getData = (): Item[] => [\r\n    {\r\n        key: ItemKey.ITEM_WEAPON_AK47, \r\n        amount: 1,\r\n        data: {\r\n            type: ItemType.WEAPON,\r\n            name: 'Kalash',\r\n            description: 'Убивац',\r\n            maxStackCount: 1,\r\n            serverId: shortid.generate(),\r\n            shortid: shortid.generate(),\r\n            isDelete: false,\r\n            weight: 4,\r\n        }\r\n    },\r\n\r\n    {\r\n        key: ItemKey.ITEM_AMMO_SHOTGUN, \r\n        amount: 25,\r\n        data: {\r\n            type: ItemType.COMMON,\r\n            name: 'SHOTGUN SHELL',\r\n            description: 'Пережаризац',\r\n            maxStackCount: 30,\r\n            serverId: shortid.generate(),\r\n            shortid: shortid.generate(),\r\n            isDelete: false,\r\n            weight: 0.1,\r\n        }\r\n    },\r\n\r\n    {\r\n        key: ItemKey.ITEM_ARMOR, \r\n        amount: 1, \r\n        data: {\r\n            type: ItemType.ARMOR,\r\n            name: 'ARMOR',\r\n            description: 'Защищац',\r\n            maxStackCount: 1,\r\n            serverId: shortid.generate(),\r\n            shortid: shortid.generate(),\r\n            isDelete: false,\r\n            weight: 6,\r\n        }\r\n    },\r\n\r\n    {\r\n        key: ItemKey.ITEM_CLOTHES_MASK_1, \r\n        amount: 1, \r\n        data: {\r\n            type: ItemType.CLOTHES,\r\n            name: 'Маска 1',\r\n            description: 'Одевац',\r\n            maxStackCount: 1,\r\n            serverId: shortid.generate(),\r\n            shortid: shortid.generate(),\r\n            isDelete: true,\r\n            weight: 2,\r\n        }\r\n    },\r\n];\r\n\r\nconst initialState: UIState = {\r\n    lootCreate: {\r\n        objectId: 0,\r\n        objectHash: 'w_sg_pumpshotgun',\r\n        position: [0, 0, 0],\r\n        rotation: [0, 0, 0],\r\n    },\r\n    hudsData: {\r\n        health: 100,\r\n        armor: 100,\r\n        hunger: 100,\r\n        dehydration: 100,\r\n        temperature: 100,\r\n        isBleeding: true,\r\n    },\r\n    displayUI: {\r\n        huds: false,\r\n    },\r\n    notifications: [],\r\n    inventory: {\r\n        slots: 10,\r\n        items: [],\r\n    },\r\n    ground: {\r\n        items: getData(),\r\n    },\r\n};\r\n\r\nfunction UIReducer(state: UIState = initialState, action: any) {\r\n    switch (action.type) {\r\n        case SET_LOOT_CREATE_DATA:\r\n            return {\r\n                ...state,\r\n                lootCreate: { ...action.payload },\r\n            };\r\n\r\n        case HudType.SET_TEMPERATURE_HUDS:\r\n            return {\r\n                ...state,\r\n                hudsData: {\r\n                    ...state.hudsData,\r\n                    temperature: action.payload,\r\n                },\r\n            };\r\n\r\n        case HudType.SET_HUNGER_HUDS:\r\n            return {\r\n                ...state,\r\n                hudsData: {\r\n                    ...state.hudsData,\r\n                    hunger: action.payload,\r\n                },\r\n            };\r\n\r\n        case HudType.SET_DEHYDRATION_HUDS:\r\n            return {\r\n                ...state,\r\n                hudsData: {\r\n                    ...state.hudsData,\r\n                    dehydration: action.payload,\r\n                },\r\n            };\r\n\r\n        case HudType.SET_ARMOR_HUDS:\r\n            return {\r\n                ...state,\r\n                hudsData: {\r\n                    ...state.hudsData,\r\n                    armor: action.payload,\r\n                },\r\n            };\r\n\r\n        case HudType.SET_HEALTH_HUDS:\r\n            return {\r\n                ...state,\r\n                hudsData: {\r\n                    ...state.hudsData,\r\n                    health: action.payload,\r\n                },\r\n            };\r\n\r\n        case SET_DISPLAY_UI:\r\n            return {\r\n                ...state,\r\n                displayUI: action.payload,\r\n            };\r\n\r\n        case ENQUEUE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                notifications: [\r\n                    ...state.notifications,\r\n                    {\r\n                        key: action.key,\r\n                        ...action.notification,\r\n                    },\r\n                ],\r\n            };\r\n\r\n        case CLOSE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                notifications: state.notifications.map(notification => (\r\n                    (action.dismissAll || notification.key === action.key)\r\n                        ? { ...notification, dismissed: true }\r\n                        : { ...notification }\r\n                )),\r\n            };\r\n\r\n        case REMOVE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                notifications: state.notifications.filter(\r\n                    notification => notification.key !== action.key,\r\n                ),\r\n            };\r\n\r\n        case SET_SNACKBAR:\r\n            return { ...state, snackbar: {...action.payload} };\r\n\r\n        case SET_INVENTORY_ITEMS:\r\n            state.inventory.items = action.payload;\r\n            return { ...state };\r\n\r\n        case SET_INVENTORY_SLOTS:\r\n            state.inventory.slots = action.payload;\r\n            return { ...state }\r\n\r\n        case SET_GROUND_ITEMS:\r\n            return { ...state, ground: { items: action.payload } };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    UIReducer,\r\n}","import { DisplayUI } from \"../reducers/UIReducer\";\r\n\r\nexport const SET_DISPLAY_UI = 'SET_DISPLAY_UI';\r\n\r\nfunction setDisplayUI(displayUI: DisplayUI) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_DISPLAY_UI,\r\n            payload: displayUI,\r\n        })\r\n    };\r\n}\r\n\r\nexport {\r\n    setDisplayUI,\r\n}","import { SET_SHOW } from \"../actions/clothesActions\";\r\n\r\nexport type ClothesState = {\r\n    isShow: boolean;\r\n}\r\n\r\nconst initialState: ClothesState = {\r\n    isShow: true,\r\n};\r\n\r\nfunction ClothesReducer(state: ClothesState = initialState, action: any) {\r\n    switch (action.type) {\r\n        case SET_SHOW:\r\n            return { ...state, isShow: action.payload };\r\n\r\n        default:\r\n            return { ...state };\r\n            \r\n    }\r\n}\r\n\r\nexport {\r\n    ClothesReducer,\r\n}","export const SET_SHOW = 'IS_SHOW';\r\n\r\nfunction setShow(bool: boolean) {\r\n    return (dispatch, getState) => {\r\n\r\n        console.log('setShow', bool);\r\n\r\n        dispatch({\r\n            type: SET_SHOW,\r\n            payload: bool,\r\n        });\r\n    };\r\n}\r\n\r\nexport {\r\n    setShow,\r\n}","export const SET_INITIAL_CHARACTER_STATE = 'SET_INITIAL_CHARACTER_STATE';\r\nexport const SET_FACE_FEATURE = 'SET_FACE_FEATURE';\r\nexport const SET_PARENT_INDEX = 'SET_PARENT_INDEX';\r\nexport const SET_HEAD_PROP = 'SET_HEAD_PROP';\r\nexport const SET_HAIR_ID = 'SET_HAIR_ID';\r\nexport const SET_GENDER = 'SET_GENDER';\r\nexport const SET_HAIR_COLOR = 'SET_HAIR_COLOR';\r\nexport const SET_HEAD_OVERLAY_PROP = 'SET_HEAD_OVERLAY_PROP';\r\nexport const SET_EYES_COLOR = 'SET_EYES_COLOR';\r\n\r\nfunction setEyesColor(id: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_EYES_COLOR,\r\n            payload: id,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setHeadOverlayProp(overlayId: number, index: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_HEAD_OVERLAY_PROP,\r\n            index,\r\n            overlayId,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setHairColor(id: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_HAIR_COLOR,\r\n            payload: id,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setGender(gender: 'male' | 'female') {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_GENDER,\r\n            payload: gender,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setHairId(id: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_HAIR_ID,\r\n            payload: id,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setInitialCharacter() {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_INITIAL_CHARACTER_STATE,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setFaceFeature(index: number, feature: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_FACE_FEATURE,\r\n            faceIndex: index,\r\n            feature: feature,\r\n        })\r\n    };\r\n}\r\n\r\nfunction setParentIndex(parent: string, index: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_PARENT_INDEX,\r\n            parent: parent,\r\n            index: index,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setHeadProp(name: string, value: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_HEAD_PROP,\r\n            name,\r\n            value,\r\n        });\r\n    };\r\n}\r\n\r\nexport {\r\n    setInitialCharacter,\r\n    setFaceFeature,\r\n    setParentIndex,\r\n    setHeadProp,\r\n    setHairId,\r\n    setGender,\r\n    setHairColor,\r\n    setHeadOverlayProp,\r\n    setEyesColor,\r\n}","import { SET_FACE_FEATURE, SET_INITIAL_CHARACTER_STATE, SET_PARENT_INDEX, SET_HEAD_PROP, SET_HAIR_ID, SET_GENDER, SET_HAIR_COLOR, SET_HEAD_OVERLAY_PROP, SET_EYES_COLOR } from \"../actions/characterActions\";\r\n\r\nexport type FaceType = {\r\n        index: number;\r\n        feature: number;\r\n        name: string;\r\n}; \r\n\r\nexport type HeadType = {\r\n    mother: {\r\n        index: number;\r\n    };\r\n    father: {\r\n        index: number;\r\n    };\r\n};\r\n\r\nexport type CharacterState = {\r\n    defaultState: {\r\n        face: FaceType[];\r\n        head: HeadType;\r\n        similarity: number;\r\n        skin: number;\r\n        hair: number;\r\n        gender: 'male' | 'female';\r\n        hairColorId: number;\r\n        headOverlay: HeadOverlay[];\r\n        eyes: number;\r\n    };\r\n\r\n    face: FaceType[];\r\n    head: HeadType;\r\n    similarity: number;\r\n    skin: number;\r\n    hair: number;\r\n    gender: 'male' | 'female';\r\n    hairColorId: number;\r\n    headOverlay: HeadOverlay[];\r\n    eyes: number;\r\n};\r\n\r\nexport type HeadOverlay = {\r\n    overlayId: number;\r\n    index: number;\r\n    name: string;\r\n};\r\n\r\nconst defaultHead: HeadType = {\r\n    father: { index: 0 },\r\n    mother: { index: 0 },\r\n};\r\n\r\nconst defaultFace: FaceType[] = [\r\n    { index: 0, feature: -1.0, name: 'Ширина носа' },\r\n    { index: 1, feature: -1.0, name: 'Высота носа' },\r\n    { index: 2, feature: -1.0, name: 'Длина кончика носа' },\r\n    { index: 3, feature: -1.0, name: 'Глубина моста носа' },\r\n    { index: 4, feature: -1.0, name: 'Высота кончика носа' },\r\n    { index: 5, feature: -1.0, name: 'Поломаность носа' },\r\n    { index: 6, feature: -1.0, name: 'Высота бровей' },\r\n    { index: 7, feature: -1.0, name: 'Глубина бровей' },\r\n    { index: 8, feature: -1.0, name: 'Высота скул' },\r\n    { index: 9, feature: -1.0, name: 'Ширина скул' },\r\n    { index: 10, feature: -1.0, name: 'Глубина щек' },\r\n    { index: 11, feature: -1.0, name: 'Размер глаз' },\r\n    { index: 12, feature: -1.0, name: 'Толщина глуб' },\r\n    { index: 13, feature: -1.0, name: 'Ширина челюсти' },\r\n    { index: 14, feature: -1.0, name: 'Форма челюсти' },\r\n    { index: 15, feature: -1.0, name: 'Высота подбородка' },\r\n    { index: 16, feature: -1.0, name: 'Глубина подбородка' },\r\n    { index: 17, feature: -1.0, name: 'Ширина подбородка' },\r\n    { index: 18, feature: -1.0, name: 'Подбородочный отступ' },\r\n    { index: 19, feature: -1.0, name: 'Обхват шеи' },\r\n];\r\n\r\nconst defaultHeadOverlay = [\r\n    { overlayId: 0, index: 0, name: 'Физические деффекты' },\r\n    { overlayId: 1, index: 0, name: 'Волосы на лице' },\r\n    { overlayId: 2, index: 0, name: 'Брови' },\r\n    { overlayId: 3, index: 0, name: 'Старение' },\r\n    { overlayId: 4, index: 0, name: 'Грим' },\r\n    { overlayId: 5, index: 0, name: 'Румянец' },\r\n    { overlayId: 6, index: 0, name: 'Цвет лица' },\r\n    { overlayId: 7, index: 0, name: 'Загар' },\r\n    { overlayId: 8, index: 0, name: 'Губы' },\r\n    { overlayId: 9, index: 0, name: 'Родинки/веснушки' },\r\n    { overlayId: 10, index: 0, name: 'Волосы на груди' },\r\n    { overlayId: 11, index: 0, name: 'Пятна на теле' },\r\n    { overlayId: 12, index: 0, name: 'Оставить пятна на теле?' },\r\n];\r\n\r\nconst initialState: CharacterState = {\r\n    defaultState: {\r\n        headOverlay: JSON.parse(JSON.stringify(defaultHeadOverlay)),\r\n        face: JSON.parse(JSON.stringify(defaultFace)),\r\n        head: JSON.parse(JSON.stringify(defaultHead)),\r\n        similarity: 0.5,\r\n        skin: 0.5,\r\n        hair: 0,\r\n        gender: 'male',\r\n        hairColorId: 0,\r\n        eyes: 0,\r\n    },\r\n    headOverlay: defaultHeadOverlay,\r\n    head: {...defaultHead},\r\n    face: [...defaultFace],\r\n    similarity: 0.5,\r\n    skin: 0.5,\r\n    hair: 0,\r\n    gender: 'male',\r\n    hairColorId: 0,\r\n    eyes: 0,\r\n};\r\n\r\nfunction characterReducer(state = initialState, action: any) {\r\n    switch (action.type) {\r\n\r\n        case SET_EYES_COLOR: {\r\n            state.eyes = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n\r\n        case SET_HEAD_OVERLAY_PROP: {\r\n            state.headOverlay[action.overlayId].index = action.index;\r\n\r\n            return {\r\n                ...state,\r\n            }        \r\n        }\r\n\r\n        case SET_HAIR_COLOR: {\r\n            return {\r\n                ...state,\r\n                hairColorId: action.payload,\r\n            }\r\n        }\r\n\r\n        case SET_GENDER: {\r\n            state.gender = action.payload;\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n\r\n        case SET_HAIR_ID: {\r\n            state.hair = action.payload;\r\n            return {\r\n                ...state,\r\n            }   \r\n        }\r\n\r\n        case SET_HEAD_PROP: {\r\n            return {\r\n                ...state,\r\n                [action.name]: action.value,\r\n            }\r\n        }\r\n\r\n        case SET_PARENT_INDEX: {\r\n            state.head[action.parent].index = action.index;\r\n\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n\r\n        case SET_FACE_FEATURE:\r\n            const characterState = {...state};\r\n            const face = {...characterState.face};\r\n            const faceIndex = action.faceIndex;\r\n            const feature = action.feature;\r\n            face[faceIndex].feature = feature;\r\n\r\n            return {\r\n                ...characterState,\r\n            }\r\n\r\n        case SET_INITIAL_CHARACTER_STATE: {\r\n            return {\r\n                ...state,\r\n                ...JSON.parse(JSON.stringify(state.defaultState)),\r\n            }\r\n        }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    characterReducer,\r\n}","export const UPDATE_REGISTER_PROP = 'UPDATE_REGISTER_PROP';\r\nexport const SET_REGISTER = 'SET_REGISTER';\r\n\r\nfunction updateAuthProp(prop: string, subProp: string, value: any) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: UPDATE_REGISTER_PROP,\r\n            prop,\r\n            subProp,\r\n            value,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setRegister(register: any) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_REGISTER,\r\n            payload: register\r\n        });\r\n    };\r\n}\r\n\r\nexport {\r\n    updateAuthProp,\r\n    setRegister,\r\n}","import { UPDATE_REGISTER_PROP, SET_REGISTER } from \"../actions/authActions\";\r\n\r\nexport type AuthState = {\r\n    register: {\r\n        login: {\r\n            val: string;\r\n            isValid: boolean;\r\n            isTouch: boolean,\r\n            regular: RegExp;\r\n        };\r\n        password: {\r\n            val: string;\r\n            isValid: boolean;\r\n            isTouch: boolean,\r\n            regular: RegExp;\r\n        };\r\n        confirmPassword: {\r\n            val: string;\r\n            isTouch: boolean,\r\n            isValid: boolean;\r\n        };\r\n        email: {\r\n            val: string;\r\n            isValid: boolean\r\n            isTouch: boolean,\r\n            regular: RegExp,\r\n        }\r\n    },\r\n}\r\n\r\nconst initialState: AuthState = {\r\n    register: {\r\n        login: {\r\n            val: '',\r\n            isValid: false,\r\n            isTouch: false,\r\n            regular: /^[a-zA-Z0-9_-]{3,16}$/,\r\n        },\r\n        password: {\r\n            val: '',\r\n            isValid: false,\r\n            isTouch: false,\r\n            regular: /^[0-9a-zA-Z!@#$%^&*]{6,30}$/,\r\n        },\r\n        email: {\r\n            val:'',\r\n            isValid: false,\r\n            isTouch: false,\r\n            regular: /.+@.+\\..+/i,\r\n        },\r\n        confirmPassword: {\r\n            val: '',\r\n            isValid: false,\r\n            isTouch: false,\r\n        }\r\n    }\r\n};\r\n\r\nfunction authReducer(state = initialState, action: any) {\r\n    switch (action.type) {\r\n        case UPDATE_REGISTER_PROP: {\r\n            state.register[action.prop][action.subProp] = action.value;\r\n            \r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n\r\n        case SET_REGISTER: {\r\n            const newState = {...state};\r\n            newState.register = action.payload;\r\n\r\n            return {\r\n                ...newState,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    authReducer,\r\n}","import { combineReducers } from \"redux\";\r\nimport { UIReducer, UIState } from \"./UIReducer\";\r\nimport { ClothesReducer, ClothesState } from \"./clothesReducer\";\r\nimport { connectRouter } from 'connected-react-router'\r\nimport { characterReducer, CharacterState } from \"./characterReducer\";\r\nimport { authReducer, AuthState } from \"./authReducer\";\r\n\r\nexport type State = {\r\n    character: CharacterState;\r\n    UI: UIState;\r\n    clothes: ClothesState;\r\n    auth: AuthState;\r\n}\r\n\r\nconst createRootReducer = (history) => combineReducers({\r\n    auth: authReducer,\r\n    character: characterReducer,\r\n    UI: UIReducer,\r\n    clothes: ClothesReducer,\r\n    router: connectRouter(history),\r\n  });\r\n\r\nexport {\r\n    createRootReducer,\r\n}","import EventEmitter from 'wolfy87-eventemitter';\r\n\r\nconst emitter: any = new EventEmitter();\r\n\r\nexport {\r\n    emitter,\r\n}","import { createMemoryHistory  } from 'history';\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { createRootReducer } from \"../reducers\";\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { PlayerEvents } from '../helpers/playerEvents';\r\n\r\nconst history = createMemoryHistory({\r\n    initialEntries: [ '/one', '/two', { pathname: '/three' } ],\r\n    initialIndex: 1\r\n});\r\n\r\nconst store = createStore(\r\n    createRootReducer(history), \r\n    compose(\r\n        applyMiddleware(\r\n            routerMiddleware(history),\r\n            thunk, \r\n            logger,\r\n        ),\r\n    ),\r\n);\r\n\r\nconsole.log('store', store);\r\n\r\nPlayerEvents(store.dispatch, store.getState);\r\n\r\nexport {\r\n    history,\r\n    store,\r\n}","import { push } from 'connected-react-router';\r\nimport { emitter } from '../emitter';\r\nimport { Item } from '../../types';\r\nimport { setGroundItems, setInventorySlots, setInventoryItems } from '../../actions/inventoryActions';\r\nimport { enqueueSnackbar } from '../../actions/notificationActions';\r\nimport { NotifyOrigin } from '../../actions/notificationActions';\r\nimport { DisplayUI } from '../../reducers/UIReducer';\r\nimport { setDisplayUI } from '../../actions/displayUIActions';\r\nimport { setHudsData, HudType } from '../../actions/hudsDataActions';\r\n\r\nfunction PlayerEvents(dispatch, getState) {\r\n    emitter.on('goToClear', () => {\r\n        dispatch(push('/clear'));\r\n    });\r\n\r\n    emitter.on('goToUIItems', () => {\r\n        dispatch(push('/UIItems'));\r\n    });\r\n\r\n    emitter.on('goToEntityCreate', () => {\r\n        dispatch(push('/goToEntityCreate'));\r\n    });\r\n\r\n    emitter.on('eventSetGroundItems', (items: Item[]) => {\r\n        dispatch(setGroundItems(items));\r\n    });\r\n\r\n    emitter.on('cef_set_inventory_items', (items: Item[]) => {\r\n        dispatch(setInventoryItems(items));\r\n    });\r\n\r\n    emitter.on('setNotify', (msg: string, variant: string, origin: NotifyOrigin) => {\r\n        dispatch(enqueueSnackbar({\r\n            message: msg,\r\n            options: {\r\n                key: new Date().getTime() + Math.random(),\r\n                variant: variant,\r\n                anchorOrigin: {\r\n                    vertical: origin.vertical,\r\n                    horizontal: origin.horizontal,\r\n                },\r\n            },\r\n        }));\r\n    });\r\n\r\n    emitter.on('cef_set_display_ui', (displayUI: DisplayUI) => {\r\n        dispatch(setDisplayUI(displayUI));\r\n    });\r\n\r\n    emitter.on('change_UI', (name: string) => {\r\n        dispatch(push(`/${name}`));\r\n    });\r\n\r\n    emitter.on('cef_set_health_huds', (health: number) => {\r\n        dispatch(\r\n            setHudsData(HudType.SET_HEALTH_HUDS, health)\r\n        );\r\n    });\r\n\r\n    emitter.on('cef_set_armor_huds', (armor: number) => {\r\n        dispatch(\r\n            setHudsData(HudType.SET_ARMOR_HUDS, armor)\r\n        );\r\n    });\r\n\r\n    emitter.on('cef_set_hunger_huds', (hunger: number) => {\r\n        dispatch(\r\n            setHudsData(HudType.SET_HUNGER_HUDS, hunger)\r\n        );\r\n    });\r\n\r\n    emitter.on('cef_set_dehydration_huds', (hunger: number) => {\r\n        dispatch(\r\n            setHudsData(HudType.SET_DEHYDRATION_HUDS, hunger)\r\n        );\r\n    });\r\n\r\n    emitter.on('cef_set_inventory_weight', (weight: number) => {\r\n        dispatch(\r\n            setInventorySlots(weight)\r\n        );\r\n    });\r\n}\r\n\r\nexport {\r\n    PlayerEvents,\r\n}","import img_item_weapon_ak47 from '../assets/items/item_weapon_ak47.png';\r\nimport img_item_armor from '../assets/items/item_armor.png';\r\nimport img_item_ammo_shotgun from '../assets/items/item_ammo_shotgun.png';\r\nimport item_clothes_mask_1 from '../assets/items/item_clothes_mask_1.jpg';\r\nimport item_clothes_mask_2 from '../assets/items/item_clothes_mask_2.jpg';\r\nimport item_clothes_mask_3 from '../assets/items/item_clothes_mask_3.jpg';\r\nimport item_clothes_mask_4 from '../assets/items/item_clothes_mask_4.jpg';\r\nimport item_clothes_mask_5 from '../assets/items/item_clothes_mask_5.jpg';\r\nimport { ItemKey } from '../types';\r\n\r\nconst images = {\r\n    [ItemKey.ITEM_WEAPON_AK47]: img_item_weapon_ak47,\r\n    [ItemKey.ITEM_ARMOR]: img_item_armor,\r\n    [ItemKey.ITEM_AMMO_SHOTGUN]: img_item_ammo_shotgun,\r\n    [ItemKey.ITEM_CLOTHES_MASK_1]: item_clothes_mask_1,\r\n    [ItemKey.ITEM_CLOTHES_MASK_2]: item_clothes_mask_2,\r\n    [ItemKey.ITEM_CLOTHES_MASK_3]: item_clothes_mask_3,\r\n    [ItemKey.ITEM_CLOTHES_MASK_4]: item_clothes_mask_4,\r\n    [ItemKey.ITEM_CLOTHES_MASK_5]: item_clothes_mask_5,\r\n};\r\n\r\nconst getItemImage = (itemKey: ItemKey) => images[itemKey];\r\n\r\nexport {\r\n    getItemImage,\r\n}","import rpc, { call, callClient, callServer } from 'rage-rpc';\r\nimport { LootCreateData } from '../../reducers/UIReducer';\r\n\r\ntype Result = {\r\n    result: boolean;\r\n    text: string;\r\n}\r\n\r\nexport type HeadPropType = {name: 'mother' | 'father' | 'skin' | 'similarity', val: number};\r\n\r\ntype CharacterType = {\r\n    gender: string;\r\n    face: any[];\r\n    head: any;\r\n    eyes: number;\r\n};\r\n\r\n// Подбор предмета с земли.\r\nasync function takeInventoryItemToServer(serverId: string, amount: number): Promise<Result> {\r\n    return callServer('server_take_inventory_item', { serverId, amount });\r\n    return { result: true, text: '\"Взять предмет\". Заглушка' };\r\n}\r\n// Дропает предмет из инвентаря.\r\nasync function dropInventoryItemToServer(itemKey: string, amount: number): Promise<Result> {\r\n    return callServer('server_drop_inventory_item', {itemKey, amount});\r\n    return { result: true, text: '\"Выбосить предмет\". Заглушка' };\r\n}\r\n// Отправка на сервак serverId чтобы использовать предмет в инвентаре по нему.\r\nasync function usesInventoryItemByServerId(serverId: string): Promise<Result> {\r\n    return callServer('server_use_item_by_serverid', serverId);\r\n    return { result: true, text: '\"Использование предмета\". Заглушка.' };\r\n}\r\n\r\n// Создает на клиенте объект с указанным хэшем и возвращает данные о нем.\r\nasync function lootCreate(objectHash: string): Promise<LootCreateData | false> {\r\n    return callClient('client_set_loot_create', objectHash);\r\n    return {\r\n        objectId: 0,\r\n        objectHash: 'w_ar_assaultrifle',\r\n        position: [2, 32, 2320],\r\n        rotation: [120, 231, 3],\r\n    };\r\n}\r\n\r\nasync function setLootCreateRotation(pos: number[]): Promise<any> {\r\n    return callClient('client_set_loot_create_rotation', pos);\r\n}\r\n\r\nasync function setLootCreateHash(hash: string): Promise<any> {\r\n    return callClient('client_set_loot_create_hash', hash);\r\n}\r\n\r\n// Отправляет данные на сервер для регистрации.\r\nasync function serverRegister(login: string, email: string, password: string): Promise<Result> {\r\n    return callServer('server_register', {login, email, password});\r\n    return { result: true, text: 'Вы успешно зарегистрировались!' };\r\n}\r\n\r\n// Отправляет данные на сервер для авторизации.\r\nasync function serverLogin(login: string, password: string): Promise<Result> {\r\n    return callServer('server_login', {login, password});\r\n    // return { result: true, text: 'Вы успешно авторизовались!' };\r\n}\r\n\r\n// Изменяет положение игрока на клиенте.\r\nasync function setCharacterHeading(h: number): Promise<any> {\r\n    return callClient('client_character_set_heading', h);\r\n}\r\n\r\n// Меняет хар-ки лица на клиенте.\r\nasync function setCharacterFaceFeature(index: number, feature: number): Promise<any> {\r\n    return callClient('client_character_set_face', {index, feature});\r\n}\r\n\r\n// Меняет пол на клиенте.\r\nasync function setCharacterGender(gender: 'male' | 'female'): Promise<any> {\r\n    return callClient('client_character_set_gender', gender);\r\n}\r\n\r\nasync function setCharacterHeadProp(data: HeadPropType): Promise<any> {\r\n    return callClient('client_character_set_head_prop', data);\r\n}\r\n\r\nasync function resetCharacter(): Promise<any> {\r\n    return callClient('client_character_reset');\r\n}\r\n\r\nasync function setCharacterHair(dId: number) {\r\n    return callClient('client_character_set_hair', dId);\r\n}\r\n\r\nasync function setCharacterCamera(coord: 'x' | 'y' | 'z', n: number) {\r\n    return callClient('client_character_set_camera_pos', {coord, n});\r\n}\r\n\r\nasync function setCharacterReady() {\r\n    return callClient('client_character_ready');\r\n}\r\n\r\nasync function setCharacterHairColor(id: number): Promise<any> {\r\n    return callClient('client_character_set_hair_color', id);\r\n}\r\n\r\nasync function setCharacterHeadOverlay(overlayId: number, index: number): Promise<any> {\r\n    return callClient('client_character_set_overlay', {overlayId, index});\r\n}\r\n\r\nasync function setCharacterEyes(val: number) {\r\n    return callClient('client_Character_set_eyes', val);\r\n}\r\n\r\nasync function updateCharacterCameraPosition() {\r\n    return callClient('update_character_camera_position');\r\n}\r\n\r\nasync function serverCheckLogin(login: string): Promise<{result: boolean; text: string}> {\r\n    return callServer('server_check_login', login);\r\n    return {result: false, text: 'pizda vcem'};\r\n}\r\n\r\nasync function serverCharacterReady(data: {login: string; email: string; password: string}) {\r\n    return callServer('server_character_ready', data);\r\n    return { text: 'test', result: true };\r\n}\r\n\r\nexport type CharactersDataResult = {\r\n    maxCharacters: number;\r\n    hasCharacters: number;\r\n};\r\n\r\nexport type CharactersServerResult = {\r\n    result: boolean; \r\n    text: string; \r\n    data: CharactersDataResult;\r\n};\r\n\r\nexport {\r\n    takeInventoryItemToServer,\r\n    dropInventoryItemToServer,\r\n    usesInventoryItemByServerId,\r\n\r\n    lootCreate,\r\n    setLootCreateRotation,\r\n    setLootCreateHash,\r\n\r\n    serverRegister,\r\n    serverLogin,\r\n    serverCheckLogin,\r\n    serverCharacterReady,\r\n\r\n    setCharacterHeading,\r\n    setCharacterFaceFeature,\r\n    setCharacterGender,\r\n    setCharacterHeadProp,\r\n    resetCharacter,\r\n    setCharacterHair,\r\n    setCharacterCamera,\r\n    setCharacterReady,\r\n    setCharacterHairColor,\r\n    setCharacterHeadOverlay,\r\n    setCharacterEyes,\r\n\r\n    updateCharacterCameraPosition,\r\n}","import React, { useState } from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { MdCallSplit } from \"react-icons/md\";\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { splitInventoryItemByIndex, setInventoryItems, setGroundItems } from '../../../../../actions/inventoryActions';\r\nimport { UIState } from '../../../../../reducers/UIReducer';\r\nimport { Item } from '../../../../../types';\r\nimport { State } from '../../../../../reducers';\r\nimport { takeInventoryItemToServer } from '../../../../../helpers/playerEvents/rpcCall';\r\nimport { enqueueSnackbar, NotifyVariant } from '../../../../../actions/notificationActions';\r\nimport shortid from 'shortid';\r\nconst groundShortString = 'groundCells__';\r\nconst inventoryShortString = 'inventoryCells_';\r\n\r\ntype Props = {\r\n    item: Item;\r\n    isInventory?: boolean;\r\n    onPopClose: () => any;\r\n}\r\n\r\nfunction TabSplitComponent(props: Props) {\r\n    const { item, isInventory } = props;\r\n    const UIState = useSelector((state: any): UIState => {\r\n        return state.UI || [];\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const { inventory, ground } = UIState;\r\n    const { items: inventoryItems } = inventory;\r\n    const { items: groundItems } = ground;\r\n    const amount = item.amount;\r\n    const maxSplit = amount - 1;\r\n    \r\n    const [inputValue, setInputValue] = useState<any>(maxSplit);\r\n\r\n    const checkRangeValue = (value: number) => {\r\n        if (!Number.isInteger(value) || isNaN(value)) {\r\n            setInputValue(0);\r\n        }\r\n        \r\n        if (value > maxSplit) {\r\n            setInputValue(maxSplit);\r\n        } \r\n\r\n        if (value < maxSplit) {\r\n            setInputValue(value);\r\n        }\r\n\r\n        if (value < 0) {\r\n            setInputValue(0);\r\n        }\r\n    };\r\n\r\n    const onSliderChange = (event: any, value: number | number[]) => {\r\n        if (typeof value !== 'number') {\r\n            return;\r\n        }\r\n\r\n        checkRangeValue(value);\r\n        console.log('-> onSliderChange value', value);\r\n\r\n        if (typeof value === 'number') {\r\n            setInputValue(value);\r\n        }\r\n    };\r\n\r\n    const onInputChange = (event: any) => { \r\n        const value = parseInt(event.target.value);\r\n        checkRangeValue(value);\r\n    };\r\n\r\n    const onIconBtnClick = async (event: any) => {\r\n        // Если предмет принадлежит инвентарю.\r\n        if (isInventory) {\r\n            const idx = inventoryItems.findIndex((i) => i === item);\r\n            console.log('onIconBtnClick idx', idx);\r\n\r\n            if (idx !== -1) {\r\n                dispatch(\r\n                    splitInventoryItemByIndex(idx, inputValue)\r\n                );\r\n            }\r\n\r\n            props.onPopClose();\r\n        } else {            \r\n            props.onPopClose();\r\n\r\n            const idx = groundItems.findIndex((i) => i === item);\r\n            if (idx !== -1) {\r\n                if (inputValue <= 0) {\r\n                    props.onPopClose();\r\n                    return;\r\n                }\r\n\r\n                // Взять указанное количество предметов.\r\n                const serverResult = await takeInventoryItemToServer(item.data.serverId, inputValue);    \r\n                if (serverResult.result) {\r\n                    console.log('Взять указанное кол-во', item);\r\n\r\n                    const groundItem = JSON.parse(JSON.stringify(groundItems[idx]));\r\n                    const inventoryItem = JSON.parse(JSON.stringify(groundItem));\r\n\r\n                    const amount = groundItem.amount - inputValue;\r\n                    if (amount > 0) {\r\n                        groundItems[idx].amount = amount;\r\n                        // groundItems[idx].data.shortid = `${groundShortString}${shortid.generate()}`;\r\n                        inventoryItem.amount = inputValue;\r\n                        inventoryItem.data.shortid = `${inventoryShortString}${shortid.generate()}`;\r\n                        inventoryItems.unshift(inventoryItem);\r\n                    }\r\n            \r\n                    if (amount <= 0) {\r\n                        console.log('amount <= 0');\r\n                        groundItems.splice(idx, 1);\r\n                        inventoryItem.amount = groundItem.amount;\r\n                        inventoryItems.unshift(inventoryItem);\r\n                    }\r\n            \r\n                    dispatch(\r\n                        setInventoryItems(JSON.parse(JSON.stringify(inventoryItems)))\r\n                    );\r\n                    dispatch(\r\n                        setGroundItems(groundItems)\r\n                    );\r\n                    dispatch(\r\n                        enqueueSnackbar({\r\n                            message: serverResult.text,\r\n                                options: {\r\n                                    key: new Date().getTime() + Math.random(),\r\n                                    variant: NotifyVariant.DEFAULT,\r\n                                    anchorOrigin: {\r\n                                        horizontal: 'center',\r\n                                        vertical: 'bottom',\r\n                                    }\r\n                            },\r\n                        })\r\n                    );\r\n                } else {\r\n                    dispatch(\r\n                        enqueueSnackbar({\r\n                            message: serverResult.text,\r\n                                options: {\r\n                                    key: new Date().getTime() + Math.random(),\r\n                                    variant: NotifyVariant.ERROR,\r\n                                    anchorOrigin: {\r\n                                        horizontal: 'center',\r\n                                        vertical: 'bottom',\r\n                                    }\r\n                            },\r\n                        })\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        props.onPopClose();\r\n    };\r\n\r\n    return (\r\n        <div className=\"popover-tab-container\">\r\n            <div className=\"popover-tab-container__item\">\r\n                <Slider\r\n                    defaultValue={ 1 }\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={ Math.ceil(amount / 100 * 10) } // 1 step = 10%.\r\n                    min={ 1 }\r\n                    max={ maxSplit }\r\n                    value={ inputValue }\r\n                    onChange={ onSliderChange }\r\n                    disabled={ maxSplit <= 1 }\r\n                    marks\r\n                />\r\n            </div>\r\n\r\n            <input type=\"text\" value={ inputValue } onChange={ onInputChange } />\r\n            \r\n            <div onClick={ onIconBtnClick }>\r\n                <IconButton color=\"inherit\" aria-label=\"upload picture\" component=\"span\" classes={{ root: 'popover-icon-button' }}>\r\n                    <MdCallSplit />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    TabSplitComponent,\r\n}","import React from \"react\";\r\nimport { Item } from \"../../../../types\";\r\nimport { Popover } from '@material-ui/core';\r\nimport { TabSplitComponent } from \"./TabSplitComponent\";\r\nimport { useToggle } from \"@umijs/hooks\";\r\nimport { dropInventoryItemToServer, usesInventoryItemByServerId } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SET_INVENTORY_ITEMS, SET_GROUND_ITEMS, deleteInventoryItemById } from \"../../../../actions/inventoryActions\";\r\nimport { UIState } from \"../../../../reducers/UIReducer\";\r\nimport shortid from 'shortid';\r\nimport { enqueueSnackbar, NotifyVariant } from \"../../../../actions/notificationActions\";\r\nconst shortString = '__groundCells';\r\n\r\ntype Props = {\r\n    anchorEl: any;\r\n    item: Item;\r\n    onPopClose: () => any;\r\n}\r\n\r\nfunction SelectedInventoryItem(props: Props) {\r\n    const { item, anchorEl, onPopClose } = props;\r\n    const { state, toggle } = useToggle(0);\r\n    const dispatch = useDispatch();\r\n    const store = useSelector((state: any): UIState => {\r\n        return state.UI || [];\r\n    });\r\n\r\n    function Tab1() {\r\n        const onDropItem = async () => {\r\n            const serverResult = await dropInventoryItemToServer(item.key, item.amount);\r\n            \r\n            if (serverResult.result) {\r\n                console.log('onDropItem', item);\r\n                const inventoryItems = [...store.inventory.items];\r\n                const groundItems = [...store.ground.items];\r\n                const idx = store.inventory.items.findIndex(i => i === item);\r\n\r\n                if (idx !== -1) {\r\n                    const newItem = {...item};\r\n                    newItem.data.shortid = `${shortString}${shortid.generate()}`;\r\n                    inventoryItems.splice(idx, 1);\r\n                    groundItems.unshift(newItem);\r\n\r\n                    dispatch({\r\n                        type: SET_INVENTORY_ITEMS,\r\n                        payload: inventoryItems\r\n                    });\r\n    \r\n                    dispatch({\r\n                        type: SET_GROUND_ITEMS,\r\n                        payload: groundItems\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        const onUsesItem = async () => {\r\n            const serverResult = await usesInventoryItemByServerId(item.data.serverId);\r\n\r\n            // Если получилось использовать предмет, то удалить если нужно.\r\n            if (serverResult.result) {\r\n                const inventoryItems = [...store.inventory.items];\r\n                const idx = inventoryItems.findIndex(i => i === item);\r\n\r\n                if (item.data.isDelete) {\r\n                    dispatch(\r\n                        deleteInventoryItemById(idx)\r\n                    );\r\n                }\r\n            }\r\n\r\n            dispatch(\r\n                enqueueSnackbar({\r\n                    message: serverResult.text,\r\n                        options: {\r\n                            key: new Date().getTime() + Math.random(),\r\n                            variant: serverResult.result ? NotifyVariant.DEFAULT : NotifyVariant.ERROR,\r\n                            anchorOrigin: {\r\n                                horizontal: 'center',\r\n                                vertical: 'bottom',\r\n                            }\r\n                    },\r\n                })\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div className='popover-select-tab'>\r\n                <div onClick={ () => toggle(2) }>Инфо.</div>\r\n                <div onClick={ onUsesItem }>Использовать</div>\r\n                <div onClick={ () => toggle(1) }>Разделить</div>\r\n                <div onClick={ onDropItem }>Выбросить</div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    function Tab2() {\r\n        return (\r\n            <div className='cell-popover-content cell-popover-content-tab2'>\r\n                <div className=\"cell-popover-content__data\">\r\n                    <strong>\r\n                        { item.data.name } (&nbsp;{ item.amount }&nbsp;)\r\n                    </strong>\r\n                </div>\r\n                <div className=\"cell-popover-content__change-data\">\r\n                    <TabSplitComponent isInventory onPopClose={ onPopClose } item={ item } />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function Tab3() {\r\n        return (\r\n            <div className='cell-popover-content cell-popover-content-tab3'>\r\n                <div className=\"cell-popover-content__change-data\">\r\n                    <div>Название: { item.data.name }</div>\r\n                    <div>Кол-во: { item.amount }</div>\r\n                    <div>Макс. стак: { item.data.maxStackCount }</div>\r\n                    <div>вес 1 шт.: { item.data.weight }</div>\r\n                    <div>Описание: { item.data.description }</div>\r\n                    <div>Тип: { item.data.type }</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            classes={ { root: 'rootOverridePopover', paper: 'paperOverridePopover' } }\r\n            id={ 'cell-popover' }\r\n            open={ !!anchorEl }\r\n            anchorEl={ anchorEl }\r\n            onClose={ onPopClose }\r\n            anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\"\r\n            }}\r\n            transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\"\r\n            }}\r\n        >\r\n            <div className=\"cell-popover\">\r\n                { state === 0 && <Tab1 /> }\r\n                { state === 1 && <Tab2 /> }\r\n                { state === 2 && <Tab3 /> }\r\n            </div>\r\n        </Popover>\r\n    );\r\n};\r\n\r\nexport {\r\n    SelectedInventoryItem,\r\n}","import React from \"react\";\r\nimport { Item } from \"../../../../types\";\r\nimport { Popover } from \"@material-ui/core\";\r\nimport { useToggle } from \"@umijs/hooks\";\r\nimport { TabSplitComponent } from \"../SelectedInventoryItem/TabSplitComponent\";\r\n\r\ntype Props = {\r\n    anchorEl: any;\r\n    item: Item;\r\n    isInventory: boolean;\r\n    onPopClose: () => any;\r\n}\r\n\r\nfunction SelectedGroundItem(props: Props) {\r\n    const { item, anchorEl, onPopClose } = props;\r\n    const { state, toggle } = useToggle(0);\r\n    \r\n    function Tab1() {\r\n        return (\r\n            <div className='cell-popover-content cell-popover-content-tab2'>\r\n                <div className=\"cell-popover-content__data\">\r\n                    <strong>\r\n                        { item.data.name } (&nbsp;{ item.amount }&nbsp;)\r\n                    </strong>\r\n                </div>\r\n                <div className=\"cell-popover-content__change-data\">\r\n                    <TabSplitComponent onPopClose={ onPopClose } item={ item } />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <Popover\r\n            classes={ { root: 'rootOverridePopover', paper: 'paperOverridePopover' } }\r\n            id={ 'cell-popover' }\r\n            open={ !!anchorEl }\r\n            anchorEl={ anchorEl }\r\n            onClose={ onPopClose }\r\n            anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\"\r\n            }}\r\n            transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\"\r\n            }}\r\n        >\r\n            <div className=\"cell-popover\">\r\n                { state === 0 && <Tab1 /> }\r\n            </div>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport {\r\n    SelectedGroundItem,\r\n}","import React, { useState } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { Item } from \"../../../../types\";\r\nimport { getItemImage } from \"../../../../helpers/getImages\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setInventoryItems, splitInventoryItemByIndex, stackItems, setGroundItems } from \"../../../../actions/inventoryActions\";\r\nimport { UIState } from \"../../../../reducers/UIReducer\";\r\nimport { GiRapidshareArrow } from \"react-icons/gi\";\r\nimport { SelectedInventoryItem } from \"../SelectedInventoryItem\";\r\nimport { SelectedGroundItem } from \"../SelectedGroundItem\";\r\nimport { takeInventoryItemToServer } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { enqueueSnackbar, NotifyVariant } from \"../../../../actions/notificationActions\";\r\nimport shortid from 'shortid';\r\nconst groundShortString = 'groundCells__';\r\nconst inventoryShortString = 'inventoryCells_';\r\n\r\ntype Props = {\r\n    item: Item;\r\n    id: number;\r\n    isPopover?: boolean;\r\n    isInventory?: boolean;\r\n}\r\n\r\nconst InventoryCell = (props: Props) => {\r\n    const { item, id, isInventory } = props;\r\n\r\n    const UIState = useSelector((state: any): UIState => {\r\n        return state.UI || [];\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const { inventory, ground } = UIState;\r\n    const { items } = inventory;\r\n    const { items: groundItems } = ground;\r\n    const itemImage = getItemImage(item.key);\r\n\r\n\r\n    const [currentItem, setCurrentItem] = useState<Item | null>(null);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    let isStack = false;\r\n    let currentInvItem;\r\n    let nextItem;\r\n    if (isInventory) {\r\n        const currentInvItemIdx = items.findIndex(i => i === item);\r\n        if (currentInvItemIdx !== -1) {\r\n            currentInvItem = items[currentInvItemIdx];\r\n            nextItem = items[currentInvItemIdx + 1];\r\n\r\n            if (currentInvItem && nextItem) {\r\n                if (currentInvItem.key === nextItem.key && currentInvItem.data.maxStackCount > 1) {\r\n                    isStack = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSelectItem = (item: Item, e: any) => {\r\n        console.log('onSelectItem', item);\r\n        setCurrentItem(item);\r\n        setAnchorEl(e.currentTarget);\r\n    };\r\n\r\n    const onPopClose = () => {\r\n        setCurrentItem(null);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const onMouseDown = async (event) => {\r\n        // Клик правой кнопкой мыши на элемент в инвентаре.\r\n        if (isInventory && event.button === 2) {\r\n            if (item.amount <= 1) {\r\n                return;\r\n            }\r\n\r\n            const idx = items.findIndex(i => i === item);\r\n\r\n            if (idx === -1) {\r\n                return;\r\n            }\r\n\r\n            dispatch(\r\n                splitInventoryItemByIndex(idx, Math.floor(item.amount / 2))\r\n            );\r\n        } \r\n        // Клик правой кнопкой мыши на элемент на земле.\r\n        else if (!isInventory && event.button === 2) {\r\n            console.log('Взять макс число предметов.', item);\r\n            \r\n            // Взять максимальное количество предметов по клику на правую кнопку мыши.\r\n            const serverResult = await takeInventoryItemToServer(item.data.serverId, item.amount);\r\n\r\n            // Если удалить предмет с земли получилось - положить его в инвентарь.\r\n            if (serverResult.result) {\r\n                const idx = groundItems.findIndex(i => i === item);\r\n                \r\n                if (idx === -1) {\r\n                    return;\r\n                }\r\n\r\n                const groundItem = JSON.parse(JSON.stringify(groundItems[idx]));\r\n                const inventoryItem = JSON.parse(JSON.stringify(groundItem));\r\n                inventoryItem.data.shortid = `${inventoryShortString}${shortid.generate()}`;\r\n                inventoryItem.amount = item.amount;\r\n                items.unshift(inventoryItem);\r\n                groundItems.splice(idx, 1);\r\n                dispatch(setInventoryItems(items));\r\n                dispatch(setGroundItems(groundItems));\r\n            }\r\n\r\n            dispatch(\r\n                enqueueSnackbar({\r\n                    message: serverResult.text,\r\n                        options: {\r\n                            key: new Date().getTime() + Math.random(),\r\n                            variant: serverResult.result ? NotifyVariant.DEFAULT : NotifyVariant.ERROR,\r\n                            anchorOrigin: {\r\n                                horizontal: 'center',\r\n                                vertical: 'bottom',\r\n                            }\r\n                    },\r\n                })\r\n            );\r\n        }\r\n        // Клик левой кнопкой мыши на элемент на земле.\r\n        else if (!isInventory && event.button === 0) {\r\n            console.log('Открыть контекстное меню.', item);\r\n        }\r\n    }\r\n\r\n    const onStackClick = (event: any) => {\r\n        event.stopPropagation();\r\n        const currentItemIndex = items.findIndex(i => i === item);\r\n        const nextItemIndex = items.findIndex(i => i === nextItem);\r\n        console.log('currentItemIndex', currentItemIndex);\r\n        console.log('nextItemIndex', nextItemIndex);\r\n        dispatch(\r\n            stackItems(currentItemIndex, nextItemIndex)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            { !!currentItem && isInventory && <SelectedInventoryItem onPopClose={ onPopClose } anchorEl={ anchorEl } item={ currentItem } /> }\r\n            { !!currentItem && !isInventory && <SelectedGroundItem isInventory onPopClose={ onPopClose } anchorEl={ anchorEl } item={ currentItem } /> }\r\n\r\n            <Draggable draggableId={ item.data.shortid } index={ id }>\r\n                {(dragProvided, snapshot) => {\r\n                    return (\r\n                        <div\r\n                            onClick={ (e) => onSelectItem(item, e) }\r\n                            onMouseDown={ onMouseDown }\r\n                        >\r\n                            <div ref={ dragProvided.innerRef }>\r\n                                <div \r\n                                    className=\" inventory-cell\"\r\n                                    { ...dragProvided.draggableProps }\r\n                                    { ...dragProvided.dragHandleProps }\r\n                                >\r\n                                    <div className=\"inventory-cell-image\" >\r\n                                        <img src={ itemImage } draggable={ false } />\r\n                                    </div>\r\n                                    <div className=\"inventory-cell-name\">\r\n                                        { item.data.name }\r\n                                    </div>\r\n                                    <div className=\"inventory-cell-amount\">\r\n                                        { `${item.amount}/${item.data.maxStackCount}` }\r\n                                    </div>\r\n                                    <div className=\"inventory-cell-weight\">\r\n                                        { (item.data.weight * item.amount).toFixed(1) }&nbsp;кг.\r\n                                    </div>\r\n                                    { isStack && <div className='isStack' onClick={ (e) => onStackClick(e) }><GiRapidshareArrow /></div> }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }} \r\n            </Draggable>\r\n        </>\r\n    );\r\n};\r\n\r\nexport {\r\n    InventoryCell,\r\n}","import React from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport { InventoryCell } from \"../InventoryCell\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { UIState } from '../../../../reducers/UIReducer';\r\nconst shortString = 'inventoryCells_';\r\n\r\nconst getListStyle = (isDraggingOver) => {\r\n    console.log('isDraggingOver', isDraggingOver);\r\n    \r\n    return {\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden',\r\n        height: '32rem',\r\n        border: isDraggingOver ? '3px dotted green' : '3px dotted transparent',\r\n    }\r\n};\r\n\r\nconst InventoryCells = (props) => {\r\n    const UIState = useSelector((state: any): UIState => {\r\n        return state.UI || [];\r\n    });\r\n    const { inventory } = UIState;\r\n    const { items } = inventory;\r\n\r\n    const getItems = () => {\r\n        return items.map((item, id) => {\r\n            return <InventoryCell \r\n                key={ `${shortString}${item.data.shortid}` } \r\n                id={ id } \r\n                item={ item } \r\n                isInventory \r\n            />\r\n        });\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <Droppable droppableId=\"droppable1\">\r\n                {(provided, snapshot) => (\r\n                    <div ref={ provided.innerRef } style={ getListStyle(snapshot.isDraggingOver) } { ...provided.droppableProps }>\r\n                        { getItems() }\r\n                        { provided.placeholder }\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </>\r\n    );\r\n};\r\n\r\nexport {\r\n    InventoryCells,\r\n}","import React from \"react\";\r\nimport { InventoryCells } from \"./InventoryCells\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { UIState } from \"../../../reducers/UIReducer\";\r\nimport { GiFullMotorcycleHelmet, GiTShirt, GiTrousers, GiSteeltoeBoots, GiBackpack } from \"react-icons/gi\";\r\n\r\nfunction Inventory(props) {\r\n    const state = useSelector((state: any): UIState => state.UI || []);\r\n    const { inventory } = state;\r\n    const { slots, items } = inventory;\r\n\r\n    const inventoryWeight = items.reduce((acc, item) => acc + (item.data.weight * item.amount), 0);\r\n    console.log('inventoryWeight', inventoryWeight);\r\n    const inventoryFixWeight = Number.isInteger(inventoryWeight) ? inventoryWeight.toFixed(0) : inventoryWeight.toFixed(1);\r\n\r\n    return (\r\n        <div className=\"inventory\">\r\n            <div className=\"ui-top\">\r\n                Инвентарь ({ inventoryFixWeight }/{ slots })\r\n            </div>\r\n            <div className=\"inventory-middle\">\r\n                <div className=\"inventory-clothes\">\r\n                    <div className=\"clothes-item\">\r\n                        <div className=\"clothes-item-icon\">\r\n                            <GiFullMotorcycleHelmet />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"clothes-item\">\r\n                        <div className=\"clothes-item-icon\">\r\n                            <GiBackpack />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"clothes-item\">\r\n                        <div className=\"clothes-item-icon\">\r\n                            <GiTShirt />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"clothes-item\">\r\n                        <div className=\"clothes-item-icon\">\r\n                            <GiTrousers />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"clothes-item\">\r\n                        <div className=\"clothes-item-icon\">\r\n                            <GiSteeltoeBoots />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"inventory-body-items\">\r\n\r\n                    <div className=\"inventory-body\">\r\n                        <InventoryCells />\r\n                    </div>\r\n\r\n                </div>    \r\n            </div>            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport {\r\n    Inventory,\r\n}","import React from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setInventoryItems } from \"../../../../actions/inventoryActions\";\r\nimport { UIState } from \"../../../../reducers/UIReducer\";\r\nimport { InventoryCell } from \"../../Inventory/InventoryCell\";\r\nconst groundShortString = 'groundCells__';\r\nconst inventoryShortString = 'inventoryCells_';\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n    overflowY: 'auto',\r\n    overflowX: 'hidden',\r\n    height: '37rem',\r\n    border: isDraggingOver ? '3px dotted green' : '3px dotted transparent',\r\n});\r\n\r\nconst ItemsGroundCells = (props) => {\r\n    const UIState = useSelector((state: any): UIState => {\r\n        return state.UI || [];\r\n    });\r\n    const { ground } = UIState;\r\n    const { items } = ground;    \r\n\r\n    return (\r\n        <Droppable droppableId=\"droppable\">\r\n        {(provided, snapshot) => (\r\n            <div { ...provided.droppableProps } ref={ provided.innerRef } style={ getListStyle(snapshot.isDraggingOver) }>\r\n                { items.map((item, idx) => <InventoryCell key={ `${groundShortString}${item.data.shortid}` } id={ idx } item={ item } />) }\r\n                { provided.placeholder }\r\n            </div>\r\n        )}\r\n        </Droppable>\r\n    );\r\n};\r\n\r\nexport {\r\n    ItemsGroundCells,\r\n}","import React from \"react\";\r\nimport { ItemsGroundCells } from \"./ItemsGroundCells\";\r\nimport { State } from \"../../../reducers\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ItemsGround = () => {\r\n    const state = useSelector((state: State) => state || []);\r\n\r\n    const cssEmpty: any = {\r\n        display: 'block',\r\n        fontSize: '1.7rem',\r\n        textAlign: 'center',\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"items-ground\">\r\n                <div className=\"ui-top\">Содержимое</div>\r\n                <div className=\"items-ground-middle\">\r\n                    { state.UI.ground.items.length ? <ItemsGroundCells /> : <div style={cssEmpty}>Пусто</div> }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {\r\n    ItemsGround,\r\n}","import React from \"react\";\r\nimport './UserInterface.css';\r\nimport { Inventory } from \"./Inventory\";\r\nimport { ItemsGround } from \"./ItemsGround\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\n\r\nimport { setInventoryItems, setGroundItems } from \"../../actions/inventoryActions\";\r\nimport { enqueueSnackbar, NotifyVariant } from \"../../actions/notificationActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { UIState } from \"../../reducers/UIReducer\";\r\nimport { takeInventoryItemToServer, dropInventoryItemToServer } from \"../../helpers/playerEvents/rpcCall\";\r\nimport { State } from \"../../reducers\";\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination): any => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    console.log('result', result);\r\n\r\n    return result;\r\n};\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex): any => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\n\r\nfunction ItemsUI(props) {\r\n    const UIState = useSelector((state: any): UIState => {\r\n        return state.UI || [];\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const { inventory, ground } = UIState;\r\n\r\n\r\n    const id2List = {\r\n        droppable: 'ground',\r\n        droppable1: 'inventory',\r\n    };\r\n\r\n    const getList = (id) => UIState[id2List[id]].items;\r\n\r\n    const onDragEnd = async (result) => {\r\n        const { source, destination } = result;\r\n\r\n        console.log('result', result);\r\n        console.log('source', source);\r\n        console.log('destination', destination);\r\n\r\n        // dropped outside the list\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        // Если дроп. перенесен на текущий.\r\n        if (source.droppableId === destination.droppableId) {\r\n            const items = reorder(\r\n                getList(source.droppableId),\r\n                source.index,\r\n                destination.index\r\n            );\r\n\r\n            console.log('-> items', items);\r\n            console.log('-> source.droppableId', source.droppableId);\r\n            console.log('-> destination.index', destination.index);\r\n\r\n            if (source.droppableId === 'droppable') {\r\n                dispatch(setGroundItems(items));\r\n            }\r\n            \r\n            if (source.droppableId === 'droppable1') {\r\n                dispatch(setInventoryItems(items));\r\n            }\r\n\r\n        } else { // Если дроп. перенесен с 1го на другой.\r\n            const result = move(\r\n                getList(source.droppableId),\r\n                getList(destination.droppableId),\r\n                source,\r\n                destination,\r\n            );\r\n\r\n            // Предмет выкинули.\r\n            // ОТПРАВКА НА SERVER ITEM_KEY И AMOUNT ПРЕДМЕТА - для его удаления из инвентаря.\r\n            if (source.droppableId === 'droppable1') {\r\n                const inventoryItems = [...inventory.items];\r\n                const item = inventoryItems[source.index];\r\n\r\n                const serverResult = await dropInventoryItemToServer(item.key, item.amount);\r\n                if (serverResult.result) {\r\n                    dispatch(setGroundItems(result.droppable));\r\n                    dispatch(setInventoryItems(result.droppable1));\r\n                }\r\n            }\r\n\r\n            // Предмет взяли.\r\n            if (source.droppableId === 'droppable') {\r\n                console.log(' ===> Предмет положен.');\r\n              \r\n                const groundItems = [...ground.items];\r\n                const item = groundItems[source.index];\r\n                console.log(' ---> ПРЕДМЕТ ПОЛОЖИЛИ.', item);\r\n   \r\n                // Отправляем на сервак shortid предмета который перекладываем в инвентарь.\r\n                const serverResult = await takeInventoryItemToServer(item.data.serverId, item.amount);\r\n                if (serverResult.result) {\r\n                    dispatch(setGroundItems(result.droppable));\r\n                    dispatch(setInventoryItems(result.droppable1));\r\n                }\r\n\r\n                dispatch(\r\n                    enqueueSnackbar({\r\n                        message: serverResult.text,\r\n                        options: {\r\n                            key: new Date().getTime() + Math.random(),\r\n                            variant: serverResult.result ? NotifyVariant.DEFAULT : NotifyVariant.ERROR,\r\n                            anchorOrigin: {\r\n                                horizontal: 'center',\r\n                                vertical: 'bottom',\r\n                            },\r\n                        },\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDragStart = (data) => {\r\n        console.log('onDragStart data', data);  \r\n    }\r\n\r\n    const state = useSelector((state: State) => state || []);\r\n\r\n    return (\r\n        <div className='UI'> \r\n            <div className=\"UI-container\">\r\n                <DragDropContext onDragEnd={ onDragEnd } onDragStart={ onDragStart }>  \r\n                    <ItemsGround />\r\n                    <Inventory />\r\n                </DragDropContext>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport {\r\n    ItemsUI,\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport { removeSnackbar } from '../../../actions/notificationActions';\r\n\r\nlet displayed: any = [];\r\n\r\nconst NotifyComp = () => {\r\n    const dispatch = useDispatch();\r\n    const notifications: any = useSelector((store: any): any => store.UI.notifications || []);\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const storeDisplayed = (id) => {\r\n        displayed = [...displayed, id];\r\n    };\r\n\r\n    const removeDisplayed = (id) => {\r\n        displayed = [...displayed.filter(key => id !== key)];\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        notifications.forEach(({ key, message, options = {}, dismissed = false }) => {\r\n            if (dismissed) {\r\n                // dismiss snackbar using notistack\r\n                closeSnackbar(key);\r\n                return;\r\n            }\r\n\r\n            // do nothing if snackbar is already displayed\r\n            if (displayed.includes(key)) return;\r\n\r\n            // display snackbar using notistack\r\n            enqueueSnackbar(message, {\r\n                key,\r\n                ...options,\r\n                onClose: (event, reason, myKey) => {\r\n                    if (options.onClose) {\r\n                        options.onClose(event, reason, myKey);\r\n                    }\r\n                },\r\n                onExited: (event, myKey) => {\r\n                    // removen this snackbar from redux store\r\n                    dispatch(removeSnackbar(myKey));\r\n                    removeDisplayed(myKey);\r\n                },\r\n            });\r\n\r\n            // keep track of snackbars that we've displayed\r\n            storeDisplayed(key);\r\n        });\r\n    }, [notifications, closeSnackbar, enqueueSnackbar, dispatch]);\r\n\r\n    return null;\r\n};\r\n\r\nexport {\r\n    NotifyComp,\r\n};","import React from \"react\";\r\n\r\ntype Props = {\r\n    health: number;\r\n    armor: number;\r\n    hunger: number;\r\n    dehydration: number;\r\n    temperature: number;\r\n};\r\n\r\nfunction HudsMenuData(props: Props) {\r\n    const percent = 12000 / 100; // 1%\r\n    const blood = props.health * percent; // Количество крови.\r\n\r\n    return (\r\n        <div className=\"huds-menu-data\">\r\n            <div>Кровь: { blood }</div>\r\n            <div>Броня: { props.armor }</div>\r\n            <div>Сытость: { props.hunger }</div>\r\n            <div>Жажда: { props.dehydration }</div>\r\n            <div>Температура: { props.temperature }</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    HudsMenuData,\r\n}","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { pulse, jello} from 'react-animations';\r\nimport image_blood_100 from '../../../assets/huds/health/100.svg';\r\nimport image_blood_80 from '../../../assets/huds/health/80.svg';\r\nimport image_blood_60 from '../../../assets/huds/health/60.svg';\r\nimport image_blood_40 from '../../../assets/huds/health/40.svg';\r\nimport image_blood_20 from '../../../assets/huds/health/20.svg';\r\nimport image_blood_empty from '../../../assets/huds/health/empty.svg';\r\n\r\ntype Props = {\r\n    health: number;\r\n}\r\n\r\nfunction HealthHud(props: Props) {\r\n    const { health } = props;\r\n    let styles = {};\r\n\r\n    const isLowHP = health <= 50;\r\n\r\n    // Pulse animation\r\n    const pulseAnimation = keyframes`${pulse}`;\r\n    const HealthPulseDiv = styled.div`\r\n        animation: ${ isLowHP ? '.95s' : '3s' } infinite ${ pulseAnimation };\r\n    `;\r\n\r\n    let healthImage = image_blood_100;\r\n    if (health <= 80) {\r\n        healthImage = image_blood_80;\r\n    }\r\n    if (health <= 60) {\r\n        healthImage = image_blood_60;\r\n    }\r\n    if (health <= 40) {\r\n        healthImage = image_blood_40;\r\n    }\r\n    if (health <= 20) { \r\n        healthImage = image_blood_20;\r\n    }\r\n    if (health <= 0) {\r\n        healthImage = image_blood_empty;\r\n    }\r\n\r\n    return (\r\n        <HealthPulseDiv>\r\n            <div className=\"huds-health\">\r\n                <img src={ healthImage } style={ styles } />\r\n            </div>\r\n        </HealthPulseDiv>\r\n    );\r\n}\r\n\r\nexport {\r\n    HealthHud,\r\n}","import React, { CSSProperties } from \"react\";\r\nimport img_icon_100 from '../../../assets/huds/eat/100.svg';\r\nimport img_icon_80 from '../../../assets/huds/eat/80.svg';\r\nimport img_icon_60 from '../../../assets/huds/eat/60.svg';\r\nimport img_icon_40 from '../../../assets/huds/eat/40.svg';\r\nimport img_empty from '../../../assets/huds/eat/empty.svg';\r\n\r\ntype Props = {\r\n    hunger: number;\r\n};\r\n\r\nfunction EatHud(props: Props) {\r\n    const { hunger } = props;\r\n    let styles = {};\r\n    \r\n    let imgIcon = img_icon_100;\r\n    if (hunger < 80) {\r\n        imgIcon = img_icon_80;\r\n    }    \r\n    if (hunger < 60) {\r\n        imgIcon = img_icon_60;\r\n    }\r\n    if (hunger < 40) {\r\n        imgIcon = img_icon_40;\r\n    }\r\n    if (hunger < 20) {\r\n        imgIcon = img_icon_40;\r\n    }\r\n    if (hunger < 1) {\r\n        imgIcon = img_empty;\r\n    }\r\n    \r\n    return (\r\n        <div className='huds-eat'>\r\n            <img src={ imgIcon } style={ styles } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    EatHud,\r\n}","import React, { CSSProperties } from \"react\"\r\n\r\nimport img_icon_100 from '../../../assets/huds/temperature/100.svg';\r\nimport img_icon_80 from '../../../assets/huds/temperature/80.svg';\r\nimport img_icon_60 from '../../../assets/huds/temperature/60.svg';\r\nimport img_icon_40 from '../../../assets/huds/temperature/40.svg';\r\nimport img_icon_20 from '../../../assets/huds/temperature/15.svg';\r\nimport img_icon_empty from '../../../assets/huds/temperature/empty.svg';\r\n\r\ntype Props = {\r\n    temperature: number;\r\n\r\n}\r\nfunction TemperatureHud(props: Props) {\r\n    const { temperature } = props;\r\n    let styles = {};\r\n\r\n    let imgIcon = img_icon_100;\r\n    if (temperature < 80) {\r\n        imgIcon = img_icon_80;\r\n    }    \r\n    if (temperature < 60) {\r\n        imgIcon = img_icon_60;\r\n    }\r\n    if (temperature < 40) {\r\n        imgIcon = img_icon_40;\r\n    }\r\n    if (temperature < 20) {\r\n        imgIcon = img_icon_20;\r\n    }\r\n    if (temperature < 1) {\r\n        imgIcon = img_icon_empty;\r\n    }\r\n\r\n    return (\r\n        <div className=\"huds-temperature\">\r\n            <img src={ imgIcon } style={ styles } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    TemperatureHud,\r\n}","import React, { CSSProperties } from \"react\"\r\n\r\nimport img_icon_100 from '../../../assets/huds/dehydration/100.svg';\r\nimport img_icon_70 from '../../../assets/huds/dehydration/70.svg';\r\nimport img_icon_40 from '../../../assets/huds/dehydration/40.svg';\r\nimport img_icon_10 from '../../../assets/huds/dehydration/10.svg';\r\nimport img_icon_empty from '../../../assets/huds/dehydration/empty.svg';\r\n\r\ntype Props = {\r\n    dehydration: number;\r\n}\r\n\r\nfunction DehydrationHud(props: Props) {\r\n    const { dehydration } = props;\r\n    let styles = {};\r\n\r\n    let imgIcon = img_icon_100;\r\n    if (dehydration < 70) {\r\n        imgIcon = img_icon_70;\r\n    }    \r\n    if (dehydration < 40) {\r\n        imgIcon = img_icon_40;\r\n    }\r\n    if (dehydration < 10) {\r\n        imgIcon = img_icon_10;\r\n    }\r\n    if (dehydration < 1) {\r\n        imgIcon = img_icon_empty;\r\n    }\r\n\r\n    return (\r\n        <div className=\"huds-dehydration\">\r\n            <img src={ imgIcon } style={ styles } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    DehydrationHud,\r\n}","import { CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\ntype Props = {\r\n    value: number;\r\n    maxValue: number\r\n};\r\n\r\nfunction CircularLine(props: Props) {\r\n    const percent = props.maxValue / 100; // 1%;\r\n    const value = percent * props.value;\r\n\r\n    return (\r\n        <div>\r\n            <CircularProgress color='secondary' variant=\"static\" value={ value } size={ 50 } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CircularLine,\r\n}","import React, { CSSProperties } from \"react\";\r\nimport { CircularLine } from \"./CircularLine\";\r\n\r\ntype Props = {\r\n    hud: any;\r\n    style: CSSProperties;\r\n    size: string;\r\n    value: number;\r\n};\r\n\r\nfunction CircularHudWithImage(props: Props) {\r\n    const styles = {...props.style, width: props.size};\r\n    const hudStyle: any = { \r\n        position: 'absolute',\r\n        top: '45%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    };\r\n    return (\r\n        <div className='CircularHudWithImage' style={ styles }>\r\n            <CircularLine value={ props.value } maxValue={ 100 } />\r\n            <div style={hudStyle}>{ props.hud }</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CircularHudWithImage,\r\n}","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { UIState } from \"../../../reducers/UIReducer\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { CircularLine } from \"./CircularLine\";\r\nimport { setHudsData, HudType } from \"../../../actions/hudsDataActions\";\r\nimport { HudsMenuData } from \"./HudsMenuData\";\r\nimport { FaHamburger } from \"react-icons/fa\";\r\nimport { HealthHud } from \"./HealthHud\";\r\nimport { EatHud } from \"./EatHud\";\r\nimport { TemperatureHud } from \"./TemperatureHud\";\r\nimport { DehydrationHud } from \"./DehydrationHud\";\r\nimport CircularSlider from 'react-circular-slider-svg';\r\nimport { CircularHudWithImage } from \"./CircularHudWithImage\";\r\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\r\n\r\nfunction Huds(props) {\r\n    const state: UIState = useSelector((state: any) => state.UI || []);\r\n    const dispatch = useDispatch();\r\n    const health = state.hudsData.health;\r\n    const armor = state.hudsData.armor;\r\n    const isBleeding = state.hudsData.isBleeding;\r\n    const temperature = state.hudsData.temperature;\r\n    const hunger = state.hudsData.hunger;\r\n    const dehydration = state.hudsData.dehydration;\r\n\r\n    const hudStyles: CSSProperties = {\r\n        position: 'absolute',\r\n        bottom: '1rem',\r\n        right: '1rem',\r\n    };\r\n\r\n    let healthStyles = {};\r\n    if (health <= 80) healthStyles = {filter: 'hue-rotate(-30deg)'};\r\n    if (health <= 60) healthStyles = {filter: 'hue-rotate(-40deg)'};\r\n    if (health <= 40) healthStyles = {filter: 'hue-rotate(-50deg)'};\r\n    if (health <= 20) healthStyles = {filter: 'hue-rotate(-60deg)'};\r\n    if (health <= 0) healthStyles = {filter: 'hue-rotate(-70deg)'};\r\n\r\n    let eatStyles = {};\r\n    if (hunger < 80) eatStyles = {filter: 'hue-rotate(-30deg)'};\r\n    if (hunger < 60) eatStyles = {filter: 'hue-rotate(-40deg)'};\r\n    if (hunger < 40) eatStyles = {filter: 'hue-rotate(-50deg)'};\r\n    if (hunger < 20) eatStyles = {filter: 'hue-rotate(-60deg)'};\r\n    if (hunger < 1) eatStyles = {filter: 'hue-rotate(-70deg)'};\r\n\r\n    let dehydrationStyles = {};\r\n    if (dehydration < 70) dehydrationStyles = {filter: 'hue-rotate(-30deg)'};\r\n    if (dehydration < 40) dehydrationStyles = {filter: 'hue-rotate(-40deg)'};\r\n    if (dehydration < 10) dehydrationStyles = {filter: 'hue-rotate(-50deg)'};\r\n    if (dehydration < 1) dehydrationStyles = {filter: 'hue-rotate(-60deg)'};\r\n\r\n    let temperatureStyles = {};\r\n    if (temperature < 80) temperatureStyles = {filter: 'hue-rotate(45deg)'};\r\n    if (temperature < 60) temperatureStyles = {filter: 'hue-rotate(60deg)'};\r\n    if (temperature < 40) temperatureStyles = {filter: 'hue-rotate(75deg)'};\r\n    if (temperature < 20) temperatureStyles = {filter: 'hue-rotate(90deg)'};\r\n    if (temperature < 1) temperatureStyles = {filter: 'hue-rotate(100deg)'};\r\n\r\n    return (\r\n        <div className=\"huds\">\r\n            <HudsMenuData health={ health } armor={ armor } hunger={ hunger } dehydration={ dehydration } temperature={ temperature } />\r\n\r\n            <CircularHudWithImage value={ health } style={ {...hudStyles, ...healthStyles, right: '15.2rem'} } size={ '' } hud={ <HealthHud health={ health } /> } />\r\n            <CircularHudWithImage value={ hunger } style={ {...hudStyles, ...eatStyles, right: '10.2rem'} } size={ '' } hud={ <EatHud hunger={ hunger } /> } />\r\n            <CircularHudWithImage value={ dehydration } style={ {...hudStyles, ...dehydrationStyles, right: '5.2rem'} } size={ '' } hud={ <DehydrationHud dehydration={ dehydration } /> } />\r\n            <CircularHudWithImage value={ temperature } style={ {...hudStyles, ...temperatureStyles, right: '.2rem'} } size={ '' } hud={ <TemperatureHud temperature={ temperature } /> } />\r\n\r\n            <div style={ {textShadow: 'rgba(0, 0, 0, 0.37) 0px 0px 7px', position: 'absolute', bottom: '10rem', right: '2rem', color: '#000'} }>\r\n                <div>[TAB] Инвентарь:</div>\r\n                <div>[G] Зайти в инвентарь машины:</div>\r\n                <div>[F6] HUDS:</div>\r\n            </div>\r\n{/* \r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_HEALTH_HUDS, health - 5)) }>-</button>\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_HEALTH_HUDS, health + 5)) }>+</button>\r\n\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_ARMOR_HUDS, armor - 5)) }>-</button>\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_ARMOR_HUDS, armor + 5)) }>+</button>\r\n\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_HUNGER_HUDS, hunger - 5)) }>-</button>\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_HUNGER_HUDS, hunger + 5)) }>+</button>\r\n            \r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_DEHYDRATION_HUDS, dehydration - 5)) }>-</button>\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_DEHYDRATION_HUDS, dehydration + 5)) }>+</button>\r\n\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_TEMPERATURE_HUDS, temperature - 5)) }>-</button>\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_TEMPERATURE_HUDS, temperature + 5)) }>+</button>  */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    Huds,\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { setLootCreateData, setPropLootCreateData, PropType } from \"../../../actions/lootCreateDataActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { UIState } from \"../../../reducers/UIReducer\";\r\nimport { Button, FormControl, InputLabel, Select, MenuItem, FormHelperText, Slider } from '@material-ui/core';\r\nimport { lootCreate, setLootCreateHash, setLootCreateRotation } from \"../../../helpers/playerEvents/rpcCall\";\r\n\r\nexport type Coords = {\r\n    x: number, \r\n    y: number, \r\n    z: number,\r\n};\r\n\r\nenum SliderType {\r\n    ROTATION = 'ROTATION',\r\n    POSITION = 'POSITION',\r\n}\r\n\r\nfunction LootCreate() {\r\n    const dispatch = useDispatch();\r\n    const UI = useSelector((state: any): UIState => {\r\n        return state.UI || [];\r\n    });\r\n    const { objectId, objectHash, position, rotation } = UI.lootCreate;\r\n    \r\n    const maxStepRotation = 180;\r\n    const oneStepRotation = 10;\r\n    const minStep = 0;\r\n\r\n    console.log('objectHash', objectHash);\r\n\r\n    // Пересоздает текущий объект на клиенте.\r\n    const createObject = async () => {\r\n        const data = await lootCreate(objectHash); // Отправляет на клиент хэш объекта для его создания.\r\n\r\n        if (data) {\r\n            const p = data.position;\r\n            const r = data.rotation;\r\n            dispatch(\r\n                setLootCreateData({ objectId: data.objectId, objectHash: data.objectHash, position: [p[0], p[1], p[2]], rotation: [r[0], r[1], r[2]] })\r\n            );\r\n        }\r\n    };\r\n\r\n    const onHashChange = (event) => {\r\n        dispatch(\r\n            setPropLootCreateData(PropType.OBJECT_HASH, event.target.value)\r\n        );\r\n\r\n        // Изменить хэш объекта на клиенте.\r\n        setLootCreateHash(event.target.value);\r\n    }\r\n\r\n    const onSliderChange = async (type: SliderType, coord: 'x' | 'y' | 'z', event: any, value: number) => {\r\n        if (type === SliderType.ROTATION) {\r\n            if (coord === 'x') {\r\n                rotation[0] = value;\r\n            }\r\n            if (coord === 'y') {\r\n                rotation[1] = value;\r\n            }\r\n            if (coord === 'z') {\r\n                rotation[2] = value;\r\n            }\r\n\r\n            dispatch(\r\n                setPropLootCreateData(PropType.ROTATION, rotation)\r\n            );\r\n\r\n            // Установка на клиенте вращения.\r\n            await setLootCreateRotation(rotation);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='loot'>\r\n            <div className=\"AI-content-inner__title\">\r\n                Создание точки с лутом\r\n            </div>\r\n            <div className=\"loot-create\">\r\n                <div className=\"loot-create__object\">\r\n                    <div className='loot-create__object-title'>Данные для объекта</div>\r\n                    <div>\r\n                        Hash:&nbsp;\r\n                        <br/>\r\n                        <br/>\r\n                        <FormControl>\r\n                            <InputLabel variant='outlined' id=\"loot-create__label\">Хэш объекта:</InputLabel>\r\n                            <Select\r\n                                labelId=\"loot-create__label\"\r\n                                id=\"loot-create__select\"\r\n                                onChange={ onHashChange }\r\n                                value={ objectHash }\r\n                            >\r\n                                <MenuItem value={ 'w_ar_assaultrifle' }>w_ar_assaultrifle</MenuItem>\r\n                                <MenuItem value={ 'w_sg_pumpshotgun' }>w_sg_pumpshotgun</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <br/>\r\n                        <br/>\r\n                        <Button color='secondary' onClick={ createObject }>Создать</Button>\r\n                    </div>\r\n                    \r\n                    <br />\r\n\r\n                    <div>\r\n                        Rotation: { rotation[0]} { rotation[1] } { rotation[2] }\r\n                        <div>\r\n                            <span>X:</span>\r\n                                <Slider\r\n                                    classes={ {root: 'loot-slider__root'} }\r\n                                    step={ oneStepRotation }\r\n                                    min={ minStep }\r\n                                    max={ maxStepRotation }\r\n                                    value={ rotation[0] } marks\r\n                                    onChange={ (e: any, v: any) => onSliderChange(SliderType.ROTATION, 'x', e, v) }\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <span>Y:</span>\r\n                                <Slider\r\n                                    classes={ {root: 'loot-slider__root'} }\r\n                                    step={ oneStepRotation }\r\n                                    min={ minStep }\r\n                                    max={ maxStepRotation }\r\n                                    value={ rotation[1] } marks\r\n                                    onChange={ (e: any, v: any) => onSliderChange(SliderType.ROTATION, 'y', e, v) }\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <span>Z:</span>\r\n                                <Slider\r\n                                    classes={ {root: 'loot-slider__root'} }\r\n                                    step={ oneStepRotation }\r\n                                    min={ minStep }\r\n                                    max={ maxStepRotation }\r\n                                    value={ rotation[2] } marks\r\n                                    onChange={ (e: any, v: any) => onSliderChange(SliderType.ROTATION, 'z', e, v) }\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <br />\r\n\r\n                    <div>Position: { position[0]} { position[1] } { position[2] }</div>\r\n                    <br />\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    LootCreate,\r\n}","import React from \"react\"\r\n\r\nfunction VehicleCreate() {\r\n    return (\r\n        <div className='vehicle-create'>\r\n            <div className=\"AI-content-inner__title\">\r\n                Создание машины\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    VehicleCreate,\r\n}","import React from \"react\";\r\nimport './adminInterface.css';\r\nimport { useToggle, useKeyPress } from \"@umijs/hooks\";\r\nimport { LootCreate } from \"./LootCreate\";\r\nimport { VehicleCreate } from \"./VehicleCreate\";\r\n\r\nfunction AdminInterface() {\r\n    const { state, toggle } = useToggle(1);\r\n\r\n    return (\r\n        <div className='admin'>\r\n            <div className='admin-interface'>\r\n                <div className=\"admin-interface__container\">\r\n                    <div className=\"AI-sidebar\">\r\n                        <ul>\r\n                            <li><a href=\"#\" onClick={ () => toggle(1) }>Создание точки с лутом</a></li>\r\n                            <li><a href=\"#\" onClick={ () => toggle(2) }>Создание машины</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"AI-content\">\r\n                        <div className=\"AI-content__title\">Панель администратора</div>\r\n                        { state === 1 && <LootCreate /> }\r\n                        { state === 2 && <VehicleCreate /> }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    AdminInterface,\r\n}","import React, { useState } from \"react\";\r\nimport './auth.css';\r\nimport { useToggle } from \"@umijs/hooks\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { enqueueSnackbar, NotifyVariant } from \"../../../actions/notificationActions\";\r\nimport { GiThumbUp, GiThumbDown } from \"react-icons/gi\";\r\nimport { serverRegister, serverLogin, updateCharacterCameraPosition, serverCheckLogin } from \"../../../helpers/playerEvents/rpcCall\";\r\nimport { Previous } from \"../Previous\";\r\nimport { push } from \"connected-react-router\";\r\nimport { Animation, Whisper, Tooltip } from 'rsuite';\r\nimport { State } from \"../../../reducers\";\r\nimport { setRegister, updateAuthProp } from \"../../../actions/authActions\";\r\nconst { Bounce } = Animation;\r\n\r\nconst btnRegValidStyles = {\r\n    border: '1px solid #c0c0c0',   \r\n    color: '#c0c0c0',\r\n    opacity: '.5',\r\n};\r\n\r\nconst inputStyles = (isError) => ({\r\n    border: isError ? '1px dashed rgba(160, 7, 17, 1)' : '',\r\n    color: isError ? 'rgba(160, 7, 17, 1)' : '',\r\n})\r\n\r\nfunction Register() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const dispatch = useDispatch();\r\n\r\n    const registerState = state.auth.register;\r\n\r\n    const isLoginValid = registerState.login.isValid;\r\n    const isLoginTouch = registerState.login.isTouch;\r\n    const isEmailValid = registerState.email.isValid;\r\n    const isEmailTouch = registerState.email.isTouch;\r\n    const isPassValid = registerState.password.isValid;\r\n    const isPassTouch = registerState.password.isTouch;\r\n    const isConfirmPassValid = registerState.confirmPassword.isValid;\r\n    const isConfirmPassTouch = registerState.confirmPassword.isTouch;\r\n\r\n    const checkData = () => {\r\n        const newState = {...registerState};\r\n        newState.login.isValid = registerState.login.regular.test(registerState.login.val); \r\n        newState.email.isValid = registerState.email.regular.test(registerState.email.val); \r\n        newState.password.isValid = registerState.password.regular.test(registerState.password.val);\r\n        newState.confirmPassword.isValid = newState.confirmPassword.val === newState.password.val; \r\n\r\n        dispatch(\r\n            setRegister(newState)\r\n        );\r\n    };\r\n\r\n    const clickRegisterBtn = async () => {\r\n        if (isLoginValid && isPassValid && isConfirmPassValid && isEmailValid) {\r\n            // Если игрока с указанным ником нет на сервере, то допустить к кастомизации.\r\n            const serverResult = await serverCheckLogin(registerState.login.val);\r\n            \r\n            if (serverResult.result) {\r\n                updateCharacterCameraPosition();\r\n                dispatch(\r\n                    push('/character')\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    enqueueSnackbar({\r\n                        message: serverResult.text,\r\n                            options: {\r\n                                key: new Date().getTime() + Math.random(),\r\n                                variant: serverResult.result ? NotifyVariant.SUCCESS : NotifyVariant.ERROR,\r\n                                anchorOrigin: {\r\n                                    horizontal: 'center',\r\n                                    vertical: 'bottom',\r\n                                }\r\n                        },\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    const onChange = (event: any) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        dispatch(\r\n            updateAuthProp(name, 'val', value)\r\n        );\r\n\r\n        checkData();\r\n    };\r\n\r\n    const onBlur = (event: any) => {\r\n        const name = event.target.name;\r\n        dispatch(\r\n            updateAuthProp(name, 'isTouch', true)\r\n        );\r\n    };\r\n\r\n    const isDisabled = !isLoginValid || !isPassValid || !isConfirmPassValid || !isEmailValid;\r\n    console.log('isDisabled', isDisabled);\r\n\r\n    return (\r\n        <Bounce in={ true }>\r\n            <div className='middle-register'>\r\n                <form className=\"middle-form\">\r\n                    <div className='middle-form_input'>\r\n                        <input placeholder='Логин(Никнейм)' type=\"text\" name='login' value={ registerState.login.val || '' } onChange={ onChange } onBlur={ onBlur } style={ inputStyles(isLoginTouch && !isLoginValid) } />\r\n                        { isLoginTouch && isLoginValid && <GiThumbUp /> }\r\n                        { isLoginTouch && !isLoginValid && <span style={ {color: 'rgb(218, 75, 85)'} }><GiThumbDown /></span> } \r\n                    </div>\r\n                    <div className='middle-form_input'>\r\n                        <input placeholder='Емейл' type=\"email\" name='email' value={ registerState.email.val || '' } onChange={ onChange } onBlur={ onBlur } style={ inputStyles(registerState.email.isTouch && !registerState.email.isValid) } />\r\n                        { isEmailTouch && isEmailValid && <GiThumbUp /> }\r\n                        { isEmailTouch && !isEmailValid && <span style={ {color: 'rgb(218, 75, 85)'} }><GiThumbDown /></span> } \r\n                    </div>\r\n                    <div className='middle-form_input'>\r\n                        <input placeholder='Введите пароль' type=\"password\" name='password' value={ registerState.password.val || '' } onChange={ onChange } onBlur={ onBlur } style={ inputStyles(isPassTouch && !isPassValid) } />\r\n                        { isPassTouch && isPassValid && <GiThumbUp /> }\r\n                        { isPassTouch && !isPassValid && <span style={ {color: 'rgb(218, 75, 85)'} }><GiThumbDown /></span> } \r\n                    </div>\r\n                    <div className='middle-form_input'>\r\n                        <input placeholder='Повторите пароль' type=\"password\" name='confirmPassword' value={ registerState.confirmPassword.val || '' } onChange={ onChange } onBlur={ onBlur } style={ inputStyles(isConfirmPassTouch && !isConfirmPassValid) } />\r\n                        { isConfirmPassTouch && isConfirmPassValid && <GiThumbUp /> }\r\n                        { isConfirmPassTouch && !isConfirmPassValid && <span style={ {color: 'rgb(218, 75, 85)'} }><GiThumbDown /></span> }\r\n                    </div>\r\n                </form>\r\n                <div className=\"auth-interface__bottom\">\r\n                    <button \r\n                        className='button-register' \r\n                        onClick={ () => clickRegisterBtn() } \r\n                        disabled={ isDisabled }\r\n                        style={ isDisabled ? btnRegValidStyles : {} }    \r\n                    >\r\n                        Далее\r\n                    </button>\r\n                </div>\r\n                <div className='auth-interface__bottom-errors'>\r\n                    { isLoginTouch && !isLoginValid && <div>Логин должен быть длиной от <span style={{color: '#34c3ff'}}>3 до 16 символов</span>. Может содержать латинские буквы и цифры.</div> }\r\n                    { isEmailTouch && !isEmailValid && <div>Введите корректный емейл.</div> }\r\n                    { isPassTouch && !isPassValid && <div>Пароль должен быть от <span style={{color: '#34c3ff'}}>6 до 30 символов</span>, разрешено латиниские буквы, цифры и спецсимволы <span style={{color: '#34c3ff'}}>@ # $ % ^ & *</span>.</div> }\r\n                    { isConfirmPassTouch && !isConfirmPassValid && <div>Пароли не совпадают.</div> }\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    );\r\n}\r\n\r\ntype LoginType = {\r\n    login: string;\r\n    password: string;\r\n}\r\n\r\nfunction Login() {\r\n    const dispatch = useDispatch();\r\n    \r\n    const [state, setState] = useState<LoginType>({\r\n        login: '',\r\n        password: '',\r\n    });\r\n\r\n    const onChange = (event: any) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        setState({\r\n            ...state,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const onClick = async () => {\r\n        const serverResult = await serverLogin(state.login, state.password);\r\n\r\n        dispatch(\r\n            enqueueSnackbar({\r\n                message: serverResult.text,\r\n                options: {\r\n                    key: new Date().getTime() + Math.random(),\r\n                    variant: serverResult.result ? NotifyVariant.SUCCESS : NotifyVariant.ERROR,\r\n                    anchorOrigin: {\r\n                        horizontal: 'center',\r\n                        vertical: 'bottom',\r\n                    },\r\n                },\r\n            })\r\n        );\r\n    };\r\n\r\n    const isDisabled = state.login.length < 3 || state.password.length < 6;\r\n\r\n    return (\r\n        <Bounce in={ true }>\r\n            <div className='middle-login'>\r\n                <form className=\"middle-form\">\r\n                    <input placeholder='Введите логин' type=\"text\" name='login' value={ state.login || '' } onChange={ onChange } />\r\n                    <input placeholder='Введите пароль' type=\"password\" name='password' value={ state.password || '' } onChange={ onChange } />\r\n                </form>\r\n                <div className=\"auth-interface__bottom\">\r\n                    <button \r\n                        className='button-register' \r\n                        disabled={ isDisabled }\r\n                        style={ isDisabled ? btnRegValidStyles : {} }\r\n                        onClick={ onClick }\r\n                    >\r\n                        Авторизоваться\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    );\r\n}\r\n\r\nfunction Auth() {\r\n    const { state: toggleState, toggle: setToggle } = useToggle(0);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Bounce in={ true }>\r\n            <div className='auth'>\r\n                <div className=\"auth-interface\">\r\n                    <div className=\"auth-interface__top\">\r\n                        <div className=\"auth-interface__login\" onClick={ () => setToggle(0) } style={ {color: toggleState === 0 ? 'rgba(160, 7, 17, 1)' : ''} }>\r\n                            Авторизация\r\n                        </div>\r\n                        <div className=\"auth-interface__register\" onClick={ () => setToggle(1) } style={ {color: toggleState === 1 ? 'rgba(160, 7, 17, 1)' : ''} }>\r\n                            Регистрация\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"auth-interface__middle\">\r\n                        { toggleState === 0 && <Login /> }\r\n                        { toggleState === 1 && <Register /> }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    );\r\n}\r\n\r\nexport {\r\n    Auth,\r\n}","import React from \"react\";\r\nimport ReactSlider from \"react-slider\";\r\n\r\ntype Props = {\r\n    onChange: (p1: number) => any;\r\n    min: number;\r\n    max: number;\r\n    step: number;\r\n    defVal?: number;\r\n    value?: number;\r\n};\r\n\r\nfunction CharacterSlider(props: Props) {\r\n    const { step, min, max, value, onChange } = props;\r\n    \r\n    return (\r\n        <div>\r\n            <ReactSlider\r\n                className=\"character-slider\"\r\n                thumbClassName=\"character-thumb\"\r\n                trackClassName=\"character-track\"\r\n                min={ min }\r\n                max={ max }\r\n                step={ step }\r\n                value={ value }\r\n                renderThumb={(props, state) => <div {...props}></div>}\r\n                onChange={ (val: any) => onChange(val) }\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterSlider,\r\n}","import React from \"react\";\r\nimport { CharacterSlider } from \"../CharacterSlider\";\r\nimport { setCharacterFaceFeature } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setFaceFeature } from \"../../../../actions/characterActions\";\r\nimport { State } from \"../../../../reducers\";\r\n\r\nfunction CharacterFace() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const face = state.character.face;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSliderChange = (index: number, feature: number) => {\r\n        setCharacterFaceFeature(index, feature);\r\n        dispatch(setFaceFeature(index, feature));\r\n    };\r\n\r\n    const getData = () => {\r\n        return face.map(i => (\r\n            <div className='character-face__item' key={ `${i.index}_${i.index}` }>\r\n                <div className=\"character-face__item-title\">{ i.name }</div>\r\n                <CharacterSlider min={-1.0} max={1.0} step={0.1} value={ i.feature } onChange={ (n: number) => onSliderChange(i.index, n) } />\r\n            </div>\r\n        ));\r\n    }\r\n \r\n    return (\r\n        <div className='character-face'>\r\n            { getData() }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterFace,\r\n}","import React, { useState } from \"react\";\r\nimport { FaLongArrowAltLeft, FaLongArrowAltRight } from \"react-icons/fa\";\r\nimport { useHover } from '@umijs/hooks';\r\n\r\ntype Props = {\r\n    onLeftClick: () => any;\r\n    onRightClick: () => any;\r\n    topText?: string;\r\n    value: any;\r\n};\r\n\r\nfunction AnySelect(props: Props) {\r\n    const { onLeftClick, onRightClick, value, topText } = props;\r\n    const [isHoverLeft, hoverLeftRef] = useHover<HTMLDivElement>();\r\n    const [isHoverRight, hoverRightRef] = useHover<HTMLDivElement>();\r\n    // const [isHovering, hoverRef] = useHover<HTMLDivElement>();\r\n\r\n    const cssSelectContainer: any = {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '13rem',\r\n        textAlign: 'center',\r\n        margin: '0 auto',\r\n    }\r\n    \r\n    const cssSelectHeadArrowLeft = {\r\n        fontSize: '3rem',\r\n        color: '#34c3ff',\r\n        verticalAlign: 'middle',\r\n        opacity: isHoverLeft ? .5 : 1,\r\n\r\n    }\r\n    const cssSelectHeadArrowRight = {\r\n        fontSize: '3rem',\r\n        color: '#34c3ff',\r\n        verticalAlign: 'middle',\r\n        opacity: isHoverRight ? .5 : 1,\r\n    }\r\n\r\n    const cssSelectHeadValue = {\r\n        width: '10rem',\r\n        fontSize: '1.5rem'\r\n    }\r\n\r\n    const cssTopText: any = {\r\n        textAlign: 'center',\r\n        position: 'absolute',\r\n        top: '-0.2rem',\r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        width: '100%',\r\n        color: '#fff',\r\n        textShadow: '0px 2px 9px #000000',\r\n    };\r\n\r\n    return (\r\n        <div style={ cssSelectContainer }>\r\n            <div style={ cssTopText }>\r\n                { topText }\r\n            </div>\r\n\r\n            <div style={ cssSelectHeadArrowLeft } onClick={ onLeftClick } ref={ hoverLeftRef }>\r\n                <FaLongArrowAltLeft style={ {verticalAlign: 'middle'} } />\r\n            </div>\r\n            <div style={ cssSelectHeadValue }>\r\n                { value }\r\n            </div>\r\n            <div style={ cssSelectHeadArrowRight } onClick={ onRightClick } ref={ hoverRightRef }>\r\n                <FaLongArrowAltRight style={ {verticalAlign: 'middle'} } />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    AnySelect,\r\n}","import React, { useState } from \"react\";\r\nimport { FaLongArrowAltLeft, FaLongArrowAltRight } from \"react-icons/fa\";\r\nimport { setCharacterHeadProp } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { State } from \"../../../../reducers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setParentIndex } from \"../../../../actions/characterActions\";\r\nimport { AnySelect } from \"../../../shared/AnySelect\";\r\n\r\ntype Props = {\r\n    parentsObj: any;\r\n    parents: { father: any, mother: any };\r\n    parent: 'father' | 'mother';\r\n    text: string;\r\n    sendData: (name: any, value: any) => any;\r\n};\r\n\r\nfunction CharacterHeadParent(props: Props) {\r\n    const { parents, parent, sendData, parentsObj, text } = props;\r\n    const characterState = useSelector((state: State) => state || []);\r\n    const parentIndex = characterState.character.head[parent].index;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onIncrement = () => {\r\n        const length = parents[parent].length - 1;\r\n        let c = parentIndex;\r\n        \r\n        c += 1;\r\n        if (c > length) {\r\n            c = length;\r\n        }\r\n\r\n        dispatch(setParentIndex(parent, c));\r\n        sendData(parent, parentsObj[parents[parent][c]]);\r\n    };\r\n\r\n    const onDecrement = () => {\r\n        let c = parentIndex;\r\n\r\n        c -= 1;\r\n        if (c <= 0) {\r\n            c = 0;\r\n        }\r\n\r\n        dispatch(setParentIndex(parent, c));\r\n        sendData(parent, parentsObj[parents[parent][c]]);\r\n    };\r\n\r\n    return (\r\n        <div className='character-head'>\r\n            <AnySelect onLeftClick={ onDecrement } onRightClick={ onIncrement } value={ parents[parent][parentIndex] } topText={ text } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterHeadParent,\r\n}\r\n","import React from \"react\";\r\nimport { CharacterHeadParent } from \"../CharacterHeadParent\";\r\nimport { CharacterSlider } from \"../CharacterSlider\";\r\nimport { setCharacterHeadProp } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { State } from \"../../../../reducers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setHeadProp } from \"../../../../actions/characterActions\";\r\n\r\nconst fatherObj = {\r\n    \"Benjamin\": 0, \r\n    \"Daniel\": 1, \r\n    \"Joshua\": 2, \r\n    \"Noah\": 3, \r\n    \"Andrew\": 4, \r\n    \"Juan\": 5, \r\n    \"Alex\": 6, \r\n    \"Isaac\": 7, \r\n    \"Evan\": 8, \r\n    \"Ethan\": 9, \r\n    \"Vincent\": 10, \r\n    \"Angel\": 11, \r\n    \"Diego\": 12, \r\n    \"Adrian\": 13, \r\n    \"Gabriel\": 14, \r\n    \"Michael\": 15, \r\n    \"Santiago\": 16, \r\n    \"Kevin\": 17, \r\n    \"Louis\": 18, \r\n    \"Samuel\": 19, \r\n    \"Anthony\": 20, \r\n    \"Claude\": 42, \r\n    \"Niko\": 43, \r\n    \"John\": 44,\r\n};\r\n\r\nconst motherObj = {\r\n    \"Hannah\": 21, \r\n    \"Aubrey\": 22,\r\n    \"Jasmine\": 23, \r\n    \"Gisele\": 24, \r\n    \"Amelia\": 25, \r\n    \"Isabella\": 26, \r\n    \"Zoe\": 27, \r\n    \"Ava\": 28, \r\n    \"Camila\": 29, \r\n    \"Violet\": 30, \r\n    \"Sophia\": 31, \r\n    \"Evelyn\": 32, \r\n    \"Nicole\": 33, \r\n    \"Ashley\": 34, \r\n    \"Gracie\": 35, \r\n    \"Brianna\": 36, \r\n    \"Natalie\": 37, \r\n    \"Olivia\": 38, \r\n    \"Elizabeth\": 39, \r\n    \"Charlotte\": 40, \r\n    \"Emma\": 41, \r\n    \"Misty\": 45,\r\n};\r\n\r\nconst father = [\"Benjamin\", \"Daniel\", \"Joshua\", \"Noah\", \"Andrew\", \"Juan\", \"Alex\", \"Isaac\", \"Evan\", \"Ethan\", \"Vincent\", \"Angel\", \"Diego\", \"Adrian\", \"Gabriel\", \"Michael\", \"Santiago\", \"Kevin\", \"Louis\", \"Samuel\", \"Anthony\", \"Claude\", \"Niko\", \"John\"];\r\nconst mother = [\"Hannah\", \"Aubrey\", \"Jasmine\", \"Gisele\", \"Amelia\", \"Isabella\", \"Zoe\", \"Ava\", \"Camila\", \"Violet\", \"Sophia\", \"Evelyn\", \"Nicole\", \"Ashley\", \"Gracie\", \"Brianna\", \"Natalie\", \"Olivia\", \"Elizabeth\", \"Charlotte\", \"Emma\", \"Misty\"];\r\nconst parents = { father, mother };\r\n\r\nfunction CharacterHead() {\r\n    const sendData = (name: any, val: number) => {\r\n        setCharacterHeadProp({name, val});\r\n    };\r\n\r\n    const state = useSelector((state: State) => state || []);\r\n    const dispatch = useDispatch();\r\n\r\n    const onChange = (name: string, val: number) => {\r\n        sendData(name, val);\r\n        dispatch(setHeadProp(name, val));\r\n    };\r\n\r\n    return (\r\n        <div className='character-head-container'>\r\n            <CharacterHeadParent parent={ 'father' } sendData={ sendData } parents={ parents } parentsObj={ fatherObj } text='Отец' />\r\n            <CharacterHeadParent parent={ 'mother' } sendData={ sendData } parents={ parents } parentsObj={ motherObj } text='Мать' />\r\n\r\n            <div className='character-head-container__title' style={{margin: '1rem 0'}}>Схожесть</div>\r\n            <CharacterSlider min={ 0 } max={ 1 } step={ 0.1 } value={ state.character.similarity } onChange={ (val) => { onChange('similarity', val) } } />\r\n\r\n            <div className='character-head-container__title' style={{margin: '1rem 0'}}>Цвет кожи</div>\r\n            <CharacterSlider min={ 0 } max={ 1 } step={ 0.1 } value={ state.character.skin } onChange={ (val) => { onChange('skin', val) } } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterHead,\r\n}","import React from \"react\";\r\nimport { AnySelect } from \"../../../shared/AnySelect\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { State } from \"../../../../reducers\";\r\nimport { setHairId, setHairColor } from \"../../../../actions/characterActions\";\r\nimport { setCharacterHair, setCharacterHairColor } from \"../../../../helpers/playerEvents/rpcCall\";\r\n\r\n// drawableIds.\r\nconst hairList = {\r\n    male: [\r\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, \r\n        24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, \r\n        44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, \r\n        65, 66, 67, 68, 69, 70, 71, 72, 73, 74,\r\n    ],\r\n    female: [\r\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, \r\n        22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, \r\n        42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, \r\n        62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,\r\n    ],\r\n};\r\n\r\nfunction CharacterHair() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const dispatch = useDispatch();\r\n    const gender = state.character.gender; \r\n    let hairId = state.character.hair;\r\n    let hairColorId = state.character.hairColorId;\r\n\r\n    const onLeftClick = async () => {      \r\n        hairId -= 1;\r\n\r\n        if (hairId < 0) {\r\n            hairId = hairList[gender].length - 1;\r\n        }\r\n\r\n        // Отправка на клиент.\r\n        await setCharacterHair(hairList[gender][hairId]);\r\n        \r\n        dispatch(\r\n            setHairId(hairId)\r\n        );\r\n    };\r\n\r\n    const onRightClick = async () => {\r\n        hairId += 1;\r\n\r\n        if (hairId > hairList[gender].length - 1) {\r\n            hairId = 0;\r\n        }\r\n\r\n        // Отправка на клиент.\r\n        await setCharacterHair(hairList[gender][hairId]);\r\n        \r\n        dispatch(\r\n            setHairId(hairId)\r\n        );\r\n    };\r\n\r\n    const onHairColorRightClick = () => {\r\n        hairColorId += 1;\r\n        if (hairColorId > 63) {\r\n            hairColorId = 0;\r\n        } \r\n\r\n        // Отправка на клиент.\r\n        setCharacterHairColor(hairColorId);\r\n\r\n        dispatch(setHairColor(hairColorId));\r\n    };\r\n\r\n    const onHairColorLeftClick = () => {\r\n        hairColorId -= 1;\r\n        if (hairColorId < 0) {\r\n            hairColorId = 63;\r\n        } \r\n        \r\n        // Отправка на клиент.\r\n        setCharacterHairColor(hairColorId);\r\n\r\n        dispatch(setHairColor(hairColorId));\r\n    };\r\n    \r\n    return (\r\n        <div className='character-hair'>\r\n            <AnySelect value={ hairList[gender][hairId] } onRightClick={ onRightClick } onLeftClick={ onLeftClick } topText='Тип волос' />\r\n            <AnySelect value={ hairColorId } onRightClick={ onHairColorRightClick } onLeftClick={ onHairColorLeftClick } topText='Цвет волос' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterHair,\r\n}","import React from \"react\";\r\nimport ReactSlider from \"react-slider\";\r\nimport { Animation } from 'rsuite';\r\nimport { setCharacterHeading, setCharacterCamera } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction CharacterHeading() {\r\n    const { Bounce } = Animation;\r\n    \r\n    const onSliderHeadingChange = (value: any) => {\r\n        if (typeof value === 'number') {\r\n            setCharacterHeading(value)\r\n        }\r\n    };\r\n\r\n    const onSliderCameraChange = (coord: 'x' | 'y' | 'z', n: number) => {\r\n        if (typeof n === 'number') {\r\n            setCharacterCamera(coord, n);\r\n        }\r\n    };\r\n\r\n    const cssSlider: any = {\r\n        textAlign: 'center', \r\n        fontSize: '1.5rem', \r\n        color: '#fff', \r\n        paddingBottom: '.5rem',\r\n        textShadow: '0px 0px 7px rgba(0,0,0,0.37)'\r\n    };\r\n    \r\n    return (\r\n        <div className=\"character-heading\">\r\n        <Bounce in={ true }>\r\n            <div>\r\n                <div>\r\n                    <span style={cssSlider}\r\n                    >Направление камеры по вертикали</span>\r\n                    <ReactSlider\r\n                        className=\"heading-slider\"\r\n                        thumbClassName=\"heading-thumb\"\r\n                        trackClassName=\"heading-track\"\r\n                        min={ 15.5 }\r\n                        max={ 17.5 }\r\n                        step={ .1 }\r\n                        defaultValue={ 16.5 }\r\n                        renderThumb={(props, state) => <div {...props}></div>}\r\n                        onChange={ (v: any) => onSliderCameraChange('z', v) }\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <span style={cssSlider}\r\n                    >Направление камеры по горизонтали</span>\r\n                    <ReactSlider\r\n                        className=\"heading-slider\"\r\n                        thumbClassName=\"heading-thumb\"\r\n                        trackClassName=\"heading-track\"\r\n                        min={ 5179 }\r\n                        max={ 5180 }\r\n                        step={ .1 }\r\n                        defaultValue={ 5179.5 }\r\n                        renderThumb={(props, state) => <div {...props}></div>}\r\n                        onChange={ (v: any) => onSliderCameraChange('y', v) }\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <span style={cssSlider}\r\n                    >Направление персонажа</span>\r\n                    <ReactSlider\r\n                        className=\"heading-slider\"\r\n                        thumbClassName=\"heading-thumb\"\r\n                        trackClassName=\"heading-track\"\r\n                        min={ 1 }\r\n                        max={ 360 }\r\n                        defaultValue={ 180 }\r\n                        renderThumb={(props, state) => <div {...props}></div>}\r\n                        onChange={ onSliderHeadingChange }\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterHeading,\r\n}","function range(value: number, min: number, max: number) {\r\n    if (value < min) {\r\n        value = min;\r\n    }\r\n    if (value > max) {\r\n        value = max;\r\n    }\r\n    return value;\r\n};\r\n\r\nexport {\r\n    range,\r\n}","import React from \"react\";\r\nimport { AnySelect } from \"../../../shared/AnySelect\";\r\nimport { range } from \"../../../../helpers/helps\";\r\nimport { setCharacterHeadOverlay } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { State } from \"../../../../reducers\";\r\nimport { setHeadOverlayProp } from \"../../../../actions/characterActions\";\r\n\r\n\r\nfunction CharacterHeadOverlay() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const dispatch = useDispatch();\r\n\r\n    // state.character.headOverlay[1].overlayId\r\n \r\n    const getIndex = (overlayId, index) => {\r\n        switch (overlayId) {\r\n            case 0: {\r\n                return range(index, 0, 23);\r\n            }\r\n            case 1: {\r\n                return range(index, 0, 28);\r\n            }\r\n            case 2: {\r\n                return range(index, 0, 33);\r\n            }\r\n            case 3: {\r\n                return range(index, 0, 14);\r\n            }\r\n            case 4: {\r\n                return range(index, 0, 74);\r\n            }\r\n            case 5: {\r\n                return range(index, 0, 6);\r\n            }\r\n            case 6: {\r\n                return range(index, 0, 11);\r\n            }\r\n            case 7: {\r\n                return range(index, 0, 10);\r\n            }\r\n            case 8: {\r\n                return range(index, 0, 9);\r\n            }\r\n            case 9: {\r\n                return range(index, 0, 17);\r\n            }\r\n            case 10: {\r\n                return range(index, 0, 16);\r\n            }\r\n            case 11: {\r\n                return range(index, 0, 11);\r\n            }\r\n            case 12: {\r\n                return range(index, 0, 1);\r\n            }\r\n            default: {\r\n                return -1;\r\n            }\r\n        }\r\n    };\r\n\r\n    const onLeft = (overlayId: number, index: number) => {\r\n        index = getIndex(overlayId, --index);\r\n        dispatch(\r\n            setHeadOverlayProp(overlayId, getIndex(overlayId, index))\r\n        );\r\n        setCharacterHeadOverlay(overlayId, index);\r\n    };\r\n\r\n    const onRight = (overlayId: number, index: number) => {\r\n        index = getIndex(overlayId, ++index);\r\n        dispatch(\r\n            setHeadOverlayProp(overlayId, getIndex(overlayId, index))\r\n        );\r\n        setCharacterHeadOverlay(overlayId, index);\r\n    };\r\n\r\n    const getData = () => {\r\n        return state.character.headOverlay.map(i => {\r\n            const { index, overlayId } = state.character.headOverlay[i.overlayId];\r\n            \r\n            let value: any = index;\r\n\r\n            if (overlayId === 12) {\r\n                value = index === 1 ? 'Да' : 'Нет';\r\n            }\r\n\r\n            return (\r\n                <div key={ `${i.name}_${i.index}` }>\r\n                    <AnySelect \r\n                        onLeftClick={ () => onLeft(i.overlayId, i.index) } \r\n                        onRightClick={ () => onRight(i.overlayId, i.index) } \r\n                        value={ value } \r\n                        topText={ i.name } \r\n                    />\r\n                </div>\r\n            )\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className='character-head-overlay'>\r\n            { getData() }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterHeadOverlay,\r\n}","import React from \"react\";\r\nimport ReactSlider from \"react-slider\";\r\nimport { AnySelect } from \"../../../shared/AnySelect\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { State } from \"../../../../reducers\";\r\nimport { range } from \"../../../../helpers/helps\";\r\nimport { setEyesColor } from \"../../../../actions/characterActions\";\r\nimport { setCharacterEyes } from \"../../../../helpers/playerEvents/rpcCall\";\r\n\r\nfunction CharacterEyes() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const dispatch = useDispatch();\r\n    let eyes = state.character.eyes;\r\n\r\n    const onLeft = () => {\r\n        eyes -= 1;\r\n        eyes = range(eyes, 0, 31);\r\n        dispatch(\r\n            setEyesColor(eyes)\r\n        );\r\n        setCharacterEyes(eyes);\r\n    };\r\n    const onRight = () => {\r\n        eyes += 1;\r\n        eyes = range(eyes, 0, 31);\r\n        dispatch(\r\n            setEyesColor(eyes)\r\n        );\r\n        setCharacterEyes(eyes);\r\n    };\r\n\r\n    return (\r\n        <div className='character-eyes'>\r\n            <AnySelect \r\n                onLeftClick={ () => onLeft() } \r\n                onRightClick={ () => onRight() } \r\n                value={ eyes }\r\n                topText={ 'Цвет глаз' } \r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterEyes,\r\n}","import React, { useEffect } from \"react\";\r\nimport './character.css';\r\nimport { Drawer, Button, Slider, Animation } from 'rsuite';\r\nimport { Previous } from \"../Previous\";\r\nimport { push } from \"connected-react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactSlider from 'react-slider'\r\nimport { setCharacterHeading, setCharacterGender, resetCharacter, serverRegister, updateCharacterCameraPosition, serverCharacterReady } from \"../../../helpers/playerEvents/rpcCall\";\r\nimport { CharacterFace } from \"./CharacterFace\";\r\nimport { CharacterHead } from \"./CharacterHead\";\r\nimport { setInitialCharacter, setGender } from \"../../../actions/characterActions\";\r\nimport { State } from \"../../../reducers\";\r\nimport { CharacterHair } from \"./CharacterHair\";\r\nimport { CharacterHeading } from \"./CharacterHeading\";\r\nimport { CharacterHeadOverlay } from \"./CharacterHeadOverlay\";\r\nimport { CharacterEyes } from \"./CharacterEyes\";\r\nimport { enqueueSnackbar, NotifyVariant } from \"../../../actions/notificationActions\";\r\n\r\nconst { Bounce } = Animation;\r\n\r\nfunction CharacterTitle(props: { title: string; }) {\r\n    const { title } = props;\r\n    \r\n    return (\r\n        <div style={ {fontSize: '1.6rem', margin: '2rem 0', textAlign: 'center', textTransform: 'uppercase'} }>{ title }</div>\r\n    );\r\n}\r\n\r\nfunction Character() {\r\n    const state = useSelector((state: State) => state.character || []);\r\n    const registerState = useSelector((state: State) => state.auth.register || []);\r\n    const dispatch = useDispatch();\r\n    const { login, email, password } = registerState;\r\n\r\n    const onGenderClick = async (gender: 'male' | 'female') => {\r\n        await resetCharacter();\r\n        await setCharacterGender(gender);\r\n        dispatch(\r\n            setGender(gender)\r\n        );\r\n        dispatch(\r\n            setInitialCharacter()\r\n        );\r\n    };\r\n\r\n    const onClickReset = async () => {\r\n        // Отправка на клиент.\r\n        await resetCharacter();\r\n        dispatch(\r\n            setInitialCharacter()\r\n        );\r\n    };\r\n\r\n    const onReady = async () => {\r\n        const serverResult = await serverCharacterReady({\r\n            login: login.val, \r\n            email: email.val, \r\n            password: password.val,\r\n        });\r\n        // Занести данные в бд.\r\n\r\n        dispatch(\r\n            enqueueSnackbar({\r\n                message: serverResult.text,\r\n                    options: {\r\n                        key: new Date().getTime() + Math.random(),\r\n                        variant: serverResult.result ? NotifyVariant.SUCCESS : NotifyVariant.ERROR,\r\n                        anchorOrigin: {\r\n                            horizontal: 'center',\r\n                            vertical: 'bottom',\r\n                        }\r\n                },\r\n            })\r\n        );\r\n        \r\n        dispatch(push('clear'));\r\n    };\r\n\r\n    return (\r\n        <div className='character'>\r\n            <Drawer\r\n                backdrop={ false }\r\n                size={ 'xs' }\r\n                placement={ 'left' }\r\n                show={ true }\r\n                className='character-drawer'\r\n            >\r\n                <Drawer.Header>\r\n                    <span className='character-reset' onClick={ () => onClickReset() }>Сбросить</span>\r\n                </Drawer.Header>\r\n                <Drawer.Body>\r\n                    <div className=\"character-content\">\r\n                        <div className=\"character-gender\">\r\n                            <Button appearance=\"ghost\" color='red' size='lg' active onClick={ () => onGenderClick('male') }>Мужской</Button>\r\n                            <Button appearance=\"ghost\" color='violet' size='lg' active onClick={ () => onGenderClick('female') }>Женский</Button>\r\n                        </div>\r\n                        <CharacterTitle title='Лицо' />\r\n                        <CharacterHead />\r\n                        <CharacterTitle title='Лицо' />\r\n                        <CharacterFace />\r\n                        <CharacterTitle title='Внешний вид' />\r\n                        <CharacterEyes />\r\n                        <CharacterHair />\r\n                        <CharacterHeadOverlay />\r\n\r\n                    </div>\r\n                </Drawer.Body>\r\n                <Drawer.Footer>\r\n                    <div style={ {textAlign: 'center'} }>\r\n                        <Button appearance=\"ghost\" size='lg' style={{textAlign: 'center', width: '8rem'}} onClick={ onReady }>ГОТОВО</Button>\r\n                    </div>\r\n                </Drawer.Footer>\r\n            </Drawer>\r\n\r\n            <CharacterHeading />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    Character,\r\n}","import React from \"react\";\r\nimport './startMenu.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\nimport { Animation } from 'rsuite';\r\nconst { Bounce } = Animation;\r\n\r\nfunction StartMenu() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Bounce in={ true }>\r\n            <div className='start-menu'>\r\n                <div className=\"start-menu__interface\">\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    );\r\n}\r\n\r\nexport {\r\n    StartMenu,\r\n}","import React from \"react\";\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport './styles.css';\r\nimport { ItemsUI } from \"../UserInterface\";\r\nimport { emitter } from \"../../helpers/emitter\";\r\nimport { NotifyComp } from \"./NotifyComp\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { DisplayUI } from \"../../reducers/UIReducer\";\r\nimport { Huds } from \"./Huds\";\r\nimport { push } from \"connected-react-router\";\r\nimport { AdminInterface } from \"../AdminInterface\";\r\nimport { Auth } from \"../StartMenu/Auth\";\r\nimport { Character } from \"../StartMenu/Character\";\r\nimport { StartMenu } from \"../StartMenu\";\r\n\r\nfunction RoutesComp() {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div style={{position: 'absolute', top: '50px', left: 0}}>\r\n      <div>\r\n        <ul>\r\n          <li><a href='#' onClick={ () => dispatch(push('/clear')) }>clear</a></li>\r\n          <li><a href='#' onClick={ () => dispatch(push('/UIItems')) }>Items UI</a></li>\r\n          <li><a href='#' onClick={ () => dispatch(push('/AdminInterface')) }>Admin Interface</a></li>\r\n          <li><a href='#' onClick={ () => dispatch(push('/auth')) }>Auth</a></li>\r\n          <li><a href='#' onClick={ () => dispatch(push('/character')) }>Character</a></li>\r\n          <li><a href='#' onClick={ () => dispatch(push('/StartMenu')) }>StartMenu</a></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Clear() {\r\n  return (<div></div>);\r\n}\r\n\r\nfunction App() {\r\n  const store = useSelector((store: any) => store || []);\r\n  const displayUI: DisplayUI = store.UI.displayUI;\r\n  const { huds } = displayUI;\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      { huds && <Huds />}\r\n      <NotifyComp />\r\n      <Switch>\r\n        <Route exact path='/clear' component={ Clear } />\r\n        <Route exact path='/UIItems' component={ ItemsUI } />\r\n        <Route exact path='/AdminInterface' component={ AdminInterface } />\r\n        <Route exact path='/auth' component={ Auth } />\r\n        <Route exact path='/character' component={ Character } />\r\n        <Route exact path='/StartMenu' component={ StartMenu } />\r\n      </Switch>\r\n      <Redirect to=\"/UIItems\" />\r\n      {/* <RoutesComp /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {\r\n  App,\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from 'react-redux';\r\nimport { store } from \"../../store/config\";\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { App } from \"../App\";\r\nimport { history } from '../../store/config';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nfunction Root() {\r\n    return (\r\n        <Provider store={ store }>\r\n            <SnackbarProvider hideIconVariant={ false } maxSnack={ 5 } autoHideDuration={ 3000 }>\r\n                <ConnectedRouter history={ history }>\r\n                    <App />\r\n                </ConnectedRouter>\r\n            </SnackbarProvider>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport {\r\n    Root,\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'typeface-roboto';\r\nimport 'rsuite/dist/styles/rsuite-dark.css';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Root } from './components/Root';\r\nimport { rpcRegister } from './helpers/playerEvents/rpcRegister';\r\n\r\nReactDOM.render(\r\n  <Root />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n// Регистрация всех RPC события для RAGEMP.\r\nrpcRegister(); ","import { register } from 'rage-rpc';\r\nimport { Item } from '../../types';\r\nimport { NotifyOrigin } from '../../actions/notificationActions';\r\nimport { DisplayUI } from '../../reducers/UIReducer';\r\nimport { emitter } from '../emitter';\r\n\r\ntype NotifyData = {\r\n    text: string; \r\n    variant: string; \r\n    origin: NotifyOrigin;\r\n};\r\n\r\nfunction rpcRegister() {\r\n    register('cef_set_ground_items', (items: Item[]) => {\r\n        emitter.emit('eventSetGroundItems', items);\r\n    });\r\n\r\n    register('cef_set_inventory_items', (items: Item[]) => {\r\n        emitter.emit('cef_set_inventory_items', items);\r\n    });\r\n\r\n    register('cef_set_inventory_slots', (slots: number) => {\r\n        emitter.emit('eventSetInventorySlots', slots);\r\n    });\r\n\r\n    register('cef_set_notify', (data: NotifyData) => {\r\n        console.log('----------------------------------');\r\n        console.log('----------------------------------');\r\n        console.log(data);\r\n        emitter.emit('setNotify', data.text, data.variant, data.origin);\r\n    });\r\n\r\n    register('cef_set_display_ui', (displayUI: DisplayUI) => {\r\n        emitter.emit('cef_set_display_ui', displayUI);\r\n    });\r\n    \r\n    register('cef_change_UI', (name: string) => {\r\n        emitter.emit('change_UI', name);\r\n    });\r\n\r\n    register('cef_set_health_huds', (health: number) => {\r\n        emitter.emit('cef_set_health_huds', health);\r\n    });\r\n\r\n    register('cef_set_armor_huds', (armor: number) => {\r\n        emitter.emit('cef_set_armor_huds', armor);\r\n    });\r\n\r\n    register('cef_set_hunger_huds', (hunger: number) => {\r\n        emitter.emit('cef_set_hunger_huds', hunger);\r\n    });\r\n\r\n    register('cef_set_dehydration_huds', (hunger: number) => {\r\n        emitter.emit('cef_set_dehydration_huds', hunger);\r\n    });\r\n\r\n    register('cef_set_inventory_weight', (weight: number) => {\r\n        emitter.emit('cef_set_inventory_weight', weight);\r\n    });\r\n};\r\n\r\nexport {\r\n    rpcRegister,\r\n}"],"sourceRoot":""}