{"version":3,"sources":["assets/huds/eat/40.svg","assets/huds/health/100.svg","assets/huds/health/80.svg","assets/huds/health/60.svg","assets/huds/health/40.svg","assets/huds/health/20.svg","assets/huds/health/empty.svg","assets/huds/eat/100.svg","assets/huds/eat/80.svg","assets/huds/eat/60.svg","assets/huds/eat/empty.svg","assets/huds/temperature/100.svg","assets/huds/temperature/80.svg","assets/huds/temperature/60.svg","assets/huds/temperature/40.svg","assets/huds/temperature/15.svg","assets/huds/temperature/empty.svg","assets/huds/dehydration/100.svg","assets/huds/dehydration/70.svg","assets/huds/dehydration/40.svg","assets/huds/dehydration/10.svg","assets/huds/dehydration/empty.svg","assets/items/item_weapon_ak47.png","assets/items/item_armor.png","assets/items/item_ammo_shotgun.png","assets/items/item_clothes_mask_1.jpg","assets/items/item_clothes_mask_2.jpg","assets/items/item_clothes_mask_3.jpg","assets/items/item_clothes_mask_4.jpg","assets/items/item_clothes_mask_5.jpg","serviceWorker.ts","actions/notificationActions.ts","actions/hudsDataActions.ts","reducers/UIReducer.ts","actions/displayUIActions.ts","reducers/clothesReducer.ts","actions/clothesActions.ts","actions/characterActions.ts","reducers/characterReducer.ts","actions/authActions.ts","reducers/authReducer.ts","types.ts","actions/inventoryActions.ts","reducers/InventoryReducer.ts","reducers/index.ts","helpers/emitter.ts","store/config.ts","helpers/playerEvents/index.ts","components/App/NotifyComp/index.tsx","components/App/Huds/HudsMenuData/index.tsx","components/App/Huds/HealthHud.tsx","components/App/Huds/EatHud.tsx","components/App/Huds/TemperatureHud.tsx","components/App/Huds/DehydrationHud.tsx","components/App/Huds/CircularLine.tsx","components/App/Huds/CircularHudWithImage.tsx","components/App/Huds/index.tsx","components/AdminInterface/VehicleCreate/index.tsx","components/AdminInterface/index.tsx","helpers/playerEvents/rpcCall.ts","components/StartMenu/Auth/index.tsx","components/StartMenu/Character/CharacterSlider/index.tsx","components/StartMenu/Character/CharacterFace/index.tsx","components/shared/AnySelect/index.tsx","components/StartMenu/Character/CharacterHeadParent/index.tsx","components/StartMenu/Character/CharacterHead/index.tsx","components/StartMenu/Character/CharacterHair/index.tsx","components/StartMenu/Character/CharacterHeading/index.tsx","helpers/helps.ts","components/StartMenu/Character/CharacterHeadOverlay/index.tsx","components/StartMenu/Character/CharacterEyes/index.tsx","components/StartMenu/Character/index.tsx","components/StartMenu/index.tsx","helpers/getImages.ts","components/Inventory/InventoryCell/index.tsx","components/Inventory/InventoryCells/index.tsx","components/Inventory/GroundItems/index.tsx","components/Inventory/Preview.tsx","components/Inventory/index.tsx","components/App/index.tsx","components/Root/index.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","NotifyVariant","NotifyVertical","NotifyHorizontal","Notify","text","variant","horizontal","vertical","dispatch","getState","enqueueSnackbar","message","options","key","Date","getTime","Math","random","anchorOrigin","HudType","notification","type","setHudsData","value","payload","initialState","hudsData","health","armor","hunger","dehydration","temperature","isBleeding","displayUI","huds","notifications","UIReducer","state","action","SET_TEMPERATURE_HUDS","SET_HUNGER_HUDS","SET_DEHYDRATION_HUDS","SET_ARMOR_HUDS","SET_HEALTH_HUDS","map","dismissAll","dismissed","filter","snackbar","isShow","ClothesReducer","setEyesColor","id","setHeadOverlayProp","overlayId","index","setHairColor","setGender","gender","setHairId","setParentIndex","parent","defaultHead","father","mother","defaultFace","feature","name","defaultHeadOverlay","defaultState","headOverlay","JSON","parse","stringify","face","head","similarity","skin","hair","hairColorId","eyes","characterReducer","characterState","faceIndex","updateAuthProp","prop","subProp","register","login","val","isValid","isTouch","regular","password","email","confirmPassword","authReducer","newState","ItemType","ItemKey","selectInvItem","item","swapInvAndGroundItems","invId","groundId","swapItems","dragId","dropId","itemsType","items","inventory","isInventoryItems","data","maxStackCount","getData","ITEM_WEAPON_AK47","amount","WEAPON","description","serverId","shortid","generate","isDelete","weight","ITEM_AMMO_SHOTGUN","COMMON","ITEM_ARMOR","ARMOR","ITEM_CLOTHES_MASK_1","CLOTHES","inventoryItems","inventorySlots","selectInventoryItem","groundItems","InventoryReducer","msc","sum","rest","splice","invItem","groundItem","dragItem","dropItem","slots","emitter","EventEmitter","history","createMemoryHistory","initialEntries","pathname","initialIndex","store","createStore","combineReducers","auth","character","UI","clothes","router","connectRouter","compose","applyMiddleware","routerMiddleware","thunk","logger","console","log","on","push","msg","origin","setDisplayUI","displayed","NotifyComp","useDispatch","useSelector","useSnackbar","closeSnackbar","React","useEffect","forEach","includes","onClose","event","reason","myKey","onExited","removeSnackbar","HudsMenuData","props","blood","className","HealthHud","isLowHP","pulseAnimation","keyframes","pulse","HealthPulseDiv","styled","div","healthImage","image_blood_100","image_blood_80","image_blood_60","image_blood_40","image_blood_20","image_blood_empty","src","style","EatHud","imgIcon","img_icon_100","img_icon_80","img_icon_60","img_icon_40","img_empty","TemperatureHud","img_icon_20","img_icon_empty","DehydrationHud","img_icon_70","img_icon_10","CircularLine","maxValue","CircularProgress","color","size","CircularHudWithImage","styles","width","position","top","left","transform","hud","Huds","hudStyles","bottom","right","healthStyles","eatStyles","dehydrationStyles","temperatureStyles","textShadow","VehicleCreate","AdminInterface","useToggle","toggle","href","onClick","randomInteger","min","max","rand","round","takeInventoryItemToServer","itemKey","a","Promise","res","rej","setTimeout","_","result","dropInventoryItemToServer","putId","serverLogin","h","setCharacterGender","resetCharacter","setCharacterHair","dId","coord","n","setCharacterHairColor","setCharacterHeadOverlay","setCharacterEyes","updateCharacterCameraPosition","serverCheckLogin","serverCharacterReady","Bounce","Animation","btnRegValidStyles","border","opacity","inputStyles","isError","Register","registerState","isLoginValid","isLoginTouch","isEmailValid","isEmailTouch","isPassValid","isPassTouch","isConfirmPassValid","isConfirmPassTouch","clickRegisterBtn","serverResult","SUCCESS","ERROR","onChange","target","test","setRegister","checkData","onBlur","isDisabled","in","placeholder","disabled","Login","useState","setState","length","Auth","toggleState","setToggle","CharacterSlider","step","ReactSlider","thumbClassName","trackClassName","renderThumb","CharacterFace","onSliderChange","setCharacterFaceFeature","setFaceFeature","i","AnySelect","onLeftClick","onRightClick","topText","useHover","isHoverLeft","hoverLeftRef","isHoverRight","hoverRightRef","cssSelectHeadArrowLeft","fontSize","verticalAlign","cssSelectHeadArrowRight","display","justifyContent","alignItems","textAlign","margin","ref","CharacterHeadParent","parents","sendData","parentsObj","parentIndex","c","fatherObj","motherObj","CharacterHead","setCharacterHeadProp","setHeadProp","hairList","male","female","CharacterHair","hairId","CharacterHeading","onSliderCameraChange","setCharacterCamera","cssSlider","paddingBottom","defaultValue","v","setCharacterHeading","range","CharacterHeadOverlay","getIndex","onLeft","onRight","CharacterEyes","CharacterTitle","title","textTransform","Character","onGenderClick","onClickReset","onReady","Drawer","backdrop","placement","show","Header","Body","Button","appearance","active","Footer","StartMenu","images","img_item_weapon_ak47","img_item_armor","img_item_ammo_shotgun","item_clothes_mask_1","ITEM_CLOTHES_MASK_2","item_clothes_mask_2","ITEM_CLOTHES_MASK_3","item_clothes_mask_3","ITEM_CLOTHES_MASK_4","item_clothes_mask_4","ITEM_CLOTHES_MASK_5","item_clothes_mask_5","getItemImage","InventoryCell","useDrag","imgSize","collect","monitor","isDragging","dragRef","onDrop","dropIdx","dragIdx","dropType","dragType","useDrop","accept","canDrop","drop","isOver","dropRef","height","cssInventoryCell","padding","getImage","Fade","InventoryCells","useClickAway","draggable","getDescrByType","getDescr","idx","onSelectItem","GroundItems","defaultStyle","currentOffset","x","y","Preview","DragLayer","getItem","itemType","getItemType","getSourceClientOffset","Inventory","Clear","App","exact","path","component","to","Root","hideIconVariant","maxSnack","autoHideDuration","DndProvider","backend","MouseBackEnd","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.21fa2ef2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/40.4f68236c.svg\";","module.exports = __webpack_public_path__ + \"static/media/100.504c8166.svg\";","module.exports = __webpack_public_path__ + \"static/media/80.d75a1d48.svg\";","module.exports = __webpack_public_path__ + \"static/media/60.a0e448c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/40.2ba0f73e.svg\";","module.exports = __webpack_public_path__ + \"static/media/20.d04326c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.78f4b6ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/100.bd994074.svg\";","module.exports = __webpack_public_path__ + \"static/media/80.52c8315a.svg\";","module.exports = __webpack_public_path__ + \"static/media/60.9dfb8ce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.d831e46c.svg\";","module.exports = __webpack_public_path__ + \"static/media/100.05b25b95.svg\";","module.exports = __webpack_public_path__ + \"static/media/80.a2558ffa.svg\";","module.exports = __webpack_public_path__ + \"static/media/60.efae3775.svg\";","module.exports = __webpack_public_path__ + \"static/media/40.2e7a3e76.svg\";","module.exports = __webpack_public_path__ + \"static/media/15.a7268e06.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.1954e3cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/100.4510934c.svg\";","module.exports = __webpack_public_path__ + \"static/media/70.c29a32e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/40.68dff684.svg\";","module.exports = __webpack_public_path__ + \"static/media/10.6eed6b11.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.9926f17b.svg\";","module.exports = __webpack_public_path__ + \"static/media/item_weapon_ak47.4540b0aa.png\";","module.exports = __webpack_public_path__ + \"static/media/item_armor.54e93891.png\";","module.exports = __webpack_public_path__ + \"static/media/item_ammo_shotgun.ad78f4ac.png\";","module.exports = __webpack_public_path__ + \"static/media/item_clothes_mask_1.df3617fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item_clothes_mask_2.b1f07183.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item_clothes_mask_3.4a1f8673.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item_clothes_mask_4.ce2bafeb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item_clothes_mask_5.fcc186f7.jpg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const ENQUEUE_SNACKBAR = 'ENQUEUE_SNACKBAR';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const REMOVE_SNACKBAR = 'REMOVE_SNACKBAR';\r\nexport const SET_SNACKBAR = 'SET_SNACKBAR';\r\n\r\nexport enum NotifyVariant {\r\n    DEFAULT = 'default',\r\n    SUCCESS = 'success',\r\n    ERROR = 'error',\r\n    WARNING = 'warning',\r\n    INFO = 'info',\r\n}\r\n\r\nenum NotifyVertical {\r\n    TOP = 'top',\r\n    BOTTOM = 'bottom',\r\n}\r\n\r\nenum NotifyHorizontal {\r\n    CENTER = 'center',\r\n    LEFT = 'left',\r\n    RIGHT = 'right',\r\n}\r\n\r\nexport type NotifyOrigin = {\r\n    horizontal: NotifyHorizontal;\r\n    vertical: NotifyVertical;\r\n}\r\n\r\nfunction Notify(text: string, variant: NotifyVariant, horizontal: 'left' | 'center' | 'right', vertical: 'top' | 'bottom') {\r\n    return (dispatch, getState) => {\r\n        dispatch(\r\n            enqueueSnackbar({\r\n                message: text,\r\n                    options: {\r\n                        key: new Date().getTime() + Math.random(),\r\n                        variant,\r\n                        anchorOrigin: {\r\n                            horizontal,\r\n                            vertical,\r\n                        }\r\n                },\r\n            })\r\n        );\r\n    };\r\n}\r\n\r\nconst enqueueSnackbar = (notification) => {\r\n    const key = notification.options && notification.options.key;\r\n\r\n    return {\r\n        type: ENQUEUE_SNACKBAR,\r\n        notification: {\r\n            ...notification,\r\n            key: key || new Date().getTime() + Math.random(),\r\n        },\r\n    };\r\n};\r\n\r\nconst closeSnackbar = key => ({\r\n    type: CLOSE_SNACKBAR,\r\n    dismissAll: !key, // dismiss all if no key has been defined\r\n    key,\r\n});\r\n\r\nconst removeSnackbar = key => ({\r\n    type: REMOVE_SNACKBAR,\r\n    key,\r\n});\r\n\r\nexport {\r\n    Notify,\r\n    enqueueSnackbar,\r\n    closeSnackbar,\r\n    removeSnackbar,\r\n}","export enum HudType {\r\n    SET_HEALTH_HUDS = 'SET_HEALTH_HUDS',\r\n    SET_ARMOR_HUDS = 'SET_ARMOR_HUDS',\r\n    SET_HUNGER_HUDS = 'SET_HUNGER_HUDS',\r\n    SET_DEHYDRATION_HUDS = 'SET_DEHYDRATION_HUDS',\r\n    SET_TEMPERATURE_HUDS = 'SET_TEMPERATURE_HUDS',\r\n}\r\n\r\nfunction setHudsData(type: HudType, value: number) {\r\n    return (dispatch, getState) => {\r\n        \r\n        if (value > 100) {\r\n            value = 100;\r\n        }\r\n        if (value < 0) {\r\n            value = 0;\r\n        }\r\n        \r\n        dispatch({\r\n            type: type,\r\n            payload: value,\r\n        });                \r\n    };\r\n}\r\n\r\nexport {\r\n    setHudsData,\r\n}","import { ENQUEUE_SNACKBAR, CLOSE_SNACKBAR, REMOVE_SNACKBAR, SET_SNACKBAR } from \"../actions/notificationActions\";\r\nimport { SET_DISPLAY_UI } from \"../actions/displayUIActions\";\r\nimport { HudType } from \"../actions/hudsDataActions\";\r\n\r\nexport type DisplayUI = {\r\n    huds: boolean;\r\n};\r\n\r\nexport type HudsData = {\r\n    health: number;\r\n    armor: number;\r\n    hunger: number;\r\n    dehydration: number;\r\n    temperature: number;\r\n    isBleeding: boolean;\r\n};\r\n\r\nexport type LootCreateData = {\r\n    objectId: number;\r\n    objectHash: string;\r\n    position: number[];\r\n    rotation: number[];\r\n};\r\n\r\nexport type UIState = {\r\n    hudsData: HudsData;\r\n    displayUI: DisplayUI;\r\n    notifications: any[];\r\n}\r\n\r\nconst initialState: UIState = {\r\n    hudsData: {\r\n        health: 100,\r\n        armor: 100,\r\n        hunger: 100,\r\n        dehydration: 100,\r\n        temperature: 100,\r\n        isBleeding: true,\r\n    },\r\n    displayUI: {\r\n        huds: false,\r\n    },\r\n    notifications: [],\r\n};\r\n\r\nfunction UIReducer(state: UIState = initialState, action: any) {\r\n    switch (action.type) {\r\n        case HudType.SET_TEMPERATURE_HUDS:\r\n            return {\r\n                ...state,\r\n                hudsData: {\r\n                    ...state.hudsData,\r\n                    temperature: action.payload,\r\n                },\r\n            };\r\n\r\n        case HudType.SET_HUNGER_HUDS:\r\n            return {\r\n                ...state,\r\n                hudsData: {\r\n                    ...state.hudsData,\r\n                    hunger: action.payload,\r\n                },\r\n            };\r\n\r\n        case HudType.SET_DEHYDRATION_HUDS:\r\n            return {\r\n                ...state,\r\n                hudsData: {\r\n                    ...state.hudsData,\r\n                    dehydration: action.payload,\r\n                },\r\n            };\r\n\r\n        case HudType.SET_ARMOR_HUDS:\r\n            return {\r\n                ...state,\r\n                hudsData: {\r\n                    ...state.hudsData,\r\n                    armor: action.payload,\r\n                },\r\n            };\r\n\r\n        case HudType.SET_HEALTH_HUDS:\r\n            return {\r\n                ...state,\r\n                hudsData: {\r\n                    ...state.hudsData,\r\n                    health: action.payload,\r\n                },\r\n            };\r\n\r\n        case SET_DISPLAY_UI:\r\n            return {\r\n                ...state,\r\n                displayUI: action.payload,\r\n            };\r\n\r\n        case ENQUEUE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                notifications: [\r\n                    ...state.notifications,\r\n                    {\r\n                        key: action.key,\r\n                        ...action.notification,\r\n                    },\r\n                ],\r\n            };\r\n\r\n        case CLOSE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                notifications: state.notifications.map(notification => (\r\n                    (action.dismissAll || notification.key === action.key)\r\n                        ? { ...notification, dismissed: true }\r\n                        : { ...notification }\r\n                )),\r\n            };\r\n\r\n        case REMOVE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                notifications: state.notifications.filter(\r\n                    notification => notification.key !== action.key,\r\n                ),\r\n            };\r\n\r\n        case SET_SNACKBAR:\r\n            return { ...state, snackbar: {...action.payload} };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    UIReducer,\r\n}","import { DisplayUI } from \"../reducers/UIReducer\";\r\n\r\nexport const SET_DISPLAY_UI = 'SET_DISPLAY_UI';\r\n\r\nfunction setDisplayUI(displayUI: DisplayUI) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_DISPLAY_UI,\r\n            payload: displayUI,\r\n        })\r\n    };\r\n}\r\n\r\nexport {\r\n    setDisplayUI,\r\n}","import { SET_SHOW } from \"../actions/clothesActions\";\r\n\r\nexport type ClothesState = {\r\n    isShow: boolean;\r\n}\r\n\r\nconst initialState: ClothesState = {\r\n    isShow: true,\r\n};\r\n\r\nfunction ClothesReducer(state: ClothesState = initialState, action: any) {\r\n    switch (action.type) {\r\n        case SET_SHOW:\r\n            return { ...state, isShow: action.payload };\r\n\r\n        default:\r\n            return { ...state };\r\n            \r\n    }\r\n}\r\n\r\nexport {\r\n    ClothesReducer,\r\n}","export const SET_SHOW = 'IS_SHOW';\r\n\r\nfunction setShow(bool: boolean) {\r\n    return (dispatch, getState) => {\r\n\r\n        console.log('setShow', bool);\r\n\r\n        dispatch({\r\n            type: SET_SHOW,\r\n            payload: bool,\r\n        });\r\n    };\r\n}\r\n\r\nexport {\r\n    setShow,\r\n}","export const SET_INITIAL_CHARACTER_STATE = 'SET_INITIAL_CHARACTER_STATE';\r\nexport const SET_FACE_FEATURE = 'SET_FACE_FEATURE';\r\nexport const SET_PARENT_INDEX = 'SET_PARENT_INDEX';\r\nexport const SET_HEAD_PROP = 'SET_HEAD_PROP';\r\nexport const SET_HAIR_ID = 'SET_HAIR_ID';\r\nexport const SET_GENDER = 'SET_GENDER';\r\nexport const SET_HAIR_COLOR = 'SET_HAIR_COLOR';\r\nexport const SET_HEAD_OVERLAY_PROP = 'SET_HEAD_OVERLAY_PROP';\r\nexport const SET_EYES_COLOR = 'SET_EYES_COLOR';\r\n\r\nfunction setEyesColor(id: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_EYES_COLOR,\r\n            payload: id,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setHeadOverlayProp(overlayId: number, index: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_HEAD_OVERLAY_PROP,\r\n            index,\r\n            overlayId,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setHairColor(id: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_HAIR_COLOR,\r\n            payload: id,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setGender(gender: 'male' | 'female') {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_GENDER,\r\n            payload: gender,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setHairId(id: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_HAIR_ID,\r\n            payload: id,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setInitialCharacter() {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_INITIAL_CHARACTER_STATE,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setFaceFeature(index: number, feature: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_FACE_FEATURE,\r\n            faceIndex: index,\r\n            feature: feature,\r\n        })\r\n    };\r\n}\r\n\r\nfunction setParentIndex(parent: string, index: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_PARENT_INDEX,\r\n            parent: parent,\r\n            index: index,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setHeadProp(name: string, value: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_HEAD_PROP,\r\n            name,\r\n            value,\r\n        });\r\n    };\r\n}\r\n\r\nexport {\r\n    setInitialCharacter,\r\n    setFaceFeature,\r\n    setParentIndex,\r\n    setHeadProp,\r\n    setHairId,\r\n    setGender,\r\n    setHairColor,\r\n    setHeadOverlayProp,\r\n    setEyesColor,\r\n}","import { SET_FACE_FEATURE, SET_INITIAL_CHARACTER_STATE, SET_PARENT_INDEX, SET_HEAD_PROP, SET_HAIR_ID, SET_GENDER, SET_HAIR_COLOR, SET_HEAD_OVERLAY_PROP, SET_EYES_COLOR } from \"../actions/characterActions\";\r\n\r\nexport type FaceType = {\r\n        index: number;\r\n        feature: number;\r\n        name: string;\r\n}; \r\n\r\nexport type HeadType = {\r\n    mother: {\r\n        index: number;\r\n    };\r\n    father: {\r\n        index: number;\r\n    };\r\n};\r\n\r\nexport type CharacterState = {\r\n    defaultState: {\r\n        face: FaceType[];\r\n        head: HeadType;\r\n        similarity: number;\r\n        skin: number;\r\n        hair: number;\r\n        gender: 'male' | 'female';\r\n        hairColorId: number;\r\n        headOverlay: HeadOverlay[];\r\n        eyes: number;\r\n    };\r\n\r\n    face: FaceType[];\r\n    head: HeadType;\r\n    similarity: number;\r\n    skin: number;\r\n    hair: number;\r\n    gender: 'male' | 'female';\r\n    hairColorId: number;\r\n    headOverlay: HeadOverlay[];\r\n    eyes: number;\r\n};\r\n\r\nexport type HeadOverlay = {\r\n    overlayId: number;\r\n    index: number;\r\n    name: string;\r\n};\r\n\r\nconst defaultHead: HeadType = {\r\n    father: { index: 0 },\r\n    mother: { index: 0 },\r\n};\r\n\r\nconst defaultFace: FaceType[] = [\r\n    { index: 0, feature: -1.0, name: 'Ширина носа' },\r\n    { index: 1, feature: -1.0, name: 'Высота носа' },\r\n    { index: 2, feature: -1.0, name: 'Длина кончика носа' },\r\n    { index: 3, feature: -1.0, name: 'Глубина моста носа' },\r\n    { index: 4, feature: -1.0, name: 'Высота кончика носа' },\r\n    { index: 5, feature: -1.0, name: 'Поломаность носа' },\r\n    { index: 6, feature: -1.0, name: 'Высота бровей' },\r\n    { index: 7, feature: -1.0, name: 'Глубина бровей' },\r\n    { index: 8, feature: -1.0, name: 'Высота скул' },\r\n    { index: 9, feature: -1.0, name: 'Ширина скул' },\r\n    { index: 10, feature: -1.0, name: 'Глубина щек' },\r\n    { index: 11, feature: -1.0, name: 'Размер глаз' },\r\n    { index: 12, feature: -1.0, name: 'Толщина глуб' },\r\n    { index: 13, feature: -1.0, name: 'Ширина челюсти' },\r\n    { index: 14, feature: -1.0, name: 'Форма челюсти' },\r\n    { index: 15, feature: -1.0, name: 'Высота подбородка' },\r\n    { index: 16, feature: -1.0, name: 'Глубина подбородка' },\r\n    { index: 17, feature: -1.0, name: 'Ширина подбородка' },\r\n    { index: 18, feature: -1.0, name: 'Подбородочный отступ' },\r\n    { index: 19, feature: -1.0, name: 'Обхват шеи' },\r\n];\r\n\r\nconst defaultHeadOverlay = [\r\n    { overlayId: 0, index: 0, name: 'Физические деффекты' },\r\n    { overlayId: 1, index: 0, name: 'Волосы на лице' },\r\n    { overlayId: 2, index: 0, name: 'Брови' },\r\n    { overlayId: 3, index: 0, name: 'Старение' },\r\n    { overlayId: 4, index: 0, name: 'Грим' },\r\n    { overlayId: 5, index: 0, name: 'Румянец' },\r\n    { overlayId: 6, index: 0, name: 'Цвет лица' },\r\n    { overlayId: 7, index: 0, name: 'Загар' },\r\n    { overlayId: 8, index: 0, name: 'Губы' },\r\n    { overlayId: 9, index: 0, name: 'Родинки/веснушки' },\r\n    { overlayId: 10, index: 0, name: 'Волосы на груди' },\r\n    { overlayId: 11, index: 0, name: 'Пятна на теле' },\r\n    { overlayId: 12, index: 0, name: 'Оставить пятна на теле?' },\r\n];\r\n\r\nconst initialState: CharacterState = {\r\n    defaultState: {\r\n        headOverlay: JSON.parse(JSON.stringify(defaultHeadOverlay)),\r\n        face: JSON.parse(JSON.stringify(defaultFace)),\r\n        head: JSON.parse(JSON.stringify(defaultHead)),\r\n        similarity: 0.5,\r\n        skin: 0.5,\r\n        hair: 0,\r\n        gender: 'male',\r\n        hairColorId: 0,\r\n        eyes: 0,\r\n    },\r\n    headOverlay: defaultHeadOverlay,\r\n    head: {...defaultHead},\r\n    face: [...defaultFace],\r\n    similarity: 0.5,\r\n    skin: 0.5,\r\n    hair: 0,\r\n    gender: 'male',\r\n    hairColorId: 0,\r\n    eyes: 0,\r\n};\r\n\r\nfunction characterReducer(state = initialState, action: any) {\r\n    switch (action.type) {\r\n\r\n        case SET_EYES_COLOR: {\r\n            state.eyes = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n\r\n        case SET_HEAD_OVERLAY_PROP: {\r\n            state.headOverlay[action.overlayId].index = action.index;\r\n\r\n            return {\r\n                ...state,\r\n            }        \r\n        }\r\n\r\n        case SET_HAIR_COLOR: {\r\n            return {\r\n                ...state,\r\n                hairColorId: action.payload,\r\n            }\r\n        }\r\n\r\n        case SET_GENDER: {\r\n            state.gender = action.payload;\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n\r\n        case SET_HAIR_ID: {\r\n            state.hair = action.payload;\r\n            return {\r\n                ...state,\r\n            }   \r\n        }\r\n\r\n        case SET_HEAD_PROP: {\r\n            return {\r\n                ...state,\r\n                [action.name]: action.value,\r\n            }\r\n        }\r\n\r\n        case SET_PARENT_INDEX: {\r\n            state.head[action.parent].index = action.index;\r\n\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n\r\n        case SET_FACE_FEATURE:\r\n            const characterState = {...state};\r\n            const face = {...characterState.face};\r\n            const faceIndex = action.faceIndex;\r\n            const feature = action.feature;\r\n            face[faceIndex].feature = feature;\r\n\r\n            return {\r\n                ...characterState,\r\n            }\r\n\r\n        case SET_INITIAL_CHARACTER_STATE: {\r\n            return {\r\n                ...state,\r\n                ...JSON.parse(JSON.stringify(state.defaultState)),\r\n            }\r\n        }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    characterReducer,\r\n}","export const UPDATE_REGISTER_PROP = 'UPDATE_REGISTER_PROP';\r\nexport const SET_REGISTER = 'SET_REGISTER';\r\n\r\nfunction updateAuthProp(prop: string, subProp: string, value: any) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: UPDATE_REGISTER_PROP,\r\n            prop,\r\n            subProp,\r\n            value,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setRegister(register: any) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_REGISTER,\r\n            payload: register\r\n        });\r\n    };\r\n}\r\n\r\nexport {\r\n    updateAuthProp,\r\n    setRegister,\r\n}","import { UPDATE_REGISTER_PROP, SET_REGISTER } from \"../actions/authActions\";\r\n\r\nexport type AuthState = {\r\n    register: {\r\n        login: {\r\n            val: string;\r\n            isValid: boolean;\r\n            isTouch: boolean,\r\n            regular: RegExp;\r\n        };\r\n        password: {\r\n            val: string;\r\n            isValid: boolean;\r\n            isTouch: boolean,\r\n            regular: RegExp;\r\n        };\r\n        confirmPassword: {\r\n            val: string;\r\n            isTouch: boolean,\r\n            isValid: boolean;\r\n        };\r\n        email: {\r\n            val: string;\r\n            isValid: boolean\r\n            isTouch: boolean,\r\n            regular: RegExp,\r\n        }\r\n    },\r\n}\r\n\r\nconst initialState: AuthState = {\r\n    register: {\r\n        login: {\r\n            val: '',\r\n            isValid: false,\r\n            isTouch: false,\r\n            regular: /^[a-zA-Z0-9_-]{3,16}$/,\r\n        },\r\n        password: {\r\n            val: '',\r\n            isValid: false,\r\n            isTouch: false,\r\n            regular: /^[0-9a-zA-Z!@#$%^&*]{6,30}$/,\r\n        },\r\n        email: {\r\n            val:'',\r\n            isValid: false,\r\n            isTouch: false,\r\n            regular: /.+@.+\\..+/i,\r\n        },\r\n        confirmPassword: {\r\n            val: '',\r\n            isValid: false,\r\n            isTouch: false,\r\n        }\r\n    }\r\n};\r\n\r\nfunction authReducer(state = initialState, action: any) {\r\n    switch (action.type) {\r\n        case UPDATE_REGISTER_PROP: {\r\n            state.register[action.prop][action.subProp] = action.value;\r\n            \r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n\r\n        case SET_REGISTER: {\r\n            const newState = {...state};\r\n            newState.register = action.payload;\r\n\r\n            return {\r\n                ...newState,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    authReducer,\r\n}","/* ОПИСАНИЕ ПРЕДМЕТА */\r\nexport interface BodyArmourData extends ItemData {\r\n    defence?: number;\r\n}\r\n\r\nexport interface WeaponData extends ItemData {\r\n    clip?: number;\r\n}\r\n\r\n/* ОПИСАНИЕ ПРЕДМЕТА */\r\nexport enum ItemType {\r\n    WEAPON = 'WEAPON',\r\n    ARMOR = 'ARMOR',\r\n    COMMON = 'COMMON',\r\n    CLOTHES = 'CLOTHES',\r\n}\r\n\r\nexport enum ItemKey {\r\n    ITEM_WEAPON_AK47 = 'ITEM_WEAPON_AK47',\r\n    ITEM_ARMOR = 'ITEM_ARMOR',\r\n    ITEM_AMMO_SHOTGUN = 'ITEM_AMMO_SHOTGUN',\r\n    ITEM_CLOTHES_MASK_1 = 'ITEM_CLOTHES_MASK_1',\r\n    ITEM_CLOTHES_MASK_2 = 'ITEM_CLOTHES_MASK_2',\r\n    ITEM_CLOTHES_MASK_3 = 'ITEM_CLOTHES_MASK_3',\r\n    ITEM_CLOTHES_MASK_4 = 'ITEM_CLOTHES_MASK_4',\r\n    ITEM_CLOTHES_MASK_5 = 'ITEM_CLOTHES_MASK_5',\r\n}\r\n\r\nexport type Item = {\r\n    key: ItemKey;\r\n    amount: number;\r\n    data: ItemData;\r\n}\r\n\r\nexport type ItemData = {\r\n    type: ItemType;\r\n    name: string; // Название предмета.\r\n    description: string;\r\n    maxStackCount: number; // Максимальный стак предмета.\r\n    weight: number; // Вес предмета (1 шт).\r\n    serverId: string;\r\n    shortid: string;\r\n    isDelete: boolean; // Удалить после использования?\r\n}\r\n\r\nexport interface DataBodyArmour extends ItemData {\r\n    defence?: number;\r\n}\r\n\r\nexport interface DataWeapon extends ItemData {\r\n    clip?: number;\r\n}\r\n\r\nexport interface DataBackpack extends ItemData {\r\n    slots: number;\r\n}","import { State } from \"../reducers\";\r\nimport { Item } from \"../types\";\r\n\r\nexport const SET_INVENTORY_SLOTS = 'SET_INVENTORY_SLOTS';\r\nexport const SWAP_ITEMS = 'SWAP_ITEMS';\r\nexport const  STACK_INVENTORY_ITEMS = 'STACK_INVENTORY_ITEMS';\r\nexport const SELECT_INVENTORY_ITEM = 'SELECT_INVENTORY_ITEM';\r\nexport const SWAP_INV_AND_GRND_ITEMS = 'SWAP_INV_AND_GRND_ITEMS';\r\n\r\nfunction selectInvItem(item: Item | null) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SELECT_INVENTORY_ITEM,\r\n            item,\r\n        });\r\n    };\r\n}\r\n\r\n// Работа с 2 дроп зонами.\r\nfunction swapInvAndGroundItems(invId: number, groundId: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SWAP_INV_AND_GRND_ITEMS,\r\n            invId,\r\n            groundId,\r\n        })\r\n    };\r\n}\r\n\r\n// Работае в пределах одной ДРОП-ЗОНЫ.\r\nfunction swapItems(dragId: number, dropId: number, itemsType: 'inventoryItems' | 'groundItems') {\r\n    return (dispatch, getState) => {\r\n        const state: State = getState();\r\n        const items: any = [...state.inventory[itemsType]];\r\n\r\n        const isInventoryItems = itemsType === 'inventoryItems';\r\n\r\n        // Перенос на пустую ячейку.\r\n        if (items[dropId] === null) {\r\n            dispatch({\r\n                type: SWAP_ITEMS,\r\n                dragId,\r\n                dropId,\r\n                itemsType,\r\n            });\r\n            return;\r\n        }\r\n        \r\n        // Перенос на НЕ пустую ячейку.\r\n        if (isInventoryItems) {\r\n            if (items[dropId] !== null && items[dragId] !== null) {\r\n                // Если два предмета одного типа и их макс. стак > 1.\r\n                if (items[dragId].key == items[dropId].key && items[dragId].data.maxStackCount > 1) {\r\n                    dispatch({\r\n                        type: STACK_INVENTORY_ITEMS,\r\n                        dragId,\r\n                        dropId,\r\n                        itemsType,\r\n                    });                \r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: SWAP_ITEMS,\r\n            dragId,\r\n            dropId,\r\n            itemsType,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setInventorySlots(slots: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_INVENTORY_SLOTS,\r\n            slots\r\n        });\r\n    };\r\n}\r\n\r\nexport {\r\n    selectInvItem,\r\n    swapInvAndGroundItems,\r\n    swapItems,\r\n    setInventorySlots,\r\n}","import shortid from 'shortid';\r\nimport { ItemKey, ItemType, Item } from \"../types\";\r\nimport { SET_INVENTORY_SLOTS, SWAP_ITEMS, STACK_INVENTORY_ITEMS, SELECT_INVENTORY_ITEM, SWAP_INV_AND_GRND_ITEMS } from '../actions/inventoryActions';\r\n\r\nconst getData = (): (Item | null)[] => [\r\n    {\r\n        key: ItemKey.ITEM_WEAPON_AK47, \r\n        amount: 1,\r\n        data: {\r\n            type: ItemType.WEAPON,\r\n            name: 'Kalash',\r\n            description: 'Убивац',\r\n            maxStackCount: 1,\r\n            serverId: shortid.generate(),\r\n            shortid: shortid.generate(),\r\n            isDelete: false,\r\n            weight: 4,\r\n        }\r\n    },\r\n    null,\r\n    \r\n    {\r\n        key: ItemKey.ITEM_AMMO_SHOTGUN, \r\n        amount: 12,\r\n        data: {\r\n            type: ItemType.COMMON,\r\n            name: 'SHOTGUN SHELL',\r\n            description: 'Пережаризац',\r\n            maxStackCount: 30,\r\n            serverId: shortid.generate(),\r\n            shortid: shortid.generate(),\r\n            isDelete: false,\r\n            weight: 0.1,\r\n        }\r\n    },\r\n    {\r\n        key: ItemKey.ITEM_AMMO_SHOTGUN, \r\n        amount: 13,\r\n        data: {\r\n            type: ItemType.COMMON,\r\n            name: 'SHOTGUN SHELL',\r\n            description: 'Пережаризац',\r\n            maxStackCount: 30,\r\n            serverId: shortid.generate(),\r\n            shortid: shortid.generate(),\r\n            isDelete: false,\r\n            weight: 0.1,\r\n        }\r\n    },\r\n    {\r\n        key: ItemKey.ITEM_AMMO_SHOTGUN, \r\n        amount: 5,\r\n        data: {\r\n            type: ItemType.COMMON,\r\n            name: 'SHOTGUN SHELL',\r\n            description: 'Пережаризац',\r\n            maxStackCount: 30,\r\n            serverId: shortid.generate(),\r\n            shortid: shortid.generate(),\r\n            isDelete: false,\r\n            weight: 0.1,\r\n        }\r\n    },\r\n    {\r\n        key: ItemKey.ITEM_AMMO_SHOTGUN, \r\n        amount: 5,\r\n        data: {\r\n            type: ItemType.COMMON,\r\n            name: 'SHOTGUN SHELL',\r\n            description: 'Пережаризац',\r\n            maxStackCount: 30,\r\n            serverId: shortid.generate(),\r\n            shortid: shortid.generate(),\r\n            isDelete: false,\r\n            weight: 0.1,\r\n        }\r\n    },\r\n    {\r\n        key: ItemKey.ITEM_AMMO_SHOTGUN, \r\n        amount: 5,\r\n        data: {\r\n            type: ItemType.COMMON,\r\n            name: 'SHOTGUN SHELL',\r\n            description: 'Пережаризац',\r\n            maxStackCount: 30,\r\n            serverId: shortid.generate(),\r\n            shortid: shortid.generate(),\r\n            isDelete: false,\r\n            weight: 0.1,\r\n        }\r\n    },\r\n    null,\r\n\r\n    {\r\n        key: ItemKey.ITEM_ARMOR, \r\n        amount: 1, \r\n        data: {\r\n            type: ItemType.ARMOR,\r\n            name: 'ARMOR',\r\n            description: 'Защищац',\r\n            maxStackCount: 1,\r\n            serverId: shortid.generate(),\r\n            shortid: shortid.generate(),\r\n            isDelete: false,\r\n            weight: 6,\r\n        }\r\n    },\r\n    null,\r\n\r\n    {\r\n        key: ItemKey.ITEM_CLOTHES_MASK_1, \r\n        amount: 1, \r\n        data: {\r\n            type: ItemType.CLOTHES,\r\n            name: 'Маска 1',\r\n            description: 'ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ыфвфыфвы ',\r\n            maxStackCount: 1,\r\n            serverId: shortid.generate(),\r\n            shortid: shortid.generate(),\r\n            isDelete: true,\r\n            weight: 2,\r\n        }\r\n    },\r\n\r\n    null,\r\n    null,\r\n    null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n    // null,\r\n];\r\n\r\nexport type InventoryState = {\r\n    inventoryItems: (Item | null)[];\r\n    inventorySlots: number;\r\n    selectInventoryItem: Item | null;\r\n\r\n    groundItems: (Item | null)[];\r\n};\r\n\r\nconst initialState: InventoryState = {\r\n    inventoryItems: getData(),\r\n    inventorySlots: 10,\r\n    selectInventoryItem: null,\r\n\r\n    groundItems: getData(),\r\n};\r\n\r\nfunction InventoryReducer(state = initialState, action: any) {\r\n    switch(action.type) {\r\n        case SELECT_INVENTORY_ITEM: {\r\n            state.selectInventoryItem = action.item;\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n\r\n        case STACK_INVENTORY_ITEMS: {\r\n            const items: any = [...state[action.itemsType]];\r\n            const dragId = action.dragId;\r\n            const dropId = action.dropId;\r\n\r\n            let msc = items[dragId].data.maxStackCount;\r\n            let sum = items[dragId].amount + items[dropId].amount; // Сумма для стака предмета.\r\n            let rest = 0;\r\n\r\n            if (dropId != dragId) {\r\n                if (sum > msc) {\r\n                    rest = sum - msc;\r\n                    items[dropId].amount = msc;\r\n                    items[dragId].amount = rest;\r\n                }\r\n                else if (sum == msc) {\r\n                    items[dropId].amount = msc;\r\n                    items.splice(dragId, 1, null);\r\n                }\r\n                else if (sum < msc) {\r\n                    items[dropId].amount = sum;\r\n                    items.splice(dragId, 1, null);\r\n                }\r\n            }\r\n\r\n            state[action.itemsType] = items;\r\n\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n\r\n        case SWAP_INV_AND_GRND_ITEMS: {\r\n            const inventoryItems = [...state.inventoryItems];\r\n            const groundItems = [...state.groundItems];\r\n\r\n            const invId = action.invId; \r\n            const groundId = action.groundId;\r\n\r\n            const invItem = inventoryItems[invId];\r\n            const groundItem = groundItems[groundId];\r\n\r\n            inventoryItems[invId] = groundItem;\r\n            groundItems[groundId] = invItem;\r\n\r\n            state.inventoryItems = inventoryItems;\r\n            state.groundItems = groundItems;\r\n\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n\r\n        case SWAP_ITEMS: {\r\n            const items = [...state[action.itemsType]];\r\n            const dragItem = items[action.dragId];\r\n            const dropItem = items[action.dropId];\r\n\r\n            items[action.dragId] = dropItem;\r\n            items[action.dropId] = dragItem;\r\n\r\n            state[action.itemsType] = items;\r\n            return {\r\n                ...state,\r\n            }\r\n        };\r\n\r\n        case SET_INVENTORY_SLOTS: {\r\n            state.inventorySlots = action.slots;\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    InventoryReducer,\r\n}","import { combineReducers } from \"redux\";\r\nimport { UIReducer, UIState } from \"./UIReducer\";\r\nimport { ClothesReducer, ClothesState } from \"./clothesReducer\";\r\nimport { connectRouter } from 'connected-react-router'\r\nimport { characterReducer, CharacterState } from \"./characterReducer\";\r\nimport { authReducer, AuthState } from \"./authReducer\";\r\nimport { InventoryState, InventoryReducer } from \"./InventoryReducer\";\r\n\r\nexport type State = {\r\n    inventory: InventoryState;\r\n    character: CharacterState;\r\n    UI: UIState;\r\n    clothes: ClothesState;\r\n    auth: AuthState;\r\n}\r\n\r\nconst createRootReducer = (history) => combineReducers({\r\n    inventory: InventoryReducer,\r\n    auth: authReducer,\r\n    character: characterReducer,\r\n    UI: UIReducer,\r\n    clothes: ClothesReducer,\r\n    router: connectRouter(history),\r\n  });\r\n\r\nexport {\r\n    createRootReducer,\r\n}","import EventEmitter from 'wolfy87-eventemitter';\r\n\r\nconst emitter: any = new EventEmitter();\r\n\r\nexport {\r\n    emitter,\r\n}","import { createMemoryHistory  } from 'history';\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { createRootReducer } from \"../reducers\";\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { PlayerEvents } from '../helpers/playerEvents';\r\n\r\nconst history = createMemoryHistory({\r\n    initialEntries: [ '/one', '/two', { pathname: '/three' } ],\r\n    initialIndex: 1\r\n});\r\n\r\nconst store = createStore(\r\n    createRootReducer(history), \r\n    compose(\r\n        applyMiddleware(\r\n            routerMiddleware(history),\r\n            thunk, \r\n            logger,\r\n        ),\r\n    ),\r\n);\r\n\r\nconsole.log('store', store);\r\n\r\nPlayerEvents(store.dispatch, store.getState);\r\n\r\nexport {\r\n    history,\r\n    store,\r\n}","import { push } from 'connected-react-router';\r\nimport { emitter } from '../emitter';\r\nimport { Item } from '../../types';\r\nimport { enqueueSnackbar } from '../../actions/notificationActions';\r\nimport { NotifyOrigin } from '../../actions/notificationActions';\r\nimport { DisplayUI } from '../../reducers/UIReducer';\r\nimport { setDisplayUI } from '../../actions/displayUIActions';\r\nimport { setHudsData, HudType } from '../../actions/hudsDataActions';\r\n\r\nfunction PlayerEvents(dispatch, getState) {\r\n    emitter.on('goToClear', () => {\r\n        dispatch(push('/clear'));\r\n    });\r\n\r\n    emitter.on('goToUIItems', () => {\r\n        dispatch(push('/UIItems'));\r\n    });\r\n\r\n    emitter.on('goToEntityCreate', () => {\r\n        dispatch(push('/goToEntityCreate'));\r\n    });\r\n\r\n    emitter.on('setNotify', (msg: string, variant: string, origin: NotifyOrigin) => {\r\n        dispatch(enqueueSnackbar({\r\n            message: msg,\r\n            options: {\r\n                key: new Date().getTime() + Math.random(),\r\n                variant: variant,\r\n                anchorOrigin: {\r\n                    vertical: origin.vertical,\r\n                    horizontal: origin.horizontal,\r\n                },\r\n            },\r\n        }));\r\n    });\r\n\r\n    emitter.on('cef_set_display_ui', (displayUI: DisplayUI) => {\r\n        dispatch(setDisplayUI(displayUI));\r\n    });\r\n\r\n    emitter.on('change_UI', (name: string) => {\r\n        dispatch(push(`/${name}`));\r\n    });\r\n\r\n    emitter.on('cef_set_health_huds', (health: number) => {\r\n        dispatch(\r\n            setHudsData(HudType.SET_HEALTH_HUDS, health)\r\n        );\r\n    });\r\n\r\n    emitter.on('cef_set_armor_huds', (armor: number) => {\r\n        dispatch(\r\n            setHudsData(HudType.SET_ARMOR_HUDS, armor)\r\n        );\r\n    });\r\n\r\n    emitter.on('cef_set_hunger_huds', (hunger: number) => {\r\n        dispatch(\r\n            setHudsData(HudType.SET_HUNGER_HUDS, hunger)\r\n        );\r\n    });\r\n\r\n    emitter.on('cef_set_dehydration_huds', (hunger: number) => {\r\n        dispatch(\r\n            setHudsData(HudType.SET_DEHYDRATION_HUDS, hunger)\r\n        );\r\n    });\r\n}\r\n\r\nexport {\r\n    PlayerEvents,\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport { removeSnackbar } from '../../../actions/notificationActions';\r\n\r\nlet displayed: any = [];\r\n\r\nconst NotifyComp = () => {\r\n    const dispatch = useDispatch();\r\n    const notifications: any = useSelector((store: any): any => store.UI.notifications || []);\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const storeDisplayed = (id) => {\r\n        displayed = [...displayed, id];\r\n    };\r\n\r\n    const removeDisplayed = (id) => {\r\n        displayed = [...displayed.filter(key => id !== key)];\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        notifications.forEach(({ key, message, options = {}, dismissed = false }) => {\r\n            if (dismissed) {\r\n                // dismiss snackbar using notistack\r\n                closeSnackbar(key);\r\n                return;\r\n            }\r\n\r\n            // do nothing if snackbar is already displayed\r\n            if (displayed.includes(key)) return;\r\n\r\n            // display snackbar using notistack\r\n            enqueueSnackbar(message, {\r\n                key,\r\n                ...options,\r\n                onClose: (event, reason, myKey) => {\r\n                    if (options.onClose) {\r\n                        options.onClose(event, reason, myKey);\r\n                    }\r\n                },\r\n                onExited: (event, myKey) => {\r\n                    // removen this snackbar from redux store\r\n                    dispatch(removeSnackbar(myKey));\r\n                    removeDisplayed(myKey);\r\n                },\r\n            });\r\n\r\n            // keep track of snackbars that we've displayed\r\n            storeDisplayed(key);\r\n        });\r\n    }, [notifications, closeSnackbar, enqueueSnackbar, dispatch]);\r\n\r\n    return null;\r\n};\r\n\r\nexport {\r\n    NotifyComp,\r\n};","import React from \"react\";\r\n\r\ntype Props = {\r\n    health: number;\r\n    armor: number;\r\n    hunger: number;\r\n    dehydration: number;\r\n    temperature: number;\r\n};\r\n\r\nfunction HudsMenuData(props: Props) {\r\n    const percent = 12000 / 100; // 1%\r\n    const blood = props.health * percent; // Количество крови.\r\n\r\n    return (\r\n        <div className=\"huds-menu-data\">\r\n            <div>Кровь: { blood }</div>\r\n            <div>Броня: { props.armor }</div>\r\n            <div>Сытость: { props.hunger }</div>\r\n            <div>Жажда: { props.dehydration }</div>\r\n            <div>Температура: { props.temperature }</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    HudsMenuData,\r\n}","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { pulse, jello} from 'react-animations';\r\nimport image_blood_100 from '../../../assets/huds/health/100.svg';\r\nimport image_blood_80 from '../../../assets/huds/health/80.svg';\r\nimport image_blood_60 from '../../../assets/huds/health/60.svg';\r\nimport image_blood_40 from '../../../assets/huds/health/40.svg';\r\nimport image_blood_20 from '../../../assets/huds/health/20.svg';\r\nimport image_blood_empty from '../../../assets/huds/health/empty.svg';\r\n\r\ntype Props = {\r\n    health: number;\r\n}\r\n\r\nfunction HealthHud(props: Props) {\r\n    const { health } = props;\r\n    let styles = {};\r\n\r\n    const isLowHP = health <= 50;\r\n\r\n    // Pulse animation\r\n    const pulseAnimation = keyframes`${pulse}`;\r\n    const HealthPulseDiv = styled.div`\r\n        animation: ${ isLowHP ? '.95s' : '3s' } infinite ${ pulseAnimation };\r\n    `;\r\n\r\n    let healthImage = image_blood_100;\r\n    if (health <= 80) {\r\n        healthImage = image_blood_80;\r\n    }\r\n    if (health <= 60) {\r\n        healthImage = image_blood_60;\r\n    }\r\n    if (health <= 40) {\r\n        healthImage = image_blood_40;\r\n    }\r\n    if (health <= 20) { \r\n        healthImage = image_blood_20;\r\n    }\r\n    if (health <= 0) {\r\n        healthImage = image_blood_empty;\r\n    }\r\n\r\n    return (\r\n        <HealthPulseDiv>\r\n            <div className=\"huds-health\">\r\n                <img src={ healthImage } style={ styles } />\r\n            </div>\r\n        </HealthPulseDiv>\r\n    );\r\n}\r\n\r\nexport {\r\n    HealthHud,\r\n}","import React, { CSSProperties } from \"react\";\r\nimport img_icon_100 from '../../../assets/huds/eat/100.svg';\r\nimport img_icon_80 from '../../../assets/huds/eat/80.svg';\r\nimport img_icon_60 from '../../../assets/huds/eat/60.svg';\r\nimport img_icon_40 from '../../../assets/huds/eat/40.svg';\r\nimport img_empty from '../../../assets/huds/eat/empty.svg';\r\n\r\ntype Props = {\r\n    hunger: number;\r\n};\r\n\r\nfunction EatHud(props: Props) {\r\n    const { hunger } = props;\r\n    let styles = {};\r\n    \r\n    let imgIcon = img_icon_100;\r\n    if (hunger < 80) {\r\n        imgIcon = img_icon_80;\r\n    }    \r\n    if (hunger < 60) {\r\n        imgIcon = img_icon_60;\r\n    }\r\n    if (hunger < 40) {\r\n        imgIcon = img_icon_40;\r\n    }\r\n    if (hunger < 20) {\r\n        imgIcon = img_icon_40;\r\n    }\r\n    if (hunger < 1) {\r\n        imgIcon = img_empty;\r\n    }\r\n    \r\n    return (\r\n        <div className='huds-eat'>\r\n            <img src={ imgIcon } style={ styles } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    EatHud,\r\n}","import React, { CSSProperties } from \"react\"\r\n\r\nimport img_icon_100 from '../../../assets/huds/temperature/100.svg';\r\nimport img_icon_80 from '../../../assets/huds/temperature/80.svg';\r\nimport img_icon_60 from '../../../assets/huds/temperature/60.svg';\r\nimport img_icon_40 from '../../../assets/huds/temperature/40.svg';\r\nimport img_icon_20 from '../../../assets/huds/temperature/15.svg';\r\nimport img_icon_empty from '../../../assets/huds/temperature/empty.svg';\r\n\r\ntype Props = {\r\n    temperature: number;\r\n\r\n}\r\nfunction TemperatureHud(props: Props) {\r\n    const { temperature } = props;\r\n    let styles = {};\r\n\r\n    let imgIcon = img_icon_100;\r\n    if (temperature < 80) {\r\n        imgIcon = img_icon_80;\r\n    }    \r\n    if (temperature < 60) {\r\n        imgIcon = img_icon_60;\r\n    }\r\n    if (temperature < 40) {\r\n        imgIcon = img_icon_40;\r\n    }\r\n    if (temperature < 20) {\r\n        imgIcon = img_icon_20;\r\n    }\r\n    if (temperature < 1) {\r\n        imgIcon = img_icon_empty;\r\n    }\r\n\r\n    return (\r\n        <div className=\"huds-temperature\">\r\n            <img src={ imgIcon } style={ styles } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    TemperatureHud,\r\n}","import React, { CSSProperties } from \"react\"\r\n\r\nimport img_icon_100 from '../../../assets/huds/dehydration/100.svg';\r\nimport img_icon_70 from '../../../assets/huds/dehydration/70.svg';\r\nimport img_icon_40 from '../../../assets/huds/dehydration/40.svg';\r\nimport img_icon_10 from '../../../assets/huds/dehydration/10.svg';\r\nimport img_icon_empty from '../../../assets/huds/dehydration/empty.svg';\r\n\r\ntype Props = {\r\n    dehydration: number;\r\n}\r\n\r\nfunction DehydrationHud(props: Props) {\r\n    const { dehydration } = props;\r\n    let styles = {};\r\n\r\n    let imgIcon = img_icon_100;\r\n    if (dehydration < 70) {\r\n        imgIcon = img_icon_70;\r\n    }    \r\n    if (dehydration < 40) {\r\n        imgIcon = img_icon_40;\r\n    }\r\n    if (dehydration < 10) {\r\n        imgIcon = img_icon_10;\r\n    }\r\n    if (dehydration < 1) {\r\n        imgIcon = img_icon_empty;\r\n    }\r\n\r\n    return (\r\n        <div className=\"huds-dehydration\">\r\n            <img src={ imgIcon } style={ styles } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    DehydrationHud,\r\n}","import { CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\ntype Props = {\r\n    value: number;\r\n    maxValue: number\r\n};\r\n\r\nfunction CircularLine(props: Props) {\r\n    const percent = props.maxValue / 100; // 1%;\r\n    const value = percent * props.value;\r\n\r\n    return (\r\n        <div>\r\n            <CircularProgress color='secondary' variant=\"static\" value={ value } size={ 50 } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CircularLine,\r\n}","import React, { CSSProperties } from \"react\";\r\nimport { CircularLine } from \"./CircularLine\";\r\n\r\ntype Props = {\r\n    hud: any;\r\n    style: CSSProperties;\r\n    size: string;\r\n    value: number;\r\n};\r\n\r\nfunction CircularHudWithImage(props: Props) {\r\n    const styles = {...props.style, width: props.size};\r\n    const hudStyle: any = { \r\n        position: 'absolute',\r\n        top: '45%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    };\r\n    return (\r\n        <div className='CircularHudWithImage' style={ styles }>\r\n            <CircularLine value={ props.value } maxValue={ 100 } />\r\n            <div style={hudStyle}>{ props.hud }</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CircularHudWithImage,\r\n}","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { UIState } from \"../../../reducers/UIReducer\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { CircularLine } from \"./CircularLine\";\r\nimport { setHudsData, HudType } from \"../../../actions/hudsDataActions\";\r\nimport { HudsMenuData } from \"./HudsMenuData\";\r\nimport { FaHamburger } from \"react-icons/fa\";\r\nimport { HealthHud } from \"./HealthHud\";\r\nimport { EatHud } from \"./EatHud\";\r\nimport { TemperatureHud } from \"./TemperatureHud\";\r\nimport { DehydrationHud } from \"./DehydrationHud\";\r\nimport CircularSlider from 'react-circular-slider-svg';\r\nimport { CircularHudWithImage } from \"./CircularHudWithImage\";\r\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\r\n\r\nfunction Huds(props) {\r\n    const state: UIState = useSelector((state: any) => state.UI || []);\r\n    const dispatch = useDispatch();\r\n    const health = state.hudsData.health;\r\n    const armor = state.hudsData.armor;\r\n    const isBleeding = state.hudsData.isBleeding;\r\n    const temperature = state.hudsData.temperature;\r\n    const hunger = state.hudsData.hunger;\r\n    const dehydration = state.hudsData.dehydration;\r\n\r\n    const hudStyles: CSSProperties = {\r\n        position: 'absolute',\r\n        bottom: '1rem',\r\n        right: '1rem',\r\n    };\r\n\r\n    let healthStyles = {};\r\n    if (health <= 80) healthStyles = {filter: 'hue-rotate(-30deg)'};\r\n    if (health <= 60) healthStyles = {filter: 'hue-rotate(-40deg)'};\r\n    if (health <= 40) healthStyles = {filter: 'hue-rotate(-50deg)'};\r\n    if (health <= 20) healthStyles = {filter: 'hue-rotate(-60deg)'};\r\n    if (health <= 0) healthStyles = {filter: 'hue-rotate(-70deg)'};\r\n\r\n    let eatStyles = {};\r\n    if (hunger < 80) eatStyles = {filter: 'hue-rotate(-30deg)'};\r\n    if (hunger < 60) eatStyles = {filter: 'hue-rotate(-40deg)'};\r\n    if (hunger < 40) eatStyles = {filter: 'hue-rotate(-50deg)'};\r\n    if (hunger < 20) eatStyles = {filter: 'hue-rotate(-60deg)'};\r\n    if (hunger < 1) eatStyles = {filter: 'hue-rotate(-70deg)'};\r\n\r\n    let dehydrationStyles = {};\r\n    if (dehydration < 70) dehydrationStyles = {filter: 'hue-rotate(-30deg)'};\r\n    if (dehydration < 40) dehydrationStyles = {filter: 'hue-rotate(-40deg)'};\r\n    if (dehydration < 10) dehydrationStyles = {filter: 'hue-rotate(-50deg)'};\r\n    if (dehydration < 1) dehydrationStyles = {filter: 'hue-rotate(-60deg)'};\r\n\r\n    let temperatureStyles = {};\r\n    if (temperature < 80) temperatureStyles = {filter: 'hue-rotate(45deg)'};\r\n    if (temperature < 60) temperatureStyles = {filter: 'hue-rotate(60deg)'};\r\n    if (temperature < 40) temperatureStyles = {filter: 'hue-rotate(75deg)'};\r\n    if (temperature < 20) temperatureStyles = {filter: 'hue-rotate(90deg)'};\r\n    if (temperature < 1) temperatureStyles = {filter: 'hue-rotate(100deg)'};\r\n\r\n    return (\r\n        <div className=\"huds\">\r\n            <HudsMenuData health={ health } armor={ armor } hunger={ hunger } dehydration={ dehydration } temperature={ temperature } />\r\n\r\n            <CircularHudWithImage value={ health } style={ {...hudStyles, ...healthStyles, right: '15.2rem'} } size={ '' } hud={ <HealthHud health={ health } /> } />\r\n            <CircularHudWithImage value={ hunger } style={ {...hudStyles, ...eatStyles, right: '10.2rem'} } size={ '' } hud={ <EatHud hunger={ hunger } /> } />\r\n            <CircularHudWithImage value={ dehydration } style={ {...hudStyles, ...dehydrationStyles, right: '5.2rem'} } size={ '' } hud={ <DehydrationHud dehydration={ dehydration } /> } />\r\n            <CircularHudWithImage value={ temperature } style={ {...hudStyles, ...temperatureStyles, right: '.2rem'} } size={ '' } hud={ <TemperatureHud temperature={ temperature } /> } />\r\n\r\n            <div style={ {textShadow: 'rgba(0, 0, 0, 0.37) 0px 0px 7px', position: 'absolute', bottom: '10rem', right: '2rem', color: '#000'} }>\r\n                <div>[TAB] Инвентарь:</div>\r\n                <div>[G] Зайти в инвентарь машины:</div>\r\n                <div>[F6] HUDS:</div>\r\n            </div>\r\n{/* \r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_HEALTH_HUDS, health - 5)) }>-</button>\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_HEALTH_HUDS, health + 5)) }>+</button>\r\n\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_ARMOR_HUDS, armor - 5)) }>-</button>\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_ARMOR_HUDS, armor + 5)) }>+</button>\r\n\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_HUNGER_HUDS, hunger - 5)) }>-</button>\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_HUNGER_HUDS, hunger + 5)) }>+</button>\r\n            \r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_DEHYDRATION_HUDS, dehydration - 5)) }>-</button>\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_DEHYDRATION_HUDS, dehydration + 5)) }>+</button>\r\n\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_TEMPERATURE_HUDS, temperature - 5)) }>-</button>\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_TEMPERATURE_HUDS, temperature + 5)) }>+</button>  */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    Huds,\r\n}","import React from \"react\"\r\n\r\nfunction VehicleCreate() {\r\n    return (\r\n        <div className='vehicle-create'>\r\n            <div className=\"AI-content-inner__title\">\r\n                Создание машины\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    VehicleCreate,\r\n}","import React from \"react\";\r\nimport './adminInterface.css';\r\nimport { useToggle, useKeyPress } from \"@umijs/hooks\";\r\nimport { VehicleCreate } from \"./VehicleCreate\";\r\n\r\nfunction AdminInterface() {\r\n    const { state, toggle } = useToggle(1);\r\n\r\n    return (\r\n        <div className='admin'>\r\n            <div className='admin-interface'>\r\n                <div className=\"admin-interface__container\">\r\n                    <div className=\"AI-sidebar\">\r\n                        <ul>\r\n                            <li><a href=\"#\" onClick={ () => toggle(1) }>Создание машины</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"AI-content\">\r\n                        <div className=\"AI-content__title\">Панель администратора</div>\r\n                        { state === 1 && <VehicleCreate /> }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    AdminInterface,\r\n}","import rpc, { call, callClient, callServer } from 'rage-rpc';\r\nimport { LootCreateData } from '../../reducers/UIReducer';\r\n\r\ntype Result = {\r\n    result: boolean;\r\n    text: string;\r\n}\r\n\r\nexport type HeadPropType = {name: 'mother' | 'father' | 'skin' | 'similarity', val: number};\r\n\r\ntype CharacterType = {\r\n    gender: string;\r\n    face: any[];\r\n    head: any;\r\n    eyes: number;\r\n};\r\n\r\nfunction randomInteger(min, max) {\r\n    // получить случайное число от (min-0.5) до (max+0.5)\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n    return Math.round(rand);\r\n}\r\n  \r\n\r\n// Подбор предмета с земли.\r\nasync function takeInventoryItemToServer(itemKey: string, amount: number): Promise<Result> {\r\n    // return callServer('server_take_inventory_item', { itemKey, amount });\r\n    return new Promise((res, rej) => { // randomInteger(0, 1) ? true : false\r\n        setTimeout(_=> res({ result: randomInteger(0, 1) ? true : false, text: '\"Взять предмет\". Заглушка' }), 500);\r\n    });\r\n}\r\n// Дропает предмет из инвентаря.\r\nasync function dropInventoryItemToServer(itemKey: string, amount: number, putId: number): Promise<Result> {\r\n    // return callServer('server_drop_inventory_item', {itemKey, amount, putId});\r\n    return new Promise((res, rej) => { // randomInteger(0, 1) ? true : false\r\n        setTimeout(_=> res({ result: randomInteger(0, 1) ? true : false, text: '\"Выбосить предмет\". Заглушка' }), 500);\r\n    });\r\n}\r\n// Отправка на сервак serverId чтобы использовать предмет в инвентаре по нему.\r\nasync function usesInventoryItemByServerId(serverId: string): Promise<Result> {\r\n    // return callServer('server_use_item_by_serverid', serverId);\r\n    return { result: true, text: '\"Использование предмета\". Заглушка.' };\r\n}\r\n\r\n// Создает на клиенте объект с указанным хэшем и возвращает данные о нем.\r\nasync function lootCreate(objectHash: string): Promise<LootCreateData | false> {\r\n    // return callClient('client_set_loot_create', objectHash);\r\n    return {\r\n        objectId: 0,\r\n        objectHash: 'w_ar_assaultrifle',\r\n        position: [2, 32, 2320],\r\n        rotation: [120, 231, 3],\r\n    };\r\n}\r\n\r\nasync function setLootCreateRotation(pos: number[]): Promise<any> {\r\n    // return callClient('client_set_loot_create_rotation', pos);\r\n}\r\n\r\nasync function setLootCreateHash(hash: string): Promise<any> {\r\n    // return callClient('client_set_loot_create_hash', hash);\r\n}\r\n\r\n// Отправляет данные на сервер для регистрации.\r\nasync function serverRegister(login: string, email: string, password: string): Promise<Result> {\r\n    // return callServer('server_register', {login, email, password});\r\n    return { result: true, text: 'Вы успешно зарегистрировались!' };\r\n}\r\n\r\n// Отправляет данные на сервер для авторизации.\r\nasync function serverLogin(login: string, password: string): Promise<Result> {\r\n    // return callServer('server_login', {login, password});\r\n    return { result: true, text: 'Вы успешно авторизовались!' };\r\n}\r\n\r\n// Изменяет положение игрока на клиенте.\r\nasync function setCharacterHeading(h: number): Promise<any> {\r\n    // return callClient('client_character_set_heading', h);\r\n}\r\n\r\n// Меняет хар-ки лица на клиенте.\r\nasync function setCharacterFaceFeature(index: number, feature: number): Promise<any> {\r\n    // return callClient('client_character_set_face', {index, feature});\r\n}\r\n\r\n// Меняет пол на клиенте.\r\nasync function setCharacterGender(gender: 'male' | 'female'): Promise<any> {\r\n    // return callClient('client_character_set_gender', gender);\r\n}\r\n\r\nasync function setCharacterHeadProp(data: HeadPropType): Promise<any> {\r\n    // return callClient('client_character_set_head_prop', data);\r\n}\r\n\r\nasync function resetCharacter(): Promise<any> {\r\n    // return callClient('client_character_reset');\r\n}\r\n\r\nasync function setCharacterHair(dId: number) {\r\n    // return callClient('client_character_set_hair', dId);\r\n}\r\n\r\nasync function setCharacterCamera(coord: 'x' | 'y' | 'z', n: number) {\r\n    // return callClient('client_character_set_camera_pos', {coord, n});\r\n}\r\n\r\nasync function setCharacterReady() {\r\n    // return callClient('client_character_ready');\r\n}\r\n\r\nasync function setCharacterHairColor(id: number): Promise<any> {\r\n    // return callClient('client_character_set_hair_color', id);\r\n}\r\n\r\nasync function setCharacterHeadOverlay(overlayId: number, index: number): Promise<any> {\r\n    // return callClient('client_character_set_overlay', {overlayId, index});\r\n}\r\n\r\nasync function setCharacterEyes(val: number) {\r\n    // return callClient('client_Character_set_eyes', val);\r\n}\r\n\r\nasync function updateCharacterCameraPosition() {\r\n    // return callClient('update_character_camera_position');\r\n}\r\n\r\nasync function serverCheckLogin(login: string): Promise<{result: boolean; text: string}> {\r\n    // return callServer('server_check_login', login);\r\n    return {result: false, text: 'pizda vcem'};\r\n}\r\n\r\nasync function serverCharacterReady(data: {login: string; email: string; password: string}) {\r\n    // return callServer('server_character_ready', data);\r\n    return { text: 'test', result: true };\r\n}\r\n\r\nexport type CharactersDataResult = {\r\n    maxCharacters: number;\r\n    hasCharacters: number;\r\n};\r\n\r\nexport type CharactersServerResult = {\r\n    result: boolean; \r\n    text: string; \r\n    data: CharactersDataResult;\r\n};\r\n\r\nexport {\r\n    takeInventoryItemToServer,\r\n    dropInventoryItemToServer,\r\n    usesInventoryItemByServerId,\r\n\r\n    lootCreate,\r\n    setLootCreateRotation,\r\n    setLootCreateHash,\r\n\r\n    serverRegister,\r\n    serverLogin,\r\n    serverCheckLogin,\r\n    serverCharacterReady,\r\n\r\n    setCharacterHeading,\r\n    setCharacterFaceFeature,\r\n    setCharacterGender,\r\n    setCharacterHeadProp,\r\n    resetCharacter,\r\n    setCharacterHair,\r\n    setCharacterCamera,\r\n    setCharacterReady,\r\n    setCharacterHairColor,\r\n    setCharacterHeadOverlay,\r\n    setCharacterEyes,\r\n\r\n    updateCharacterCameraPosition,\r\n}","import React, { useState } from \"react\";\r\nimport './auth.css';\r\nimport { useToggle } from \"@umijs/hooks\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { enqueueSnackbar, NotifyVariant } from \"../../../actions/notificationActions\";\r\nimport { GiThumbUp, GiThumbDown } from \"react-icons/gi\";\r\nimport { serverRegister, serverLogin, updateCharacterCameraPosition, serverCheckLogin } from \"../../../helpers/playerEvents/rpcCall\";\r\nimport { Previous } from \"../Previous\";\r\nimport { push } from \"connected-react-router\";\r\nimport { Animation, Whisper, Tooltip } from 'rsuite';\r\nimport { State } from \"../../../reducers\";\r\nimport { setRegister, updateAuthProp } from \"../../../actions/authActions\";\r\nconst { Bounce } = Animation;\r\n\r\nconst btnRegValidStyles = {\r\n    border: '1px solid #c0c0c0',   \r\n    color: '#c0c0c0',\r\n    opacity: '.5',\r\n};\r\n\r\nconst inputStyles = (isError) => ({\r\n    border: isError ? '1px dashed rgba(160, 7, 17, 1)' : '',\r\n    color: isError ? 'rgba(160, 7, 17, 1)' : '',\r\n})\r\n\r\nfunction Register() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const dispatch = useDispatch();\r\n\r\n    const registerState = state.auth.register;\r\n\r\n    const isLoginValid = registerState.login.isValid;\r\n    const isLoginTouch = registerState.login.isTouch;\r\n    const isEmailValid = registerState.email.isValid;\r\n    const isEmailTouch = registerState.email.isTouch;\r\n    const isPassValid = registerState.password.isValid;\r\n    const isPassTouch = registerState.password.isTouch;\r\n    const isConfirmPassValid = registerState.confirmPassword.isValid;\r\n    const isConfirmPassTouch = registerState.confirmPassword.isTouch;\r\n\r\n    const checkData = () => {\r\n        const newState = {...registerState};\r\n        newState.login.isValid = registerState.login.regular.test(registerState.login.val); \r\n        newState.email.isValid = registerState.email.regular.test(registerState.email.val); \r\n        newState.password.isValid = registerState.password.regular.test(registerState.password.val);\r\n        newState.confirmPassword.isValid = newState.confirmPassword.val === newState.password.val; \r\n\r\n        dispatch(\r\n            setRegister(newState)\r\n        );\r\n    };\r\n\r\n    const clickRegisterBtn = async () => {\r\n        if (isLoginValid && isPassValid && isConfirmPassValid && isEmailValid) {\r\n            // Если игрока с указанным ником нет на сервере, то допустить к кастомизации.\r\n            const serverResult = await serverCheckLogin(registerState.login.val);\r\n            \r\n            if (serverResult.result) {\r\n                updateCharacterCameraPosition();\r\n                dispatch(\r\n                    push('/character')\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    enqueueSnackbar({\r\n                        message: serverResult.text,\r\n                            options: {\r\n                                key: new Date().getTime() + Math.random(),\r\n                                variant: serverResult.result ? NotifyVariant.SUCCESS : NotifyVariant.ERROR,\r\n                                anchorOrigin: {\r\n                                    horizontal: 'center',\r\n                                    vertical: 'bottom',\r\n                                }\r\n                        },\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    const onChange = (event: any) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        dispatch(\r\n            updateAuthProp(name, 'val', value)\r\n        );\r\n\r\n        checkData();\r\n    };\r\n\r\n    const onBlur = (event: any) => {\r\n        const name = event.target.name;\r\n        dispatch(\r\n            updateAuthProp(name, 'isTouch', true)\r\n        );\r\n    };\r\n\r\n    const isDisabled = !isLoginValid || !isPassValid || !isConfirmPassValid || !isEmailValid;\r\n    console.log('isDisabled', isDisabled);\r\n\r\n    return (\r\n        <Bounce in={ true }>\r\n            <div className='middle-register'>\r\n                <form className=\"middle-form\">\r\n                    <div className='middle-form_input'>\r\n                        <input placeholder='Логин(Никнейм)' type=\"text\" name='login' value={ registerState.login.val || '' } onChange={ onChange } onBlur={ onBlur } style={ inputStyles(isLoginTouch && !isLoginValid) } />\r\n                        { isLoginTouch && isLoginValid && <GiThumbUp /> }\r\n                        { isLoginTouch && !isLoginValid && <span style={ {color: 'rgb(218, 75, 85)'} }><GiThumbDown /></span> } \r\n                    </div>\r\n                    <div className='middle-form_input'>\r\n                        <input placeholder='Емейл' type=\"email\" name='email' value={ registerState.email.val || '' } onChange={ onChange } onBlur={ onBlur } style={ inputStyles(registerState.email.isTouch && !registerState.email.isValid) } />\r\n                        { isEmailTouch && isEmailValid && <GiThumbUp /> }\r\n                        { isEmailTouch && !isEmailValid && <span style={ {color: 'rgb(218, 75, 85)'} }><GiThumbDown /></span> } \r\n                    </div>\r\n                    <div className='middle-form_input'>\r\n                        <input placeholder='Введите пароль' type=\"password\" name='password' value={ registerState.password.val || '' } onChange={ onChange } onBlur={ onBlur } style={ inputStyles(isPassTouch && !isPassValid) } />\r\n                        { isPassTouch && isPassValid && <GiThumbUp /> }\r\n                        { isPassTouch && !isPassValid && <span style={ {color: 'rgb(218, 75, 85)'} }><GiThumbDown /></span> } \r\n                    </div>\r\n                    <div className='middle-form_input'>\r\n                        <input placeholder='Повторите пароль' type=\"password\" name='confirmPassword' value={ registerState.confirmPassword.val || '' } onChange={ onChange } onBlur={ onBlur } style={ inputStyles(isConfirmPassTouch && !isConfirmPassValid) } />\r\n                        { isConfirmPassTouch && isConfirmPassValid && <GiThumbUp /> }\r\n                        { isConfirmPassTouch && !isConfirmPassValid && <span style={ {color: 'rgb(218, 75, 85)'} }><GiThumbDown /></span> }\r\n                    </div>\r\n                </form>\r\n                <div className=\"auth-interface__bottom\">\r\n                    <button \r\n                        className='button-register' \r\n                        onClick={ () => clickRegisterBtn() } \r\n                        disabled={ isDisabled }\r\n                        style={ isDisabled ? btnRegValidStyles : {} }    \r\n                    >\r\n                        Далее\r\n                    </button>\r\n                </div>\r\n                <div className='auth-interface__bottom-errors'>\r\n                    { isLoginTouch && !isLoginValid && <div>Логин должен быть длиной от <span style={{color: '#34c3ff'}}>3 до 16 символов</span>. Может содержать латинские буквы и цифры.</div> }\r\n                    { isEmailTouch && !isEmailValid && <div>Введите корректный емейл.</div> }\r\n                    { isPassTouch && !isPassValid && <div>Пароль должен быть от <span style={{color: '#34c3ff'}}>6 до 30 символов</span>, разрешено латиниские буквы, цифры и спецсимволы <span style={{color: '#34c3ff'}}>@ # $ % ^ & *</span>.</div> }\r\n                    { isConfirmPassTouch && !isConfirmPassValid && <div>Пароли не совпадают.</div> }\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    );\r\n}\r\n\r\ntype LoginType = {\r\n    login: string;\r\n    password: string;\r\n}\r\n\r\nfunction Login() {\r\n    const dispatch = useDispatch();\r\n    \r\n    const [state, setState] = useState<LoginType>({\r\n        login: '',\r\n        password: '',\r\n    });\r\n\r\n    const onChange = (event: any) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        setState({\r\n            ...state,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const onClick = async () => {\r\n        const serverResult = await serverLogin(state.login, state.password);\r\n\r\n        dispatch(\r\n            enqueueSnackbar({\r\n                message: serverResult.text,\r\n                options: {\r\n                    key: new Date().getTime() + Math.random(),\r\n                    variant: serverResult.result ? NotifyVariant.SUCCESS : NotifyVariant.ERROR,\r\n                    anchorOrigin: {\r\n                        horizontal: 'center',\r\n                        vertical: 'bottom',\r\n                    },\r\n                },\r\n            })\r\n        );\r\n    };\r\n\r\n    const isDisabled = state.login.length < 3 || state.password.length < 6;\r\n\r\n    return (\r\n        <Bounce in={ true }>\r\n            <div className='middle-login'>\r\n                <form className=\"middle-form\">\r\n                    <input placeholder='Введите логин' type=\"text\" name='login' value={ state.login || '' } onChange={ onChange } />\r\n                    <input placeholder='Введите пароль' type=\"password\" name='password' value={ state.password || '' } onChange={ onChange } />\r\n                </form>\r\n                <div className=\"auth-interface__bottom\">\r\n                    <button \r\n                        className='button-register' \r\n                        disabled={ isDisabled }\r\n                        style={ isDisabled ? btnRegValidStyles : {} }\r\n                        onClick={ onClick }\r\n                    >\r\n                        Авторизоваться\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    );\r\n}\r\n\r\nfunction Auth() {\r\n    const { state: toggleState, toggle: setToggle } = useToggle(0);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Bounce in={ true }>\r\n            <div className='auth'>\r\n                <div className=\"auth-interface\">\r\n                    <div className=\"auth-interface__top\">\r\n                        <div className=\"auth-interface__login\" onClick={ () => setToggle(0) } style={ {color: toggleState === 0 ? 'rgba(160, 7, 17, 1)' : ''} }>\r\n                            Авторизация\r\n                        </div>\r\n                        <div className=\"auth-interface__register\" onClick={ () => setToggle(1) } style={ {color: toggleState === 1 ? 'rgba(160, 7, 17, 1)' : ''} }>\r\n                            Регистрация\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"auth-interface__middle\">\r\n                        { toggleState === 0 && <Login /> }\r\n                        { toggleState === 1 && <Register /> }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    );\r\n}\r\n\r\nexport {\r\n    Auth,\r\n}","import React from \"react\";\r\nimport ReactSlider from \"react-slider\";\r\n\r\ntype Props = {\r\n    onChange: (p1: number) => any;\r\n    min: number;\r\n    max: number;\r\n    step: number;\r\n    defVal?: number;\r\n    value?: number;\r\n};\r\n\r\nfunction CharacterSlider(props: Props) {\r\n    const { step, min, max, value, onChange } = props;\r\n    \r\n    return (\r\n        <div>\r\n            <ReactSlider\r\n                className=\"character-slider\"\r\n                thumbClassName=\"character-thumb\"\r\n                trackClassName=\"character-track\"\r\n                min={ min }\r\n                max={ max }\r\n                step={ step }\r\n                value={ value }\r\n                renderThumb={(props, state) => <div {...props}></div>}\r\n                onChange={ (val: any) => onChange(val) }\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterSlider,\r\n}","import React from \"react\";\r\nimport { CharacterSlider } from \"../CharacterSlider\";\r\nimport { setCharacterFaceFeature } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setFaceFeature } from \"../../../../actions/characterActions\";\r\nimport { State } from \"../../../../reducers\";\r\n\r\nfunction CharacterFace() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const face = state.character.face;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSliderChange = (index: number, feature: number) => {\r\n        setCharacterFaceFeature(index, feature);\r\n        dispatch(setFaceFeature(index, feature));\r\n    };\r\n\r\n    const getData = () => {\r\n        return face.map(i => (\r\n            <div className='character-face__item' key={ `${i.index}_${i.index}` }>\r\n                <div className=\"character-face__item-title\">{ i.name }</div>\r\n                <CharacterSlider min={-1.0} max={1.0} step={0.1} value={ i.feature } onChange={ (n: number) => onSliderChange(i.index, n) } />\r\n            </div>\r\n        ));\r\n    }\r\n \r\n    return (\r\n        <div className='character-face'>\r\n            { getData() }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterFace,\r\n}","import React, { useState } from \"react\";\r\nimport { FaLongArrowAltLeft, FaLongArrowAltRight } from \"react-icons/fa\";\r\nimport { useHover } from '@umijs/hooks';\r\n\r\ntype Props = {\r\n    onLeftClick: () => any;\r\n    onRightClick: () => any;\r\n    topText?: string;\r\n    value: any;\r\n};\r\n\r\nfunction AnySelect(props: Props) {\r\n    const { onLeftClick, onRightClick, value, topText } = props;\r\n    const [isHoverLeft, hoverLeftRef] = useHover<HTMLDivElement>();\r\n    const [isHoverRight, hoverRightRef] = useHover<HTMLDivElement>();\r\n    // const [isHovering, hoverRef] = useHover<HTMLDivElement>();\r\n\r\n    const cssSelectContainer: any = {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '13rem',\r\n        textAlign: 'center',\r\n        margin: '0 auto',\r\n    }\r\n    \r\n    const cssSelectHeadArrowLeft = {\r\n        fontSize: '3rem',\r\n        color: '#34c3ff',\r\n        verticalAlign: 'middle',\r\n        opacity: isHoverLeft ? .5 : 1,\r\n\r\n    }\r\n    const cssSelectHeadArrowRight = {\r\n        fontSize: '3rem',\r\n        color: '#34c3ff',\r\n        verticalAlign: 'middle',\r\n        opacity: isHoverRight ? .5 : 1,\r\n    }\r\n\r\n    const cssSelectHeadValue = {\r\n        width: '10rem',\r\n        fontSize: '1.5rem'\r\n    }\r\n\r\n    const cssTopText: any = {\r\n        textAlign: 'center',\r\n        position: 'absolute',\r\n        top: '-0.2rem',\r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        width: '100%',\r\n        color: '#fff',\r\n        textShadow: '0px 2px 9px #000000',\r\n    };\r\n\r\n    return (\r\n        <div style={ cssSelectContainer }>\r\n            <div style={ cssTopText }>\r\n                { topText }\r\n            </div>\r\n\r\n            <div style={ cssSelectHeadArrowLeft } onClick={ onLeftClick } ref={ hoverLeftRef }>\r\n                <FaLongArrowAltLeft style={ {verticalAlign: 'middle'} } />\r\n            </div>\r\n            <div style={ cssSelectHeadValue }>\r\n                { value }\r\n            </div>\r\n            <div style={ cssSelectHeadArrowRight } onClick={ onRightClick } ref={ hoverRightRef }>\r\n                <FaLongArrowAltRight style={ {verticalAlign: 'middle'} } />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    AnySelect,\r\n}","import React, { useState } from \"react\";\r\nimport { FaLongArrowAltLeft, FaLongArrowAltRight } from \"react-icons/fa\";\r\nimport { setCharacterHeadProp } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { State } from \"../../../../reducers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setParentIndex } from \"../../../../actions/characterActions\";\r\nimport { AnySelect } from \"../../../shared/AnySelect\";\r\n\r\ntype Props = {\r\n    parentsObj: any;\r\n    parents: { father: any, mother: any };\r\n    parent: 'father' | 'mother';\r\n    text: string;\r\n    sendData: (name: any, value: any) => any;\r\n};\r\n\r\nfunction CharacterHeadParent(props: Props) {\r\n    const { parents, parent, sendData, parentsObj, text } = props;\r\n    const characterState = useSelector((state: State) => state || []);\r\n    const parentIndex = characterState.character.head[parent].index;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onIncrement = () => {\r\n        const length = parents[parent].length - 1;\r\n        let c = parentIndex;\r\n        \r\n        c += 1;\r\n        if (c > length) {\r\n            c = length;\r\n        }\r\n\r\n        dispatch(setParentIndex(parent, c));\r\n        sendData(parent, parentsObj[parents[parent][c]]);\r\n    };\r\n\r\n    const onDecrement = () => {\r\n        let c = parentIndex;\r\n\r\n        c -= 1;\r\n        if (c <= 0) {\r\n            c = 0;\r\n        }\r\n\r\n        dispatch(setParentIndex(parent, c));\r\n        sendData(parent, parentsObj[parents[parent][c]]);\r\n    };\r\n\r\n    return (\r\n        <div className='character-head'>\r\n            <AnySelect onLeftClick={ onDecrement } onRightClick={ onIncrement } value={ parents[parent][parentIndex] } topText={ text } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterHeadParent,\r\n}\r\n","import React from \"react\";\r\nimport { CharacterHeadParent } from \"../CharacterHeadParent\";\r\nimport { CharacterSlider } from \"../CharacterSlider\";\r\nimport { setCharacterHeadProp } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { State } from \"../../../../reducers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setHeadProp } from \"../../../../actions/characterActions\";\r\n\r\nconst fatherObj = {\r\n    \"Benjamin\": 0, \r\n    \"Daniel\": 1, \r\n    \"Joshua\": 2, \r\n    \"Noah\": 3, \r\n    \"Andrew\": 4, \r\n    \"Juan\": 5, \r\n    \"Alex\": 6, \r\n    \"Isaac\": 7, \r\n    \"Evan\": 8, \r\n    \"Ethan\": 9, \r\n    \"Vincent\": 10, \r\n    \"Angel\": 11, \r\n    \"Diego\": 12, \r\n    \"Adrian\": 13, \r\n    \"Gabriel\": 14, \r\n    \"Michael\": 15, \r\n    \"Santiago\": 16, \r\n    \"Kevin\": 17, \r\n    \"Louis\": 18, \r\n    \"Samuel\": 19, \r\n    \"Anthony\": 20, \r\n    \"Claude\": 42, \r\n    \"Niko\": 43, \r\n    \"John\": 44,\r\n};\r\n\r\nconst motherObj = {\r\n    \"Hannah\": 21, \r\n    \"Aubrey\": 22,\r\n    \"Jasmine\": 23, \r\n    \"Gisele\": 24, \r\n    \"Amelia\": 25, \r\n    \"Isabella\": 26, \r\n    \"Zoe\": 27, \r\n    \"Ava\": 28, \r\n    \"Camila\": 29, \r\n    \"Violet\": 30, \r\n    \"Sophia\": 31, \r\n    \"Evelyn\": 32, \r\n    \"Nicole\": 33, \r\n    \"Ashley\": 34, \r\n    \"Gracie\": 35, \r\n    \"Brianna\": 36, \r\n    \"Natalie\": 37, \r\n    \"Olivia\": 38, \r\n    \"Elizabeth\": 39, \r\n    \"Charlotte\": 40, \r\n    \"Emma\": 41, \r\n    \"Misty\": 45,\r\n};\r\n\r\nconst father = [\"Benjamin\", \"Daniel\", \"Joshua\", \"Noah\", \"Andrew\", \"Juan\", \"Alex\", \"Isaac\", \"Evan\", \"Ethan\", \"Vincent\", \"Angel\", \"Diego\", \"Adrian\", \"Gabriel\", \"Michael\", \"Santiago\", \"Kevin\", \"Louis\", \"Samuel\", \"Anthony\", \"Claude\", \"Niko\", \"John\"];\r\nconst mother = [\"Hannah\", \"Aubrey\", \"Jasmine\", \"Gisele\", \"Amelia\", \"Isabella\", \"Zoe\", \"Ava\", \"Camila\", \"Violet\", \"Sophia\", \"Evelyn\", \"Nicole\", \"Ashley\", \"Gracie\", \"Brianna\", \"Natalie\", \"Olivia\", \"Elizabeth\", \"Charlotte\", \"Emma\", \"Misty\"];\r\nconst parents = { father, mother };\r\n\r\nfunction CharacterHead() {\r\n    const sendData = (name: any, val: number) => {\r\n        setCharacterHeadProp({name, val});\r\n    };\r\n\r\n    const state = useSelector((state: State) => state || []);\r\n    const dispatch = useDispatch();\r\n\r\n    const onChange = (name: string, val: number) => {\r\n        sendData(name, val);\r\n        dispatch(setHeadProp(name, val));\r\n    };\r\n\r\n    return (\r\n        <div className='character-head-container'>\r\n            <CharacterHeadParent parent={ 'father' } sendData={ sendData } parents={ parents } parentsObj={ fatherObj } text='Отец' />\r\n            <CharacterHeadParent parent={ 'mother' } sendData={ sendData } parents={ parents } parentsObj={ motherObj } text='Мать' />\r\n\r\n            <div className='character-head-container__title' style={{margin: '1rem 0'}}>Схожесть</div>\r\n            <CharacterSlider min={ 0 } max={ 1 } step={ 0.1 } value={ state.character.similarity } onChange={ (val) => { onChange('similarity', val) } } />\r\n\r\n            <div className='character-head-container__title' style={{margin: '1rem 0'}}>Цвет кожи</div>\r\n            <CharacterSlider min={ 0 } max={ 1 } step={ 0.1 } value={ state.character.skin } onChange={ (val) => { onChange('skin', val) } } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterHead,\r\n}","import React from \"react\";\r\nimport { AnySelect } from \"../../../shared/AnySelect\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { State } from \"../../../../reducers\";\r\nimport { setHairId, setHairColor } from \"../../../../actions/characterActions\";\r\nimport { setCharacterHair, setCharacterHairColor } from \"../../../../helpers/playerEvents/rpcCall\";\r\n\r\n// drawableIds.\r\nconst hairList = {\r\n    male: [\r\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, \r\n        24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, \r\n        44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, \r\n        65, 66, 67, 68, 69, 70, 71, 72, 73, 74,\r\n    ],\r\n    female: [\r\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, \r\n        22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, \r\n        42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, \r\n        62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,\r\n    ],\r\n};\r\n\r\nfunction CharacterHair() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const dispatch = useDispatch();\r\n    const gender = state.character.gender; \r\n    let hairId = state.character.hair;\r\n    let hairColorId = state.character.hairColorId;\r\n\r\n    const onLeftClick = async () => {      \r\n        hairId -= 1;\r\n\r\n        if (hairId < 0) {\r\n            hairId = hairList[gender].length - 1;\r\n        }\r\n\r\n        // Отправка на клиент.\r\n        await setCharacterHair(hairList[gender][hairId]);\r\n        \r\n        dispatch(\r\n            setHairId(hairId)\r\n        );\r\n    };\r\n\r\n    const onRightClick = async () => {\r\n        hairId += 1;\r\n\r\n        if (hairId > hairList[gender].length - 1) {\r\n            hairId = 0;\r\n        }\r\n\r\n        // Отправка на клиент.\r\n        await setCharacterHair(hairList[gender][hairId]);\r\n        \r\n        dispatch(\r\n            setHairId(hairId)\r\n        );\r\n    };\r\n\r\n    const onHairColorRightClick = () => {\r\n        hairColorId += 1;\r\n        if (hairColorId > 63) {\r\n            hairColorId = 0;\r\n        } \r\n\r\n        // Отправка на клиент.\r\n        setCharacterHairColor(hairColorId);\r\n\r\n        dispatch(setHairColor(hairColorId));\r\n    };\r\n\r\n    const onHairColorLeftClick = () => {\r\n        hairColorId -= 1;\r\n        if (hairColorId < 0) {\r\n            hairColorId = 63;\r\n        } \r\n        \r\n        // Отправка на клиент.\r\n        setCharacterHairColor(hairColorId);\r\n\r\n        dispatch(setHairColor(hairColorId));\r\n    };\r\n    \r\n    return (\r\n        <div className='character-hair'>\r\n            <AnySelect value={ hairList[gender][hairId] } onRightClick={ onRightClick } onLeftClick={ onLeftClick } topText='Тип волос' />\r\n            <AnySelect value={ hairColorId } onRightClick={ onHairColorRightClick } onLeftClick={ onHairColorLeftClick } topText='Цвет волос' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterHair,\r\n}","import React from \"react\";\r\nimport ReactSlider from \"react-slider\";\r\nimport { Animation } from 'rsuite';\r\nimport { setCharacterHeading, setCharacterCamera } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction CharacterHeading() {\r\n    const { Bounce } = Animation;\r\n    \r\n    const onSliderHeadingChange = (value: any) => {\r\n        if (typeof value === 'number') {\r\n            setCharacterHeading(value)\r\n        }\r\n    };\r\n\r\n    const onSliderCameraChange = (coord: 'x' | 'y' | 'z', n: number) => {\r\n        if (typeof n === 'number') {\r\n            setCharacterCamera(coord, n);\r\n        }\r\n    };\r\n\r\n    const cssSlider: any = {\r\n        textAlign: 'center', \r\n        fontSize: '1.5rem', \r\n        color: '#fff', \r\n        paddingBottom: '.5rem',\r\n        textShadow: '0px 0px 7px rgba(0,0,0,0.37)'\r\n    };\r\n    \r\n    return (\r\n        <div className=\"character-heading\">\r\n        <Bounce in={ true }>\r\n            <div>\r\n                <div>\r\n                    <span style={cssSlider}\r\n                    >Направление камеры по вертикали</span>\r\n                    <ReactSlider\r\n                        className=\"heading-slider\"\r\n                        thumbClassName=\"heading-thumb\"\r\n                        trackClassName=\"heading-track\"\r\n                        min={ 15.5 }\r\n                        max={ 17.5 }\r\n                        step={ .1 }\r\n                        defaultValue={ 16.5 }\r\n                        renderThumb={(props, state) => <div {...props}></div>}\r\n                        onChange={ (v: any) => onSliderCameraChange('z', v) }\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <span style={cssSlider}\r\n                    >Направление камеры по горизонтали</span>\r\n                    <ReactSlider\r\n                        className=\"heading-slider\"\r\n                        thumbClassName=\"heading-thumb\"\r\n                        trackClassName=\"heading-track\"\r\n                        min={ 5179 }\r\n                        max={ 5180 }\r\n                        step={ .1 }\r\n                        defaultValue={ 5179.5 }\r\n                        renderThumb={(props, state) => <div {...props}></div>}\r\n                        onChange={ (v: any) => onSliderCameraChange('y', v) }\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <span style={cssSlider}\r\n                    >Направление персонажа</span>\r\n                    <ReactSlider\r\n                        className=\"heading-slider\"\r\n                        thumbClassName=\"heading-thumb\"\r\n                        trackClassName=\"heading-track\"\r\n                        min={ 1 }\r\n                        max={ 360 }\r\n                        defaultValue={ 180 }\r\n                        renderThumb={(props, state) => <div {...props}></div>}\r\n                        onChange={ onSliderHeadingChange }\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterHeading,\r\n}","function range(value: number, min: number, max: number) {\r\n    if (value < min) {\r\n        value = min;\r\n    }\r\n    if (value > max) {\r\n        value = max;\r\n    }\r\n    return value;\r\n};\r\n\r\nexport {\r\n    range,\r\n}","import React from \"react\";\r\nimport { AnySelect } from \"../../../shared/AnySelect\";\r\nimport { range } from \"../../../../helpers/helps\";\r\nimport { setCharacterHeadOverlay } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { State } from \"../../../../reducers\";\r\nimport { setHeadOverlayProp } from \"../../../../actions/characterActions\";\r\n\r\n\r\nfunction CharacterHeadOverlay() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const dispatch = useDispatch();\r\n\r\n    // state.character.headOverlay[1].overlayId\r\n \r\n    const getIndex = (overlayId, index) => {\r\n        switch (overlayId) {\r\n            case 0: {\r\n                return range(index, 0, 23);\r\n            }\r\n            case 1: {\r\n                return range(index, 0, 28);\r\n            }\r\n            case 2: {\r\n                return range(index, 0, 33);\r\n            }\r\n            case 3: {\r\n                return range(index, 0, 14);\r\n            }\r\n            case 4: {\r\n                return range(index, 0, 74);\r\n            }\r\n            case 5: {\r\n                return range(index, 0, 6);\r\n            }\r\n            case 6: {\r\n                return range(index, 0, 11);\r\n            }\r\n            case 7: {\r\n                return range(index, 0, 10);\r\n            }\r\n            case 8: {\r\n                return range(index, 0, 9);\r\n            }\r\n            case 9: {\r\n                return range(index, 0, 17);\r\n            }\r\n            case 10: {\r\n                return range(index, 0, 16);\r\n            }\r\n            case 11: {\r\n                return range(index, 0, 11);\r\n            }\r\n            case 12: {\r\n                return range(index, 0, 1);\r\n            }\r\n            default: {\r\n                return -1;\r\n            }\r\n        }\r\n    };\r\n\r\n    const onLeft = (overlayId: number, index: number) => {\r\n        index = getIndex(overlayId, --index);\r\n        dispatch(\r\n            setHeadOverlayProp(overlayId, getIndex(overlayId, index))\r\n        );\r\n        setCharacterHeadOverlay(overlayId, index);\r\n    };\r\n\r\n    const onRight = (overlayId: number, index: number) => {\r\n        index = getIndex(overlayId, ++index);\r\n        dispatch(\r\n            setHeadOverlayProp(overlayId, getIndex(overlayId, index))\r\n        );\r\n        setCharacterHeadOverlay(overlayId, index);\r\n    };\r\n\r\n    const getData = () => {\r\n        return state.character.headOverlay.map(i => {\r\n            const { index, overlayId } = state.character.headOverlay[i.overlayId];\r\n            \r\n            let value: any = index;\r\n\r\n            if (overlayId === 12) {\r\n                value = index === 1 ? 'Да' : 'Нет';\r\n            }\r\n\r\n            return (\r\n                <div key={ `${i.name}_${i.index}` }>\r\n                    <AnySelect \r\n                        onLeftClick={ () => onLeft(i.overlayId, i.index) } \r\n                        onRightClick={ () => onRight(i.overlayId, i.index) } \r\n                        value={ value } \r\n                        topText={ i.name } \r\n                    />\r\n                </div>\r\n            )\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className='character-head-overlay'>\r\n            { getData() }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterHeadOverlay,\r\n}","import React from \"react\";\r\nimport ReactSlider from \"react-slider\";\r\nimport { AnySelect } from \"../../../shared/AnySelect\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { State } from \"../../../../reducers\";\r\nimport { range } from \"../../../../helpers/helps\";\r\nimport { setEyesColor } from \"../../../../actions/characterActions\";\r\nimport { setCharacterEyes } from \"../../../../helpers/playerEvents/rpcCall\";\r\n\r\nfunction CharacterEyes() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const dispatch = useDispatch();\r\n    let eyes = state.character.eyes;\r\n\r\n    const onLeft = () => {\r\n        eyes -= 1;\r\n        eyes = range(eyes, 0, 31);\r\n        dispatch(\r\n            setEyesColor(eyes)\r\n        );\r\n        setCharacterEyes(eyes);\r\n    };\r\n    const onRight = () => {\r\n        eyes += 1;\r\n        eyes = range(eyes, 0, 31);\r\n        dispatch(\r\n            setEyesColor(eyes)\r\n        );\r\n        setCharacterEyes(eyes);\r\n    };\r\n\r\n    return (\r\n        <div className='character-eyes'>\r\n            <AnySelect \r\n                onLeftClick={ () => onLeft() } \r\n                onRightClick={ () => onRight() } \r\n                value={ eyes }\r\n                topText={ 'Цвет глаз' } \r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterEyes,\r\n}","import React, { useEffect } from \"react\";\r\nimport './character.css';\r\nimport { Drawer, Button, Slider, Animation } from 'rsuite';\r\nimport { Previous } from \"../Previous\";\r\nimport { push } from \"connected-react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactSlider from 'react-slider'\r\nimport { setCharacterHeading, setCharacterGender, resetCharacter, serverRegister, updateCharacterCameraPosition, serverCharacterReady } from \"../../../helpers/playerEvents/rpcCall\";\r\nimport { CharacterFace } from \"./CharacterFace\";\r\nimport { CharacterHead } from \"./CharacterHead\";\r\nimport { setInitialCharacter, setGender } from \"../../../actions/characterActions\";\r\nimport { State } from \"../../../reducers\";\r\nimport { CharacterHair } from \"./CharacterHair\";\r\nimport { CharacterHeading } from \"./CharacterHeading\";\r\nimport { CharacterHeadOverlay } from \"./CharacterHeadOverlay\";\r\nimport { CharacterEyes } from \"./CharacterEyes\";\r\nimport { enqueueSnackbar, NotifyVariant } from \"../../../actions/notificationActions\";\r\n\r\nconst { Bounce } = Animation;\r\n\r\nfunction CharacterTitle(props: { title: string; }) {\r\n    const { title } = props;\r\n    \r\n    return (\r\n        <div style={ {fontSize: '1.6rem', margin: '2rem 0', textAlign: 'center', textTransform: 'uppercase'} }>{ title }</div>\r\n    );\r\n}\r\n\r\nfunction Character() {\r\n    const state = useSelector((state: State) => state.character || []);\r\n    const registerState = useSelector((state: State) => state.auth.register || []);\r\n    const dispatch = useDispatch();\r\n    const { login, email, password } = registerState;\r\n\r\n    const onGenderClick = async (gender: 'male' | 'female') => {\r\n        await resetCharacter();\r\n        await setCharacterGender(gender);\r\n        dispatch(\r\n            setGender(gender)\r\n        );\r\n        dispatch(\r\n            setInitialCharacter()\r\n        );\r\n    };\r\n\r\n    const onClickReset = async () => {\r\n        // Отправка на клиент.\r\n        await resetCharacter();\r\n        dispatch(\r\n            setInitialCharacter()\r\n        );\r\n    };\r\n\r\n    const onReady = async () => {\r\n        const serverResult = await serverCharacterReady({\r\n            login: login.val, \r\n            email: email.val, \r\n            password: password.val,\r\n        });\r\n        // Занести данные в бд.\r\n\r\n        dispatch(\r\n            enqueueSnackbar({\r\n                message: serverResult.text,\r\n                    options: {\r\n                        key: new Date().getTime() + Math.random(),\r\n                        variant: serverResult.result ? NotifyVariant.SUCCESS : NotifyVariant.ERROR,\r\n                        anchorOrigin: {\r\n                            horizontal: 'center',\r\n                            vertical: 'bottom',\r\n                        }\r\n                },\r\n            })\r\n        );\r\n        \r\n        dispatch(push('clear'));\r\n    };\r\n\r\n    return (\r\n        <div className='character'>\r\n            <Drawer\r\n                backdrop={ false }\r\n                size={ 'xs' }\r\n                placement={ 'left' }\r\n                show={ true }\r\n                className='character-drawer'\r\n            >\r\n                <Drawer.Header>\r\n                    <span className='character-reset' onClick={ () => onClickReset() }>Сбросить</span>\r\n                </Drawer.Header>\r\n                <Drawer.Body>\r\n                    <div className=\"character-content\">\r\n                        <div className=\"character-gender\">\r\n                            <Button appearance=\"ghost\" color='red' size='lg' active onClick={ () => onGenderClick('male') }>Мужской</Button>\r\n                            <Button appearance=\"ghost\" color='violet' size='lg' active onClick={ () => onGenderClick('female') }>Женский</Button>\r\n                        </div>\r\n                        <CharacterTitle title='Лицо' />\r\n                        <CharacterHead />\r\n                        <CharacterTitle title='Лицо' />\r\n                        <CharacterFace />\r\n                        <CharacterTitle title='Внешний вид' />\r\n                        <CharacterEyes />\r\n                        <CharacterHair />\r\n                        <CharacterHeadOverlay />\r\n\r\n                    </div>\r\n                </Drawer.Body>\r\n                <Drawer.Footer>\r\n                    <div style={ {textAlign: 'center'} }>\r\n                        <Button appearance=\"ghost\" size='lg' style={{textAlign: 'center', width: '8rem'}} onClick={ onReady }>ГОТОВО</Button>\r\n                    </div>\r\n                </Drawer.Footer>\r\n            </Drawer>\r\n\r\n            <CharacterHeading />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    Character,\r\n}","import React from \"react\";\r\nimport './startMenu.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\nimport { Animation } from 'rsuite';\r\nconst { Bounce } = Animation;\r\n\r\nfunction StartMenu() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Bounce in={ true }>\r\n            <div className='start-menu'>\r\n                <div className=\"start-menu__interface\">\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    );\r\n}\r\n\r\nexport {\r\n    StartMenu,\r\n}","import img_item_weapon_ak47 from '../assets/items/item_weapon_ak47.png';\r\nimport img_item_armor from '../assets/items/item_armor.png';\r\nimport img_item_ammo_shotgun from '../assets/items/item_ammo_shotgun.png';\r\nimport item_clothes_mask_1 from '../assets/items/item_clothes_mask_1.jpg';\r\nimport item_clothes_mask_2 from '../assets/items/item_clothes_mask_2.jpg';\r\nimport item_clothes_mask_3 from '../assets/items/item_clothes_mask_3.jpg';\r\nimport item_clothes_mask_4 from '../assets/items/item_clothes_mask_4.jpg';\r\nimport item_clothes_mask_5 from '../assets/items/item_clothes_mask_5.jpg';\r\nimport { ItemKey } from '../types';\r\n\r\nconst images = {\r\n    [ItemKey.ITEM_WEAPON_AK47]: img_item_weapon_ak47,\r\n    [ItemKey.ITEM_ARMOR]: img_item_armor,\r\n    [ItemKey.ITEM_AMMO_SHOTGUN]: img_item_ammo_shotgun,\r\n    [ItemKey.ITEM_CLOTHES_MASK_1]: item_clothes_mask_1,\r\n    [ItemKey.ITEM_CLOTHES_MASK_2]: item_clothes_mask_2,\r\n    [ItemKey.ITEM_CLOTHES_MASK_3]: item_clothes_mask_3,\r\n    [ItemKey.ITEM_CLOTHES_MASK_4]: item_clothes_mask_4,\r\n    [ItemKey.ITEM_CLOTHES_MASK_5]: item_clothes_mask_5,\r\n};\r\n\r\nconst getItemImage = (itemKey: ItemKey) => images[itemKey];\r\n\r\nexport {\r\n    getItemImage,\r\n}","import React, { Ref } from \"react\";\r\nimport '../inventory.css';\r\nimport { Item, ItemType } from \"../../../types\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nimport { Preview } from \"../Preview\";\r\nimport { getItemImage } from \"../../../helpers/getImages\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { swapItems, swapInvAndGroundItems } from \"../../../actions/inventoryActions\";\r\nimport { dropInventoryItemToServer, takeInventoryItemToServer } from \"../../../helpers/playerEvents/rpcCall\";\r\nimport { State } from \"../../../reducers\";\r\nimport { enqueueSnackbar, NotifyVariant, Notify } from \"../../../actions/notificationActions\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\n\r\ntype Props = {\r\n    item: Item | null;\r\n    id: number;\r\n    itemsType: 'inventoryItems' | 'groundItems'\r\n};\r\n\r\nfunction InventoryCell(props: Props) {\r\n    const { item } = props;\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state: State) => state || []);\r\n\r\n    const imgSize = 3.83;\r\n    const decrementSize = .2;\r\n\r\n    const [{ isDragging }, dragRef] = useDrag({\r\n        item: {\r\n            type: props.itemsType,\r\n            src: item ? getItemImage(item.key) : null, imgSize: `${imgSize - (decrementSize * 2)}rem`,\r\n            id: props.id,\r\n            amount: item?.amount,\r\n        },\r\n        collect: (monitor) => ({\r\n          isDragging: !!monitor.isDragging(),\r\n        }),\r\n    });\r\n    \r\n    const onDrop = async (item, monitor) => {\r\n        const dropIdx = props.id;\r\n        const dragIdx = item.id;\r\n\r\n        const dropType = props.itemsType; // Тип элемента КУДА ПЕРЕТАЩИЛИ ПРЕДМЕТ.\r\n        const dragType = item.type; // Тип элемента КОТОРЫЙ ПЕРЕТАЩИЛИ.\r\n\r\n        // Перенос с 1 зоны на другую.\r\n        if (dropType != dragType) {\r\n            let invId = -1;\r\n            let groundId = -1;\r\n\r\n            // Перенос с Инвентаря на Землю.\r\n            if (dragType == 'inventoryItems') {\r\n                invId = dragIdx;\r\n                groundId = dropIdx;\r\n\r\n                const items = [...state.inventory.inventoryItems]\r\n                const invItem = items[invId];\r\n\r\n                if (invItem) {\r\n                    const serverResult = await dropInventoryItemToServer(invItem.key, invItem.amount, groundId);\r\n                    if (serverResult.result) {\r\n                        dispatch(swapInvAndGroundItems(invId, groundId));\r\n                    }\r\n                    dispatch(Notify(serverResult.text, serverResult.result ? NotifyVariant.SUCCESS : NotifyVariant.ERROR, 'center', 'bottom'));\r\n\r\n                    return;\r\n                }\r\n            }\r\n            // Перенос с Земли в Инвентарь.\r\n            if (dragType == 'groundItems') {\r\n                invId = dropIdx;\r\n                groundId = dragIdx;\r\n\r\n                const items = [...state.inventory.groundItems]\r\n                const invItem = items[invId];\r\n\r\n                if (invItem) {\r\n                    const serverResult = await takeInventoryItemToServer(invItem.key, invItem.amount);\r\n                    if (serverResult.result) {\r\n                        dispatch(swapInvAndGroundItems(invId, groundId));\r\n                    }\r\n                    dispatch(Notify(serverResult.text, serverResult.result ? NotifyVariant.SUCCESS : NotifyVariant.ERROR, 'center', 'bottom'));\r\n\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        dispatch(swapItems(dragIdx, dropIdx, dragType));\r\n    };\r\n\r\n    const [{ isOver, canDrop }, dropRef] = useDrop({\r\n        accept: ['inventoryItems', 'groundItems'],\r\n        canDrop: () => true,\r\n        drop: (item, monitor) => onDrop(item, monitor),\r\n        collect: (monitor) => ({\r\n            isOver: !!monitor.isOver(),\r\n            canDrop: !!monitor.canDrop(),\r\n        }),\r\n    });\r\n\r\n    const getImage = (isDragging: boolean) => {\r\n        const styles = { padding: `${decrementSize}rem`, opacity: isDragging ? 0 : 1 };\r\n\r\n        if (item) {\r\n            return (\r\n                <span>\r\n                    <img src={ getItemImage(item.key) } style={ styles } />\r\n                    <span className='inventory-cell_inner-amount' style={ { opacity: isDragging ? 0 : 1 } }>{ item?.amount }</span>\r\n                </span>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const cssInventoryCell = (isOver, canDrop): any => ({\r\n        height: `${imgSize}rem`,\r\n        width: `${imgSize}rem`,\r\n        border: isOver ? '1px solid gold' : '1px solid transparent',\r\n    });\r\n\r\n    return (\r\n        <div ref={ dropRef } className='inventory-cell' style={ cssInventoryCell(isOver, canDrop) }>\r\n\r\n            <div className=\"inventory-cell_inner\" ref={ dragRef }>\r\n                { getImage(isDragging) }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    InventoryCell,\r\n}","import React from \"react\";\r\nimport '../inventory.css';\r\nimport { State } from \"../../../reducers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { InventoryCell } from \"../InventoryCell\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport shortid from 'shortid';\r\nimport { selectInvItem } from \"../../../actions/inventoryActions\";\r\nimport { useClickAway } from \"@umijs/hooks\";\r\nimport { Animation } from 'rsuite';\r\nimport { getItemImage } from \"../../../helpers/getImages\";\r\nimport { ItemType } from \"../../../types\";\r\nconst { Fade } = Animation;\r\n\r\nfunction InventoryCells() {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state: State) => state || []);\r\n    const { inventoryItems } = state.inventory;\r\n    const selectInventoryItem = state.inventory.selectInventoryItem\r\n\r\n    const ref = useClickAway(() => {\r\n        dispatch(selectInvItem(null));\r\n    });\r\n\r\n    const onSelectItem = (item) => {\r\n        console.log(item);\r\n        dispatch(selectInvItem(item));\r\n    };\r\n\r\n    const getDescr = () => {\r\n        if (!selectInventoryItem) return <div></div>;\r\n        const { name, description, type } = selectInventoryItem.data;\r\n\r\n        const getDescrByType = () => {\r\n            switch (type) {\r\n                case ItemType.CLOTHES: {\r\n                    return (\r\n                        <div>Данные предмет типа CLOTHES.</div>\r\n                    );\r\n                }\r\n                case ItemType.ARMOR: {\r\n                    return (\r\n                        <div>Данные предмет типа ARMOR.</div>\r\n                    );\r\n                }\r\n                case ItemType.WEAPON: {\r\n                    return (\r\n                        <div>Данные предмет типа WEAPON.</div>\r\n                    );\r\n                }\r\n                case ItemType.COMMON: {\r\n                    return (\r\n                        <div>Данные предмет типа COMMON.</div>\r\n                    );\r\n                }\r\n                default: {\r\n                    return <div></div>\r\n                }\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"inventory-items__descr-title\">\r\n                    { name }\r\n                </div>\r\n                <div className=\"inventory-items__descr-image\">\r\n                    <img src={ getItemImage(selectInventoryItem.key) } style={{width: '3rem'}} draggable={false} />\r\n                </div>\r\n                <div className='inventory-items__descr-descr'>\r\n                    <div>\r\n                        { getDescrByType() }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className='inventory-items'>\r\n            <div className=\"inventory-items__descr\">\r\n                { getDescr() }\r\n            </div>\r\n\r\n            <div className=\"inventory-items__title\">\r\n                Инвентарь\r\n            </div>\r\n\r\n            <div className='inventory-cells'>\r\n                { inventoryItems.map((item, idx) => item\r\n                    ?\r\n                    <span key={ item.data.shortid } ref={ ref } onClick={ () => onSelectItem(item) }><InventoryCell itemsType='inventoryItems' item={ item } id={ idx } /></span>\r\n                    :\r\n                    <span key={ shortid.generate() }><InventoryCell itemsType='inventoryItems' item={ item } id={ idx } /></span>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    InventoryCells,\r\n};","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { State } from \"../../../reducers\";\r\nimport { InventoryCell } from \"../InventoryCell\";\r\nimport shortid from 'shortid';\r\n\r\nfunction GroundItems() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const { groundItems } = state.inventory;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ground-items__title\">\r\n                Содержимое\r\n            </div>\r\n            <div className='inventory-cells'>\r\n                { groundItems.map((item, idx) => item\r\n                    ?\r\n                    <span key={ item.data.shortid }><InventoryCell itemsType='groundItems' item={ item } id={ idx } /></span>\r\n                    :\r\n                    <span key={ shortid.generate() }><InventoryCell itemsType='groundItems' item={ item } id={ idx } /></span>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    GroundItems,\r\n}","import { DragLayer } from \"react-dnd\";\r\nimport React from \"react\";\r\n\r\nconst defaultStyle = (item, currentOffset): any => ({\r\n    left: currentOffset.x,\r\n    top: currentOffset.y,\r\n    position: 'fixed',\r\n    color: '#000',\r\n    height: item.imgSize,\r\n    weight: item.imgSize,\r\n});\r\n\r\nconst DragPreview = (props) => {\r\n    const { isDragging, currentOffset, item } = props;\r\n\r\n    console.log(props);\r\n    \r\n    return !isDragging || !currentOffset || !item\r\n    ?\r\n    null\r\n    :\r\n    <span style={defaultStyle(item, currentOffset)}>\r\n        <img src={ item.src } />\r\n        <span style={ {position: 'absolute', right: '-.1rem', bottom: '-.6rem', color: '#fff'} }>{item.amount}</span>\r\n    </span>\r\n};\r\n\r\nconst Preview = DragLayer((monitor) => {\r\n    return {\r\n        item: monitor.getItem(),\r\n        itemType: monitor.getItemType(),\r\n        currentOffset: monitor.getSourceClientOffset(),\r\n        isDragging: monitor.isDragging(),\r\n    }\r\n})(DragPreview);\r\n\r\nexport {\r\n    Preview,\r\n}","import React from \"react\";\r\nimport { useDrag, useDrop } from 'react-dnd'\r\nimport './inventory.css';\r\nimport { InventoryCells } from \"./InventoryCells\";\r\nimport { GroundItems } from \"./GroundItems\";\r\nimport { Preview } from \"./Preview\";\r\n\r\nfunction Inventory() {\r\n    return (\r\n        <div className=\"inventory-container\">\r\n            <div className='inventory'>\r\n                <div className=\"inventory-clothes\">\r\n                    <div className=\"inventory-cells\">\r\n                        <div className=\"inventory-cell\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <InventoryCells />\r\n                <Preview />\r\n\r\n                <div className=\"inventory-storage\">\r\n                    <GroundItems />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    Inventory,\r\n}","import React from \"react\";\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport './styles.css';\r\nimport { emitter } from \"../../helpers/emitter\";\r\nimport { NotifyComp } from \"./NotifyComp\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { DisplayUI } from \"../../reducers/UIReducer\";\r\nimport { Huds } from \"./Huds\";\r\nimport { push } from \"connected-react-router\";\r\nimport { AdminInterface } from \"../AdminInterface\";\r\nimport { Auth } from \"../StartMenu/Auth\";\r\nimport { Character } from \"../StartMenu/Character\";\r\nimport { StartMenu } from \"../StartMenu\";\r\nimport { Inventory } from \"../Inventory\";\r\n\r\nfunction RoutesComp() {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div style={{position: 'absolute', top: '50px', left: 0}}>\r\n      <div>\r\n        <ul>\r\n          <li><a href='#' onClick={ () => dispatch(push('/clear')) }>clear</a></li>\r\n          <li><a href='#' onClick={ () => dispatch(push('/UIItems')) }>Items UI</a></li>\r\n          <li><a href='#' onClick={ () => dispatch(push('/AdminInterface')) }>Admin Interface</a></li>\r\n          <li><a href='#' onClick={ () => dispatch(push('/auth')) }>Auth</a></li>\r\n          <li><a href='#' onClick={ () => dispatch(push('/character')) }>Character</a></li>\r\n          <li><a href='#' onClick={ () => dispatch(push('/StartMenu')) }>StartMenu</a></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Clear() {\r\n  return (<div></div>);\r\n}\r\n\r\nfunction App() {\r\n  const store = useSelector((store: any) => store || []);\r\n  const displayUI: DisplayUI = store.UI.displayUI;\r\n  const { huds } = displayUI;\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      { huds && <Huds />}\r\n      <NotifyComp />\r\n      <Switch>\r\n        <Route exact path='/clear' component={ Clear } />\r\n        <Route exact path='/Inventory' component={ Inventory } />\r\n        <Route exact path='/AdminInterface' component={ AdminInterface } />\r\n        <Route exact path='/auth' component={ Auth } />\r\n        <Route exact path='/character' component={ Character } />\r\n        <Route exact path='/StartMenu' component={ StartMenu } />\r\n      </Switch>\r\n      <Redirect to=\"/Inventory\" />\r\n      {/* <RoutesComp /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {\r\n  App,\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from 'react-redux';\r\nimport { store } from \"../../store/config\";\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { App } from \"../App\";\r\nimport { history } from '../../store/config';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nimport { DndProvider } from 'react-dnd';\r\nimport { DndContext } from 'react-dnd'\r\nimport MouseBackEnd from 'react-dnd-mouse-backend'\r\nimport HTMLBackend from 'react-dnd-html5-backend';\r\n\r\nfunction Root() {\r\n    return (\r\n        <Provider store={ store }>\r\n            <SnackbarProvider hideIconVariant={ false } maxSnack={ 5 } autoHideDuration={ 3000 }>\r\n                <ConnectedRouter history={ history }>\r\n                    <DndProvider backend={ MouseBackEnd }>\r\n                        <App />\r\n                    </DndProvider>\r\n                </ConnectedRouter>\r\n            </SnackbarProvider>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport {\r\n    Root,\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'typeface-roboto';\r\nimport 'rsuite/dist/styles/rsuite-dark.css';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Root } from './components/Root';\r\nimport { rpcRegister } from './helpers/playerEvents/rpcRegister';\r\n\r\nReactDOM.render(\r\n  <Root />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n// Регистрация всех RPC события для RAGEMP.\r\n// rpcRegister(); "],"sourceRoot":""}