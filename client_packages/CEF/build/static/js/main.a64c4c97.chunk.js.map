{"version":3,"sources":["assets/huds/eat/40.svg","assets/items/item_weapon_ak47.png","assets/items/item_armor.png","assets/items/item_ammo_shotgun.png","assets/items/item_clothes_mask_1.jpg","assets/items/item_clothes_mask_2.jpg","assets/items/item_clothes_mask_3.jpg","assets/items/item_clothes_mask_4.jpg","assets/items/item_clothes_mask_5.jpg","assets/huds/health/100.svg","assets/huds/health/80.svg","assets/huds/health/60.svg","assets/huds/health/40.svg","assets/huds/health/20.svg","assets/huds/health/empty.svg","assets/huds/eat/100.svg","assets/huds/eat/80.svg","assets/huds/eat/60.svg","assets/huds/eat/empty.svg","assets/huds/temperature/100.svg","assets/huds/temperature/80.svg","assets/huds/temperature/60.svg","assets/huds/temperature/40.svg","assets/huds/temperature/15.svg","assets/huds/temperature/empty.svg","assets/huds/dehydration/100.svg","assets/huds/dehydration/70.svg","assets/huds/dehydration/40.svg","assets/huds/dehydration/10.svg","assets/huds/dehydration/empty.svg","serviceWorker.ts","actions/notificationActions.ts","actions/inventoryActions.ts","actions/hudsDataActions.ts","actions/lootCreateDataActions.ts","reducers/UIReducer.ts","actions/displayUIActions.ts","reducers/clothesReducer.ts","actions/clothesActions.ts","actions/characterActions.ts","reducers/characterReducer.ts","actions/authActions.ts","reducers/authReducer.ts","reducers/index.ts","helpers/emitter.ts","store/config.ts","helpers/playerEvents/index.ts","types.ts","helpers/getImages.ts","helpers/playerEvents/rpcCall.ts","components/UserInterface/Inventory/SelectedInventoryItem/TabSplitComponent/index.tsx","components/UserInterface/Inventory/SelectedInventoryItem/index.tsx","components/UserInterface/Inventory/SelectedGroundItem/index.tsx","components/UserInterface/Inventory/InventoryCell/index.tsx","components/UserInterface/Inventory/InventoryCells/index.tsx","components/UserInterface/Inventory/index.tsx","components/UserInterface/ItemsGround/ItemsGroundCells/index.tsx","components/UserInterface/ItemsGround/index.tsx","components/UserInterface/index.tsx","components/App/NotifyComp/index.tsx","components/App/Huds/HudsMenuData/index.tsx","components/App/Huds/HealthHud.tsx","components/App/Huds/EatHud.tsx","components/App/Huds/TemperatureHud.tsx","components/App/Huds/DehydrationHud.tsx","components/App/Huds/CircularLine.tsx","components/App/Huds/CircularHudWithImage.tsx","components/App/Huds/index.tsx","components/AdminInterface/LootCreate/index.tsx","components/AdminInterface/VehicleCreate/index.tsx","components/AdminInterface/index.tsx","components/StartMenu/Auth/index.tsx","components/StartMenu/Character/CharacterSlider/index.tsx","components/StartMenu/Character/CharacterFace/index.tsx","components/shared/AnySelect/index.tsx","components/StartMenu/Character/CharacterHeadParent/index.tsx","components/StartMenu/Character/CharacterHead/index.tsx","components/StartMenu/Character/CharacterHair/index.tsx","components/StartMenu/Character/CharacterHeading/index.tsx","helpers/helps.ts","components/StartMenu/Character/CharacterHeadOverlay/index.tsx","components/StartMenu/Character/CharacterEyes/index.tsx","components/StartMenu/Character/index.tsx","components/StartMenu/index.tsx","components/App/index.tsx","components/Root/index.tsx","index.tsx","helpers/playerEvents/rpcRegister.ts"],"names":["module","exports","Boolean","window","location","hostname","match","NotifyVariant","NotifyVertical","NotifyHorizontal","deleteInventoryItemById","id","dispatch","getState","inventoryItems","UI","inventory","items","invItems","splice","setInventoryItems","type","payload","splitInventoryItemByIndex","itemId","splitCount","Number","isInteger","findItem","JSON","parse","stringify","newItem","item","amount","data","shortid","generate","setGroundItems","HudType","enqueueSnackbar","notification","key","options","Date","getTime","Math","random","setHudsData","value","PropType","setLootCreateData","setPropLootCreateData","lootCreate","loot","initialState","objectId","objectHash","position","rotation","hudsData","health","armor","hunger","dehydration","temperature","isBleeding","displayUI","huds","notifications","slots","ground","UIReducer","state","action","SET_TEMPERATURE_HUDS","SET_HUNGER_HUDS","SET_DEHYDRATION_HUDS","SET_ARMOR_HUDS","SET_HEALTH_HUDS","map","dismissAll","dismissed","filter","snackbar","isShow","ClothesReducer","setEyesColor","setHeadOverlayProp","overlayId","index","setHairColor","setGender","gender","setHairId","setParentIndex","parent","defaultHead","father","mother","defaultFace","feature","name","defaultHeadOverlay","defaultState","headOverlay","face","head","similarity","skin","hair","hairColorId","eyes","characterReducer","characterState","faceIndex","updateAuthProp","prop","subProp","register","login","val","isValid","isTouch","regular","password","email","confirmPassword","authReducer","newState","emitter","EventEmitter","history","createMemoryHistory","initialEntries","pathname","initialIndex","store","createStore","combineReducers","auth","character","clothes","router","connectRouter","compose","applyMiddleware","routerMiddleware","thunk","logger","console","log","on","push","msg","variant","origin","message","anchorOrigin","vertical","horizontal","setDisplayUI","weight","ItemType","ItemKey","images","ITEM_WEAPON_AK47","img_item_weapon_ak47","ITEM_ARMOR","img_item_armor","ITEM_AMMO_SHOTGUN","img_item_ammo_shotgun","ITEM_CLOTHES_MASK_1","item_clothes_mask_1","ITEM_CLOTHES_MASK_2","item_clothes_mask_2","ITEM_CLOTHES_MASK_3","item_clothes_mask_3","ITEM_CLOTHES_MASK_4","item_clothes_mask_4","ITEM_CLOTHES_MASK_5","item_clothes_mask_5","takeInventoryItemToServer","serverId","a","callServer","dropInventoryItemToServer","itemKey","usesInventoryItemByServerId","callClient","setLootCreateRotation","pos","hash","serverLogin","h","setCharacterGender","resetCharacter","setCharacterHair","dId","coord","n","setCharacterHairColor","setCharacterHeadOverlay","setCharacterEyes","updateCharacterCameraPosition","serverCheckLogin","serverCharacterReady","TabSplitComponent","props","isInventory","UIState","useSelector","useDispatch","groundItems","maxSplit","useState","inputValue","setInputValue","checkRangeValue","isNaN","onIconBtnClick","event","idx","findIndex","i","onPopClose","serverResult","result","groundItem","inventoryItem","unshift","text","DEFAULT","ERROR","className","Slider","defaultValue","valueLabelDisplay","step","ceil","min","max","onChange","disabled","marks","parseInt","target","onClick","IconButton","color","aria-label","component","classes","root","SelectedInventoryItem","anchorEl","useToggle","toggle","Tab1","onDropItem","onUsesItem","isDelete","Tab2","Tab3","maxStackCount","description","Popover","paper","open","onClose","transformOrigin","SelectedGroundItem","InventoryCell","currentInvItem","nextItem","itemImage","currentItem","setCurrentItem","setAnchorEl","isStack","currentInvItemIdx","onMouseDown","button","floor","onStackClick","stopPropagation","currentItemIndex","nextItemIndex","sum","stackItems","draggableId","dragProvided","snapshot","e","currentTarget","onSelectItem","ref","innerRef","draggableProps","dragHandleProps","src","draggable","toFixed","InventoryCells","droppableId","provided","style","isDraggingOver","overflowY","overflowX","height","border","droppableProps","placeholder","Inventory","inventoryWeight","reduce","acc","inventoryFixWeight","ItemsGroundCells","ItemsGround","move","source","destination","droppableSource","droppableDestination","sourceClone","Array","from","destClone","removed","reorder","list","startIndex","endIndex","ItemsUI","id2List","droppable","droppable1","getList","onDragEnd","onDragStart","displayed","NotifyComp","useSnackbar","closeSnackbar","React","useEffect","forEach","includes","reason","myKey","onExited","removeSnackbar","HudsMenuData","blood","HealthHud","isLowHP","pulseAnimation","keyframes","pulse","HealthPulseDiv","styled","div","healthImage","image_blood_100","image_blood_80","image_blood_60","image_blood_40","image_blood_20","image_blood_empty","EatHud","imgIcon","img_icon_100","img_icon_80","img_icon_60","img_icon_40","img_empty","TemperatureHud","img_icon_20","img_icon_empty","DehydrationHud","img_icon_70","img_icon_10","CircularLine","maxValue","CircularProgress","size","CircularHudWithImage","styles","width","top","left","transform","hud","Huds","hudStyles","bottom","right","healthStyles","eatStyles","dehydrationStyles","temperatureStyles","textShadow","SliderType","LootCreate","createObject","p","r","onSliderChange","ROTATION","FormControl","InputLabel","Select","labelId","OBJECT_HASH","setLootCreateHash","MenuItem","Button","v","VehicleCreate","AdminInterface","href","Bounce","Animation","btnRegValidStyles","opacity","inputStyles","isError","Register","registerState","isLoginValid","isLoginTouch","isEmailValid","isEmailTouch","isPassValid","isPassTouch","isConfirmPassValid","isConfirmPassTouch","clickRegisterBtn","SUCCESS","test","setRegister","checkData","onBlur","isDisabled","in","Login","setState","length","Auth","toggleState","setToggle","CharacterSlider","ReactSlider","thumbClassName","trackClassName","renderThumb","CharacterFace","setCharacterFaceFeature","setFaceFeature","AnySelect","onLeftClick","onRightClick","topText","useHover","isHoverLeft","hoverLeftRef","isHoverRight","hoverRightRef","cssSelectHeadArrowLeft","fontSize","verticalAlign","cssSelectHeadArrowRight","display","justifyContent","alignItems","textAlign","margin","CharacterHeadParent","parents","sendData","parentsObj","parentIndex","c","fatherObj","motherObj","CharacterHead","setCharacterHeadProp","setHeadProp","hairList","male","female","CharacterHair","hairId","CharacterHeading","onSliderCameraChange","setCharacterCamera","cssSlider","paddingBottom","setCharacterHeading","range","CharacterHeadOverlay","getIndex","onLeft","onRight","CharacterEyes","CharacterTitle","title","textTransform","Character","onGenderClick","onClickReset","onReady","Drawer","backdrop","placement","show","Header","Body","appearance","active","Footer","StartMenu","Clear","App","exact","path","to","Root","hideIconVariant","maxSnack","autoHideDuration","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","emit","jsonData"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,kSCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,ICdMC,EAQPC,EAKAC,E,uDCRCC,EAA0B,SAACC,GAC7B,OAAO,SAACC,EAAUC,GACd,IAAY,IAARF,EAAJ,CAD2B,IAOZG,EAFAD,IAAPE,GACAC,UACAC,MACFC,EAAQ,YAAOJ,GAErBI,EAASC,OAAOR,EAAI,GACpBC,EACIQ,EAAkBF,OA+DxBE,EAAoB,SAACH,GACvB,OAAO,SAACL,EAAUC,GACdD,EAAS,CACLS,KArFuB,sBAsFvBC,QAASL,MAMfM,EAA4B,SAACC,EAAgBC,GAC/C,OAAO,SAACb,EAAUC,GACd,GAAKa,OAAOC,UAAUF,MAIlBA,GAAc,GAAlB,CAL2B,IAWnBR,EAFOJ,IAAPE,GACAC,UACAC,MACFC,EAAQ,YAAOD,GACfW,EAAWC,KAAKC,MAAMD,KAAKE,UAAUb,EAASM,KAC9CQ,EAAUH,KAAKC,MAAMD,KAAKE,UAAUH,IACpCK,EAAOf,EAASM,GAEtB,KAAIS,EAAKC,QAAUT,GAAnB,CAIA,IAAMS,EAASD,EAAKC,OAAST,EAC7BG,EAASM,OAASA,EAClBF,EAAQG,KAAKC,QAAb,mBAAmCA,IAAQC,YAC3CL,EAAQE,OAAST,EAEjBP,EAASC,OAAOK,EAAQ,GACxBN,EAASC,OAAOK,EAAQ,EAAGI,EAAUI,GACrCpB,EAASQ,EAAkBF,QAI7BoB,EAAiB,SAACrB,GACpB,OAAO,SAACL,EAAUC,GACdD,EAAS,CACLS,KA/HoB,mBAgIpBC,QAASL,O,SDhITV,K,kBAAAA,E,kBAAAA,E,cAAAA,E,kBAAAA,E,aAAAA,M,cAQPC,K,UAAAA,E,iBAAAA,M,cAKAC,K,gBAAAA,E,YAAAA,E,eAAAA,M,KAWL,IE5BY8B,EF4BNC,EAAkB,SAACC,GACrB,IAAMC,EAAMD,EAAaE,SAAWF,EAAaE,QAAQD,IAEzD,MAAO,CACHrB,KAhCwB,mBAiCxBoB,aAAa,eACNA,EADK,CAERC,IAAKA,IAAO,IAAIE,MAAOC,UAAYC,KAAKC,aE3BpD,SAASC,EAAY3B,EAAe4B,GAChC,OAAO,SAACrC,EAAUC,GAEVoC,EAAQ,MACRA,EAAQ,KAERA,EAAQ,IACRA,EAAQ,GAGZrC,EAAS,CACLS,KAAMA,EACNC,QAAS2B,M,SApBTV,K,kCAAAA,E,gCAAAA,E,kCAAAA,E,4CAAAA,E,6CAAAA,M,KCEL,IAWKW,EATZ,SAASC,EAAkBhB,GACvB,OAAO,SAACvB,EAAUC,GACdD,EAAS,CACLS,KALwB,uBAMxBC,QAASa,KAWrB,SAASiB,EAAsB/B,EAAgB4B,GAC3C,OAAO,SAACrC,EAAUC,GAAc,IAEpBwC,EADOxC,IAAPE,GACAsC,WAEFC,EAAI,eAAOD,GACjBC,EAAKjC,GAAQ4B,EAEbrC,EAAS,CACLS,KA1BwB,uBA2BxBC,QAASgC,M,SAhBTJ,K,yBAAAA,E,oBAAAA,E,qBAAAA,M,KC6BZ,IA8DMK,EAAwB,CAC1BF,WAAY,CACRG,SAAU,EACVC,WAAY,mBACZC,SAAU,CAAC,EAAG,EAAG,GACjBC,SAAU,CAAC,EAAG,EAAG,IAErBC,SAAU,CACNC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,YAAa,IACbC,YAAa,IACbC,YAAY,GAEhBC,UAAW,CACPC,MAAM,GAEVC,cAAe,GACfrD,UAAW,CACPsD,MAAO,GACPrD,MAAO,IAEXsD,OAAQ,CACJtD,MAtFsB,KA0F9B,SAASuD,IAAuD,IAA7CC,EAA4C,uDAA3BlB,EAAcmB,EAAa,uCAC3D,OAAQA,EAAOrD,MACX,IDpI4B,uBCqIxB,OAAO,eACAoD,EADP,CAEIpB,WAAW,eAAMqB,EAAOpD,WAGhC,KAAKiB,EAAQoC,qBACT,OAAO,eACAF,EADP,CAEIb,SAAS,eACFa,EAAMb,SADL,CAEJK,YAAaS,EAAOpD,YAIhC,KAAKiB,EAAQqC,gBACT,OAAO,eACAH,EADP,CAEIb,SAAS,eACFa,EAAMb,SADL,CAEJG,OAAQW,EAAOpD,YAI3B,KAAKiB,EAAQsC,qBACT,OAAO,eACAJ,EADP,CAEIb,SAAS,eACFa,EAAMb,SADL,CAEJI,YAAaU,EAAOpD,YAIhC,KAAKiB,EAAQuC,eACT,OAAO,eACAL,EADP,CAEIb,SAAS,eACFa,EAAMb,SADL,CAEJE,MAAOY,EAAOpD,YAI1B,KAAKiB,EAAQwC,gBACT,OAAO,eACAN,EADP,CAEIb,SAAS,eACFa,EAAMb,SADL,CAEJC,OAAQa,EAAOpD,YAI3B,ICvLsB,iBDwLlB,OAAO,eACAmD,EADP,CAEIN,UAAWO,EAAOpD,UAG1B,IJ/LwB,mBIgMpB,OAAO,eACAmD,EADP,CAEIJ,cAAc,GAAD,mBACNI,EAAMJ,eADA,cAGL3B,IAAKgC,EAAOhC,KACTgC,EAAOjC,kBAK1B,IJ1MsB,iBI2MlB,OAAO,eACAgC,EADP,CAEIJ,cAAeI,EAAMJ,cAAcW,KAAI,SAAAvC,GAAY,OAC9CiC,EAAOO,YAAcxC,EAAaC,MAAQgC,EAAOhC,IAAlD,eACWD,EADX,CACyByC,WAAW,IADpC,eAEWzC,QAIvB,IJnNuB,kBIoNnB,OAAO,eACAgC,EADP,CAEIJ,cAAeI,EAAMJ,cAAcc,QAC/B,SAAA1C,GAAY,OAAIA,EAAaC,MAAQgC,EAAOhC,SAIxD,IHvNoB,eGwNhB,OAAO,eAAK+B,EAAZ,CAAmBW,SAAS,eAAKV,EAAOpD,WAE5C,IH7N2B,sBG+NvB,OADAmD,EAAMzD,UAAUC,MAAQyD,EAAOpD,QACxB,eAAKmD,GAEhB,IH/N2B,sBGiOvB,OADAA,EAAMzD,UAAUsD,MAAQI,EAAOpD,QACxB,eAAKmD,GAEhB,IHpOwB,mBGqOpB,OAAO,eAAKA,EAAZ,CAAmBF,OAAQ,CAAEtD,MAAOyD,EAAOpD,WAE/C,QACI,OAAOmD,GEtOnB,IAAMlB,EAA6B,CAC/B8B,QAAQ,GAGZ,SAASC,IAAiE,IAAlDb,EAAiD,uDAA3BlB,EAAcmB,EAAa,uCACrE,OAAQA,EAAOrD,MACX,ICZgB,UDaZ,OAAO,eAAKoD,EAAZ,CAAmBY,OAAQX,EAAOpD,UAEtC,QACI,OAAO,eAAKmD,I,oBENxB,SAASc,EAAa5E,GAClB,OAAO,SAACC,EAAUC,GACdD,EAAS,CACLS,KALkB,iBAMlBC,QAASX,KAKrB,SAAS6E,EAAmBC,EAAmBC,GAC3C,OAAO,SAAC9E,EAAUC,GACdD,EAAS,CACLS,KAfyB,wBAgBzBqE,QACAD,eAKZ,SAASE,EAAahF,GAClB,OAAO,SAACC,EAAUC,GACdD,EAAS,CACLS,KA1BkB,iBA2BlBC,QAASX,KAKrB,SAASiF,EAAUC,GACf,OAAO,SAACjF,EAAUC,GACdD,EAAS,CACLS,KApCc,aAqCdC,QAASuE,KAKrB,SAASC,EAAUnF,GACf,OAAO,SAACC,EAAUC,GACdD,EAAS,CACLS,KA9Ce,cA+CfC,QAASX,KAuBrB,SAASoF,EAAeC,EAAgBN,GACpC,OAAO,SAAC9E,EAAUC,GACdD,EAAS,CACLS,KA3EoB,mBA4EpB2E,OAAQA,EACRN,MAAOA,KChCnB,IAAMO,EAAwB,CAC1BC,OAAQ,CAAER,MAAO,GACjBS,OAAQ,CAAET,MAAO,IAGfU,EAA0B,CAC5B,CAAEV,MAAO,EAAGW,SAAU,EAAKC,KAAM,iEACjC,CAAEZ,MAAO,EAAGW,SAAU,EAAKC,KAAM,iEACjC,CAAEZ,MAAO,EAAGW,SAAU,EAAKC,KAAM,sGACjC,CAAEZ,MAAO,EAAGW,SAAU,EAAKC,KAAM,sGACjC,CAAEZ,MAAO,EAAGW,SAAU,EAAKC,KAAM,4GACjC,CAAEZ,MAAO,EAAGW,SAAU,EAAKC,KAAM,+FACjC,CAAEZ,MAAO,EAAGW,SAAU,EAAKC,KAAM,6EACjC,CAAEZ,MAAO,EAAGW,SAAU,EAAKC,KAAM,mFACjC,CAAEZ,MAAO,EAAGW,SAAU,EAAKC,KAAM,iEACjC,CAAEZ,MAAO,EAAGW,SAAU,EAAKC,KAAM,iEACjC,CAAEZ,MAAO,GAAIW,SAAU,EAAKC,KAAM,iEAClC,CAAEZ,MAAO,GAAIW,SAAU,EAAKC,KAAM,iEAClC,CAAEZ,MAAO,GAAIW,SAAU,EAAKC,KAAM,uEAClC,CAAEZ,MAAO,GAAIW,SAAU,EAAKC,KAAM,mFAClC,CAAEZ,MAAO,GAAIW,SAAU,EAAKC,KAAM,6EAClC,CAAEZ,MAAO,GAAIW,SAAU,EAAKC,KAAM,qGAClC,CAAEZ,MAAO,GAAIW,SAAU,EAAKC,KAAM,2GAClC,CAAEZ,MAAO,GAAIW,SAAU,EAAKC,KAAM,qGAClC,CAAEZ,MAAO,GAAIW,SAAU,EAAKC,KAAM,uHAClC,CAAEZ,MAAO,GAAIW,SAAU,EAAKC,KAAM,4DAGhCC,EAAqB,CACvB,CAAEd,UAAW,EAAGC,MAAO,EAAGY,KAAM,iHAChC,CAAEb,UAAW,EAAGC,MAAO,EAAGY,KAAM,8EAChC,CAAEb,UAAW,EAAGC,MAAO,EAAGY,KAAM,kCAChC,CAAEb,UAAW,EAAGC,MAAO,EAAGY,KAAM,oDAChC,CAAEb,UAAW,EAAGC,MAAO,EAAGY,KAAM,4BAChC,CAAEb,UAAW,EAAGC,MAAO,EAAGY,KAAM,8CAChC,CAAEb,UAAW,EAAGC,MAAO,EAAGY,KAAM,qDAChC,CAAEb,UAAW,EAAGC,MAAO,EAAGY,KAAM,kCAChC,CAAEb,UAAW,EAAGC,MAAO,EAAGY,KAAM,4BAChC,CAAEb,UAAW,EAAGC,MAAO,EAAGY,KAAM,+FAChC,CAAEb,UAAW,GAAIC,MAAO,EAAGY,KAAM,oFACjC,CAAEb,UAAW,GAAIC,MAAO,EAAGY,KAAM,wEACjC,CAAEb,UAAW,GAAIC,MAAO,EAAGY,KAAM,2HAG/B/C,EAA+B,CACjCiD,aAAc,CACVC,YAAa5E,KAAKC,MAAMD,KAAKE,UAAUwE,IACvCG,KAAM7E,KAAKC,MAAMD,KAAKE,UAAUqE,IAChCO,KAAM9E,KAAKC,MAAMD,KAAKE,UAAUkE,IAChCW,WAAY,GACZC,KAAM,GACNC,KAAM,EACNjB,OAAQ,OACRkB,YAAa,EACbC,KAAM,GAEVP,YAAaF,EACbI,KAAK,eAAKV,GACVS,KAAK,GAAD,OAAMN,GACVQ,WAAY,GACZC,KAAM,GACNC,KAAM,EACNjB,OAAQ,OACRkB,YAAa,EACbC,KAAM,GAGV,SAASC,IAAqD,IAApCxC,EAAmC,uDAA3BlB,EAAcmB,EAAa,uCACzD,OAAQA,EAAOrD,MAEX,ID7GsB,iBCgHlB,OAFAoD,EAAMuC,KAAOtC,EAAOpD,QAEb,eACAmD,GAIX,IDtH6B,wBCyHzB,OAFAA,EAAMgC,YAAY/B,EAAOe,WAAWC,MAAQhB,EAAOgB,MAE5C,eACAjB,GAIX,ID/HsB,iBCgIlB,OAAO,eACAA,EADP,CAEIsC,YAAarC,EAAOpD,UAI5B,IDvIkB,aCyId,OADAmD,EAAMoB,OAASnB,EAAOpD,QACf,eACAmD,GAIX,ID/ImB,cCiJf,OADAA,EAAMqC,KAAOpC,EAAOpD,QACb,eACAmD,GAIX,IDvJqB,gBCwJjB,OAAO,eACAA,EADP,eAEKC,EAAO4B,KAAO5B,EAAOzB,QAI9B,ID/JwB,mBCkKpB,OAFAwB,EAAMkC,KAAKjC,EAAOsB,QAAQN,MAAQhB,EAAOgB,MAElC,eACAjB,GAIX,IDxKwB,mBCyKpB,IAAMyC,EAAc,eAAOzC,GACrBiC,EAAI,eAAOQ,EAAeR,MAC1BS,EAAYzC,EAAOyC,UACnBd,EAAU3B,EAAO2B,QAGvB,OAFAK,EAAKS,GAAWd,QAAUA,EAEnB,eACAa,GAGX,IDpLmC,8BCqL/B,OAAO,eACAzC,EADP,GAEO5C,KAAKC,MAAMD,KAAKE,UAAU0C,EAAM+B,gBAI3C,QACI,OAAO/B,GCzLnB,SAAS2C,EAAeC,EAAcC,EAAiBrE,GACnD,OAAO,SAACrC,EAAUC,GACdD,EAAS,CACLS,KANwB,uBAOxBgG,OACAC,UACArE,WCqBZ,IAAMM,EAA0B,CAC5BgE,SAAU,CACNC,MAAO,CACHC,IAAK,GACLC,SAAS,EACTC,SAAS,EACTC,QAAS,yBAEbC,SAAU,CACNJ,IAAK,GACLC,SAAS,EACTC,SAAS,EACTC,QAAS,+BAEbE,MAAO,CACHL,IAAI,GACJC,SAAS,EACTC,SAAS,EACTC,QAAS,cAEbG,gBAAiB,CACbN,IAAK,GACLC,SAAS,EACTC,SAAS,KAKrB,SAASK,IAAgD,IAApCvD,EAAmC,uDAA3BlB,EAAcmB,EAAa,uCACpD,OAAQA,EAAOrD,MACX,ID5D4B,uBC+DxB,OAFAoD,EAAM8C,SAAS7C,EAAO2C,MAAM3C,EAAO4C,SAAW5C,EAAOzB,MAE9C,eACAwB,GAIX,IDnEoB,eCoEhB,IAAMwD,EAAQ,eAAOxD,GAGrB,OAFAwD,EAASV,SAAW7C,EAAOpD,QAEpB,eACA2G,GAIX,QACI,OAAO,eACAxD,ICjEnB,I,qDCZMyD,EAAe,I,OAAIC,GCMzB,IFM2BC,GGJLxH,GDFhBwH,GAAUC,YAAoB,CAChCC,eAAgB,CAAE,OAAQ,OAAQ,CAAEC,SAAU,WAC9CC,aAAc,IAGZC,GAAQC,aFCaN,GEALA,GFAiBO,YAAgB,CACnDC,KAAMZ,EACNa,UAAW5B,EACXlG,GAAIyD,EACJsE,QAASxD,EACTyD,OAAQC,YAAcZ,OEJtBa,YACIC,YACIC,YAAiBf,IACjBgB,IACAC,OAKZC,QAAQC,IAAI,QAASd,ICdC7H,GDgBT6H,GAAM7H,SAAU6H,GAAM5H,SCf/BqH,EAAQsB,GAAG,aAAa,WACpB5I,GAAS6I,YAAK,cAGlBvB,EAAQsB,GAAG,eAAe,WACtB5I,GAAS6I,YAAK,gBAGlBvB,EAAQsB,GAAG,oBAAoB,WAC3B5I,GAAS6I,YAAK,yBAGlBvB,EAAQsB,GAAG,uBAAuB,SAACvI,GAC/BL,GAAS0B,EAAerB,OAG5BiH,EAAQsB,GAAG,aAAa,SAACE,EAAaC,EAAiBC,GACnDhJ,GAAS4B,EAAgB,CACrBqH,QAASH,EACT/G,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjC4G,QAASA,EACTG,aAAc,CACVC,SAAUH,EAAOG,SACjBC,WAAYJ,EAAOI,mBAMnC9B,EAAQsB,GAAG,sBAAsB,SAACrF,GAC9BvD,GVtCR,SAAsBuD,GAClB,OAAO,SAACvD,EAAUC,GACdD,EAAS,CACLS,KALkB,iBAMlBC,QAAS6C,KUkCJ8F,CAAa9F,OAG1B+D,EAAQsB,GAAG,aAAa,SAAClD,GACrB1F,GAAS6I,YAAK,IAAD,OAAKnD,QAGtB4B,EAAQsB,GAAG,uBAAuB,SAAC3F,GAC/BjD,GACIoC,EAAYT,EAAQwC,gBAAiBlB,OAI7CqE,EAAQsB,GAAG,sBAAsB,SAAC1F,GAC9BlD,GACIoC,EAAYT,EAAQuC,eAAgBhB,OAI5CoE,EAAQsB,GAAG,uBAAuB,SAACzF,GAC/BnD,GACIoC,EAAYT,EAAQqC,gBAAiBb,OAI7CmE,EAAQsB,GAAG,4BAA4B,SAACzF,GACpCnD,GACIoC,EAAYT,EAAQsC,qBAAsBd,OAIlDmE,EAAQsB,GAAG,4BAA4B,SAACU,GdGlB,IAAC5F,EcFnB1D,IdEmB0D,EcDG4F,EdEnB,SAACtJ,EAAUC,GACdD,EAAS,CACLS,KA1EuB,sBA2EvBC,QAASgD,U,IetET6F,GAOAC,G,+PAPAD,K,gBAAAA,E,cAAAA,E,gBAAAA,E,mBAAAA,Q,cAOAC,K,oCAAAA,E,wBAAAA,E,sCAAAA,E,0CAAAA,E,0CAAAA,E,0CAAAA,E,0CAAAA,E,2CAAAA,Q,KCPZ,IAAMC,IAAM,qBACPD,GAAQE,iBAAmBC,MADpB,eAEPH,GAAQI,WAAaC,MAFd,eAGPL,GAAQM,kBAAoBC,MAHrB,eAIPP,GAAQQ,oBAAsBC,MAJvB,eAKPT,GAAQU,oBAAsBC,MALvB,eAMPX,GAAQY,oBAAsBC,MANvB,eAOPb,GAAQc,oBAAsBC,MAPvB,eAQPf,GAAQgB,oBAAsBC,MARvB,I,mECQGC,G,qFAAf,WAAyCC,EAAkBrJ,GAA3D,UAAAsJ,EAAA,+EACWC,sBAAW,6BAA8B5J,KAAKE,UAAU,CAAEwJ,WAAUrJ,aAD/E,4C,+BAKewJ,G,qFAAf,WAAyCC,EAAiBzJ,GAA1D,UAAAsJ,EAAA,+EACWC,sBAAW,6BAA8B5J,KAAKE,UAAU,CAAC4J,UAASzJ,aAD7E,4C,+BAKe0J,G,mFAAf,WAA2CL,GAA3C,UAAAC,EAAA,+EACWC,sBAAW,8BAA+BF,IADrD,4C,+BAMelI,G,mFAAf,WAA0BI,GAA1B,UAAA+H,EAAA,+EACWK,sBAAW,yBAA0BpI,IADhD,4C,+BAUeqI,G,mFAAf,WAAqCC,GAArC,UAAAP,EAAA,+EACWK,sBAAW,kCAAmCE,IADzD,4C,sEAIA,WAAiCC,GAAjC,UAAAR,EAAA,+EACWK,sBAAW,8BAA+BG,IADrD,4C,+BAWeC,G,qFAAf,WAA2BzE,EAAeK,GAA1C,UAAA2D,EAAA,+EACWC,sBAAW,eAAgB,CAACjE,QAAOK,cAD9C,4C,sEAMA,WAAmCqE,GAAnC,UAAAV,EAAA,+EACWK,sBAAW,+BAAgCK,IADtD,4C,sEAKA,WAAuCxG,EAAeW,GAAtD,UAAAmF,EAAA,+EACWK,sBAAW,4BAA6B,CAACnG,QAAOW,aAD3D,4C,+BAKe8F,G,mFAAf,WAAkCtG,GAAlC,UAAA2F,EAAA,+EACWK,sBAAW,8BAA+BhG,IADrD,4C,sEAIA,WAAoC1D,GAApC,UAAAqJ,EAAA,+EACWK,sBAAW,iCAAkC1J,IADxD,4C,+BAIeiK,K,gFAAf,uBAAAZ,EAAA,+EACWK,sBAAW,2BADtB,4C,+BAIeQ,G,mFAAf,WAAgCC,GAAhC,UAAAd,EAAA,+EACWK,sBAAW,4BAA6BS,IADnD,4C,sEAIA,WAAkCC,EAAwBC,GAA1D,UAAAhB,EAAA,+EACWK,sBAAW,kCAAmC,CAACU,QAAOC,OADjE,4C,+BAQeC,G,mFAAf,WAAqC9L,GAArC,UAAA6K,EAAA,+EACWK,sBAAW,kCAAmClL,IADzD,4C,+BAIe+L,G,qFAAf,WAAuCjH,EAAmBC,GAA1D,UAAA8F,EAAA,+EACWK,sBAAW,+BAAgC,CAACpG,YAAWC,WADlE,4C,+BAIeiH,G,mFAAf,WAAgClF,GAAhC,UAAA+D,EAAA,+EACWK,sBAAW,4BAA6BpE,IADnD,4C,+BAIemF,K,gFAAf,uBAAApB,EAAA,+EACWK,sBAAW,qCADtB,4C,+BAIegB,G,mFAAf,WAAgCrF,GAAhC,UAAAgE,EAAA,+EACWC,sBAAW,qBAAsBjE,IAD5C,4C,+BAKesF,G,mFAAf,WAAoC3K,GAApC,UAAAqJ,EAAA,+EACWC,sBAAW,yBAA0BtJ,IADhD,4C,sBCnGA,SAAS4K,GAAkBC,GAAe,IAC9B/K,EAAsB+K,EAAtB/K,KAAMgL,EAAgBD,EAAhBC,YACRC,EAAUC,aAAY,SAAC1I,GACzB,OAAOA,EAAM1D,IAAM,MAEjBH,EAAWwM,cAETpM,EAAsBkM,EAAtBlM,UAAWuD,EAAW2I,EAAX3I,OACJzD,EAAmBE,EAA1BC,MACOoM,EAAgB9I,EAAvBtD,MACFiB,EAASD,EAAKC,OACdoL,EAAWpL,EAAS,EAXW,EAaDqL,mBAAcD,GAbb,oBAa9BE,EAb8B,KAalBC,EAbkB,KAe/BC,EAAkB,SAACzK,GAChBvB,OAAOC,UAAUsB,KAAU0K,MAAM1K,IAClCwK,EAAc,GAGdxK,EAAQqK,GACRG,EAAcH,GAGdrK,EAAQqK,GACRG,EAAcxK,GAGdA,EAAQ,GACRwK,EAAc,IAsBhBG,EAAc,yCAAG,WAAOC,GAAP,0BAAArC,EAAA,0DAEfyB,EAFe,gBAGTa,EAAMhN,EAAeiN,WAAU,SAACC,GAAD,OAAOA,IAAM/L,KAClDqH,QAAQC,IAAI,qBAAsBuE,IAErB,IAATA,GACAlN,EACIW,EAA0BuM,EAAKN,IAIvCR,EAAMiB,aAZS,0BAcfjB,EAAMiB,cAGO,KADPH,EAAMT,EAAYU,WAAU,SAACC,GAAD,OAAOA,IAAM/L,MAhBhC,sBAkBPuL,GAAc,GAlBP,wBAmBPR,EAAMiB,aAnBC,4CAwBgB3C,GAA0BrJ,EAAKE,KAAKoJ,SAAUiC,GAxB9D,SAwBLU,EAxBK,QAyBMC,QACb7E,QAAQC,IAAI,wHAA0BtH,GAEhCmM,EAAavM,KAAKC,MAAMD,KAAKE,UAAUsL,EAAYS,KACnDO,EAAgBxM,KAAKC,MAAMD,KAAKE,UAAUqM,KAE1ClM,EAASkM,EAAWlM,OAASsL,GACtB,IACTH,EAAYS,GAAK5L,OAASA,EAE1BmM,EAAcnM,OAASsL,EACvBa,EAAclM,KAAKC,QAAnB,UA/FK,mBA+FL,OAAuDA,IAAQC,YAC/DvB,EAAewN,QAAQD,IAGvBnM,GAAU,IACVoH,QAAQC,IAAI,eACZ8D,EAAYlM,OAAO2M,EAAK,GACxBO,EAAcnM,OAASkM,EAAWlM,OAClCpB,EAAewN,QAAQD,IAG3BzN,EACIQ,EAAkBS,KAAKC,MAAMD,KAAKE,UAAUjB,MAEhDF,EACI0B,EAAe+K,IAEnBzM,EACI4B,EAAgB,CACZqH,QAASqE,EAAaK,KAClB5L,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjC4G,QAASpJ,EAAciO,QACvB1E,aAAc,CACVE,WAAY,SACZD,SAAU,eAM9BnJ,EACI4B,EAAgB,CACZqH,QAASqE,EAAaK,KAClB5L,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjC4G,QAASpJ,EAAckO,MACvB3E,aAAc,CACVE,WAAY,SACZD,SAAU,cA3EvB,QAoFnBiD,EAAMiB,aApFa,4CAAH,sDAuFpB,OACI,yBAAKS,UAAU,yBACX,yBAAKA,UAAU,+BACX,kBAACC,GAAA,EAAD,CACIC,aAAe,EACfC,kBAAkB,OAClBC,KAAOhM,KAAKiM,KAAK7M,EAAS,IAAM,IAChC8M,IAAM,EACNC,IAAM3B,EACNrK,MAAQuK,EACR0B,SAnHO,SAACrB,EAAY5K,GACX,kBAAVA,IAIXyK,EAAgBzK,GAChBqG,QAAQC,IAAI,0BAA2BtG,GAElB,kBAAVA,GACPwK,EAAcxK,KA2GNkM,SAAW7B,GAAY,EACvB8B,OAAK,KAIb,2BAAO/N,KAAK,OAAO4B,MAAQuK,EAAa0B,SA5G1B,SAACrB,GACnB,IAAM5K,EAAQoM,SAASxB,EAAMyB,OAAOrM,OACpCyK,EAAgBzK,MA4GZ,yBAAKsM,QAAU3B,GACX,kBAAC4B,GAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,iBAAiBC,UAAU,OAAOC,QAAS,CAAEC,KAAM,wBACtF,kBAAC,KAAD,S,aChKpB,SAASC,GAAsB9C,GAAe,IAClC/K,EAA+B+K,EAA/B/K,KAAM8N,EAAyB/C,EAAzB+C,SAAU9B,EAAejB,EAAfiB,WADiB,EAEf+B,aAAU,GAA5BvL,EAFiC,EAEjCA,MAAOwL,EAF0B,EAE1BA,OACTrP,EAAWwM,cACX3E,EAAQ0E,aAAY,SAAC1I,GACvB,OAAOA,EAAM1D,IAAM,MAGvB,SAASmP,IACL,IAAMC,EAAU,yCAAG,mCAAA3E,EAAA,sEACYE,GAA0BzJ,EAAKS,IAAKT,EAAKC,QADrD,cAGEiM,SACb7E,QAAQC,IAAI,aAActH,GACpBnB,EAFe,YAEM2H,EAAMzH,UAAUC,OACrCoM,EAHe,YAGG5E,EAAMlE,OAAOtD,QAGxB,KAFP6M,EAAMrF,EAAMzH,UAAUC,MAAM8M,WAAU,SAAAC,GAAC,OAAIA,IAAM/L,SAG7CD,EADM,eACQC,IACZE,KAAKC,QAAb,UA5BA,iBA4BA,OAAwCA,IAAQC,YAChDvB,EAAeK,OAAO2M,EAAK,GAC3BT,EAAYiB,QAAQtM,GAEpBpB,EAAS,CACLS,KnBzCW,sBmB0CXC,QAASR,IAGbF,EAAS,CACLS,KnB7CQ,mBmB8CRC,QAAS+L,MAtBN,2CAAH,qDA4BV+C,EAAU,yCAAG,iCAAA5E,EAAA,sEACYI,GAA4B3J,EAAKE,KAAKoJ,UADlD,QACT2C,EADS,QAIEC,SACPrN,EADe,YACM2H,EAAMzH,UAAUC,OACrC6M,EAAMhN,EAAeiN,WAAU,SAAAC,GAAC,OAAIA,IAAM/L,KAE5CA,EAAKE,KAAKkO,UACVzP,EACIF,EAAwBoN,KAKpClN,EACI4B,EAAgB,CACZqH,QAASqE,EAAaK,KAClB5L,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjC4G,QAASuE,EAAaC,OAAS5N,EAAciO,QAAUjO,EAAckO,MACrE3E,aAAc,CACVE,WAAY,SACZD,SAAU,cAvBf,2CAAH,qDA8BhB,OACI,yBAAK2E,UAAU,sBACX,yBAAKa,QAAU,kBAAMU,EAAO,KAA5B,6BACA,yBAAKV,QAAUa,GAAf,4EACA,yBAAKb,QAAU,kBAAMU,EAAO,KAA5B,0DACA,yBAAKV,QAAUY,GAAf,2DAKZ,SAASG,IACL,OACI,yBAAK5B,UAAU,kDACX,yBAAKA,UAAU,8BACX,gCACMzM,EAAKE,KAAKmE,KADhB,SACgCrE,EAAKC,OADrC,UAIJ,yBAAKwM,UAAU,qCACX,kBAAC3B,GAAD,CAAmBE,aAAW,EAACgB,WAAaA,EAAahM,KAAOA,MAMhF,SAASsO,IACL,OACI,yBAAK7B,UAAU,kDACX,yBAAKA,UAAU,qCACX,kFAAiBzM,EAAKE,KAAKmE,MAC3B,iEAAerE,EAAKC,QACpB,oFAAmBD,EAAKE,KAAKqO,eAC7B,oEAAkBvO,EAAKE,KAAK+H,QAC5B,kFAAiBjI,EAAKE,KAAKsO,aAC3B,oDAAYxO,EAAKE,KAAKd,QAMtC,OACI,kBAACqP,GAAA,EAAD,CACId,QAAU,CAAEC,KAAM,sBAAuBc,MAAO,wBAChDhQ,GAAK,eACLiQ,OAASb,EACTA,SAAWA,EACXc,QAAU5C,EACVnE,aAAc,CACVC,SAAU,MACVC,WAAY,QAEhB8G,gBAAiB,CACb/G,SAAU,MACVC,WAAY,SAGhB,yBAAK0E,UAAU,gBACC,IAAVjK,GAAe,kBAACyL,EAAD,MACL,IAAVzL,GAAe,kBAAC6L,EAAD,MACL,IAAV7L,GAAe,kBAAC8L,EAAD,QCpIjC,SAASQ,GAAmB/D,GAAe,IAC/B/K,EAA+B+K,EAA/B/K,KAAM8N,EAAyB/C,EAAzB+C,SAAU9B,EAAejB,EAAfiB,WADc,EAEZ+B,aAAU,GAA5BvL,EAF8B,EAE9BA,MAF8B,EAEvBwL,OAEf,SAASC,IACL,OACI,yBAAKxB,UAAU,kDACX,yBAAKA,UAAU,8BACX,gCACMzM,EAAKE,KAAKmE,KADhB,SACgCrE,EAAKC,OADrC,UAIJ,yBAAKwM,UAAU,qCACX,kBAAC3B,GAAD,CAAmBkB,WAAaA,EAAahM,KAAOA,MAMpE,OACI,kBAACyO,GAAA,EAAD,CACId,QAAU,CAAEC,KAAM,sBAAuBc,MAAO,wBAChDhQ,GAAK,eACLiQ,OAASb,EACTA,SAAWA,EACXc,QAAU5C,EACVnE,aAAc,CACVC,SAAU,MACVC,WAAY,QAEhB8G,gBAAiB,CACb/G,SAAU,MACVC,WAAY,SAGhB,yBAAK0E,UAAU,gBACC,IAAVjK,GAAe,kBAACyL,EAAD,QCpCjC,IAUMc,GAAgB,SAAChE,GAAkB,ILFnBrB,EKoBdsF,EACAC,EAlBIjP,EAA0B+K,EAA1B/K,KAAMtB,EAAoBqM,EAApBrM,GAAIsM,EAAgBD,EAAhBC,YAEZC,EAAUC,aAAY,SAAC1I,GACzB,OAAOA,EAAM1D,IAAM,MAEjBH,EAAWwM,cAETpM,EAAsBkM,EAAtBlM,UAAWuD,EAAW2I,EAAX3I,OACXtD,EAAUD,EAAVC,MACOoM,EAAgB9I,EAAvBtD,MACFkQ,GLbYxF,EKaa1J,EAAKS,ILbG2H,GAAOsB,IKEV,EAcE4B,mBAAsB,MAdxB,oBAc7B6D,EAd6B,KAchBC,EAdgB,OAeJ9D,mBAAS,MAfL,oBAe7BwC,EAf6B,KAenBuB,EAfmB,KAiBhCC,GAAU,EAGd,GAAItE,EAAa,CACb,IAAMuE,EAAoBvQ,EAAM8M,WAAU,SAAAC,GAAC,OAAIA,IAAM/L,MAC1B,IAAvBuP,IACAP,EAAiBhQ,EAAMuQ,GACvBN,EAAWjQ,EAAMuQ,EAAoB,GAEjCP,GAAkBC,GACdD,EAAevO,MAAQwO,EAASxO,KAAOuO,EAAe9O,KAAKqO,cAAgB,IAC3Ee,GAAU,IAM1B,IAMMtD,EAAa,WACfoD,EAAe,MACfC,EAAY,OAGVG,EAAW,yCAAG,WAAO5D,GAAP,wBAAArC,EAAA,0DAEZyB,GAAgC,IAAjBY,EAAM6D,OAFT,qBAGRzP,EAAKC,QAAU,GAHP,qDASC,KAFP4L,EAAM7M,EAAM8M,WAAU,SAAAC,GAAC,OAAIA,IAAM/L,MAP3B,iDAaZrB,EACIW,EAA0BuM,EAAKhL,KAAK6O,MAAM1P,EAAKC,OAAS,KAdhD,0BAkBN+K,GAAgC,IAAjBY,EAAM6D,OAlBf,wBAmBZpI,QAAQC,IAAI,iJAA+BtH,GAnB/B,UAsBeqJ,GAA0BrJ,EAAKE,KAAKoJ,SAAUtJ,EAAKC,QAtBlE,aAsBNgM,EAtBM,QAyBKC,OAzBL,qBA4BK,KAFPL,EAAMT,EAAYU,WAAU,SAAAC,GAAC,OAAIA,IAAM/L,MA1BrC,mDAgCFmM,EAAavM,KAAKC,MAAMD,KAAKE,UAAUsL,EAAYS,MACnDO,EAAgBxM,KAAKC,MAAMD,KAAKE,UAAUqM,KAClCjM,KAAKC,QAAnB,UAxFa,mBAwFb,OAAuDA,IAAQC,YAC/DgM,EAAcnM,OAASD,EAAKC,OAC5BjB,EAAMqN,QAAQD,GACdhB,EAAYlM,OAAO2M,EAAK,GACxBlN,EAASQ,EAAkBH,IAC3BL,EAAS0B,EAAe+K,IAvChB,QA0CZzM,EACI4B,EAAgB,CACZqH,QAASqE,EAAaK,KAClB5L,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjC4G,QAASuE,EAAaC,OAAS5N,EAAciO,QAAUjO,EAAckO,MACrE3E,aAAc,CACVE,WAAY,SACZD,SAAU,cAlDlB,wBAyDNkD,GAAgC,IAAjBY,EAAM6D,QAC3BpI,QAAQC,IAAI,0IAA6BtH,GA1D7B,4CAAH,sDA8DX2P,EAAe,SAAC/D,GAClBA,EAAMgE,kBACN,IAAMC,EAAmB7Q,EAAM8M,WAAU,SAAAC,GAAC,OAAIA,IAAM/L,KAC9C8P,EAAgB9Q,EAAM8M,WAAU,SAAAC,GAAC,OAAIA,IAAMkD,KACjD5H,QAAQC,IAAI,mBAAoBuI,GAChCxI,QAAQC,IAAI,gBAAiBwI,GAC7BnR,ErBvGW,SAACkR,EAA0BC,GAC1C,OAAO,SAACnR,EAAUC,GAAc,IAGpBI,EAFOJ,IAAPE,GACAC,UACAC,MACFC,EAAQ,YAAOD,GAErB,IAA0B,IAAtB6Q,IAA8C,IAAnBC,EAA/B,CAIA,IAAMX,EAAW,eAAOnQ,EAAM6Q,IACxBZ,EAAQ,eAAOjQ,EAAM8Q,IAE3B,GAAIX,EAAY1O,MAAQwO,EAASxO,IAAjC,CAIA,IAAM8N,EAAgBY,EAAYjP,KAAKqO,cACjCwB,EAAMZ,EAAYlP,OAASgP,EAAShP,OAK1C,GAHAoH,QAAQC,IAAI,gBAAiBiH,GAC7BlH,QAAQC,IAAI,MAAOyI,GAEfA,EAAMxB,EAAe,CACrB,IAAMtO,EAAS8P,EAAMxB,EACrBY,EAAYlP,OAASA,EACrBgP,EAAShP,OAASsO,EAClBtP,EAASC,OAAO2Q,EAAkB,EAAGV,GACrClQ,EAASC,OAAO4Q,EAAe,EAAGb,QAElCA,EAAShP,OAAS8P,EAClB9Q,EAASC,OAAO2Q,EAAkB,EAAGZ,GACrChQ,EAASC,OAAO4Q,EAAe,GAGnCnR,EAAS,CACLS,KAnEuB,sBAoEvBC,QAASJ,OqBkET+Q,CAAWH,EAAkBC,KAIrC,OACI,sCACQX,GAAenE,GAAe,kBAAC6C,GAAD,CAAuB7B,WAAaA,EAAa8B,SAAWA,EAAW9N,KAAOmP,MAC5GA,IAAgBnE,GAAe,kBAAC8D,GAAD,CAAoB9D,aAAW,EAACgB,WAAaA,EAAa8B,SAAWA,EAAW9N,KAAOmP,IAE1H,kBAAC,KAAD,CAAWc,YAAcjQ,EAAKE,KAAKC,QAAUsD,MAAQ/E,IAChD,SAACwR,EAAcC,GACZ,OACI,yBACI7C,QAAU,SAAC8C,GAAD,OA7Fb,SAACpQ,EAAYoQ,GAC9B/I,QAAQC,IAAI,eAAgBtH,GAC5BoP,EAAepP,GACfqP,EAAYe,EAAEC,eA0FuBC,CAAatQ,EAAMoQ,IACpCZ,YAAcA,GAEd,yBAAKe,IAAML,EAAaM,UACpB,uCACI/D,UAAU,mBACLyD,EAAaO,eACbP,EAAaQ,iBAElB,yBAAKjE,UAAU,wBACX,yBAAKkE,IAAMzB,EAAY0B,WAAY,KAEvC,yBAAKnE,UAAU,uBACTzM,EAAKE,KAAKmE,MAEhB,yBAAKoI,UAAU,yBAAf,UACSzM,EAAKC,OADd,YACwBD,EAAKE,KAAKqO,gBAElC,yBAAK9B,UAAU,0BACRzM,EAAKE,KAAK+H,OAASjI,EAAKC,QAAQ4Q,QAAQ,GAD/C,qBAGEvB,GAAW,yBAAK7C,UAAU,UAAUa,QAAU,SAAC8C,GAAD,OAAOT,EAAaS,KAAK,kBAAC,KAAD,eCzJvGU,GAAiB,SAAC/F,GACpB,IAIQ/L,EAJQkM,aAAY,SAAC1I,GACzB,OAAOA,EAAM1D,IAAM,MAEfC,UACAC,MAaR,OACI,oCACI,kBAAC,KAAD,CAAW+R,YAAY,eAClB,SAACC,EAAUb,GAAX,OACG,uCAAKI,IAAMS,EAASR,SAAWS,OAjC7BC,EAiCkDf,EAASe,eAhC7E7J,QAAQC,IAAI,iBAAkB4J,GAEvB,CACHC,UAAW,OACXC,UAAW,SACXC,OAAQ,QACRC,OAAQJ,EAAiB,mBAAqB,4BA0BkDF,EAASO,gBAdlGvS,EAAM+D,KAAI,SAAC/C,EAAMtB,GACpB,OAAO,kBAAC,GAAD,CACH+B,IAAG,UAvBC,mBAuBD,OAAoBT,EAAKE,KAAKC,SACjCzB,GAAKA,EACLsB,KAAOA,EACPgL,aAAW,OAWDgG,EAASQ,aAnCd,IAACN,OCDtB,SAASO,GAAU1G,GACf,IACQhM,EADMmM,aAAY,SAAC1I,GAAD,OAAyBA,EAAM1D,IAAM,MACvDC,UACAsD,EAAiBtD,EAAjBsD,MAEFqP,EAFmB3S,EAAVC,MAEe2S,QAAO,SAACC,EAAK5R,GAAN,OAAe4R,EAAO5R,EAAKE,KAAK+H,OAASjI,EAAKC,SAAS,GAC5FoH,QAAQC,IAAI,kBAAmBoK,GAC/B,IAAMG,EAAqBpS,OAAOC,UAAUgS,GAAmBA,EAAgBb,QAAQ,GAAKa,EAAgBb,QAAQ,GAEpH,OACI,yBAAKpE,UAAU,aACX,yBAAKA,UAAU,UAAf,2DACiBoF,EADjB,IACwCxP,EADxC,KAGA,yBAAKoK,UAAU,oBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,qBACX,kBAAC,KAAD,QAGR,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,qBACX,kBAAC,KAAD,QAGR,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,qBACX,kBAAC,KAAD,QAGR,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,qBACX,kBAAC,KAAD,QAGR,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,qBACX,kBAAC,KAAD,SAIZ,yBAAKA,UAAU,wBAEX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,UC7CxB,IAUMqF,GAAmB,SAAC/G,GACtB,IAIQ/L,EAJQkM,aAAY,SAAC1I,GACzB,OAAOA,EAAM1D,IAAM,MAEfwD,OACAtD,MAER,OACI,kBAAC,KAAD,CAAW+R,YAAY,cACtB,SAACC,EAAUb,GAAX,OACG,yCAAUa,EAASO,eAAnB,CAAoChB,IAAMS,EAASR,SAAWS,OAjBpDC,EAiByEf,EAASe,eAjB9D,CACtCC,UAAW,OACXC,UAAW,SACXC,OAAQ,QACRC,OAAQJ,EAAiB,mBAAqB,6BAchClS,EAAM+D,KAAI,SAAC/C,EAAM6L,GAAP,OAAe,kBAAC,GAAD,CAAepL,IAAG,UArBnC,iBAqBmC,OAA0BT,EAAKE,KAAKC,SAAYzB,GAAKmN,EAAM7L,KAAOA,OAC7GgR,EAASQ,aAnBN,IAACN,MCNhBa,GAAc,WAEhB,OACI,6BACI,yBAAKtF,UAAU,gBACX,yBAAKA,UAAU,UAAf,gGACA,yBAAKA,UAAU,uBACX,kBAAC,GAAD,UCEduF,GAAO,SAACC,EAAQC,EAAaC,EAAiBC,GAChD,IAAMC,EAAcC,MAAMC,KAAKN,GACzBO,EAAYF,MAAMC,KAAKL,GAFiD,EAG5DG,EAAYnT,OAAOiT,EAAgB1O,MAAO,GAArDgP,EAHuE,qBAK9ED,EAAUtT,OAAOkT,EAAqB3O,MAAO,EAAGgP,GAEhD,IAAMvG,EAAS,GAMf,OALAA,EAAOiG,EAAgBpB,aAAesB,EACtCnG,EAAOkG,EAAqBrB,aAAeyB,EAE3CnL,QAAQC,IAAI,SAAU4E,GAEfA,GAILwG,GAAU,SAACC,EAAMC,EAAYC,GAC/B,IAAM3G,EAASoG,MAAMC,KAAKI,GADuB,EAE/BzG,EAAOhN,OAAO0T,EAAY,GAArCH,EAF0C,qBAKjD,OAFAvG,EAAOhN,OAAO2T,EAAU,EAAGJ,GAEpBvG,GAIX,SAAS4G,GAAQ/H,GACb,IAAME,EAAUC,aAAY,SAAC1I,GACzB,OAAOA,EAAM1D,IAAM,MAEjBH,EAAWwM,cAETpM,EAAsBkM,EAAtBlM,UAAWuD,EAAW2I,EAAX3I,OAGbyQ,EAAU,CACZC,UAAW,SACXC,WAAY,aAGVC,EAAU,SAACxU,GAAD,OAAQuM,EAAQ8H,EAAQrU,IAAKM,OAEvCmU,EAAS,yCAAG,WAAOjH,GAAP,gCAAA3C,EAAA,yDACN0I,EAAwB/F,EAAxB+F,OAAQC,EAAgBhG,EAAhBgG,YAEhB7K,QAAQC,IAAI,SAAU4E,GACtB7E,QAAQC,IAAI,SAAU2K,GACtB5K,QAAQC,IAAI,cAAe4K,GAGtBA,EARS,oDAaVD,EAAOlB,cAAgBmB,EAAYnB,YAbzB,iBAcJ/R,EAAQ0T,GACVQ,EAAQjB,EAAOlB,aACfkB,EAAOxO,MACPyO,EAAYzO,OAGhB4D,QAAQC,IAAI,WAAYtI,GACxBqI,QAAQC,IAAI,wBAAyB2K,EAAOlB,aAC5C1J,QAAQC,IAAI,uBAAwB4K,EAAYzO,OAErB,cAAvBwO,EAAOlB,aACPpS,EAAS0B,EAAerB,IAGD,eAAvBiT,EAAOlB,aACPpS,EAASQ,EAAkBH,IA7BrB,2BAiCJkN,EAAS8F,GACXkB,EAAQjB,EAAOlB,aACfmC,EAAQhB,EAAYnB,aACpBkB,EACAC,GAKuB,eAAvBD,EAAOlB,YA1CD,wBA2CAlS,EA3CA,YA2CqBE,EAAUC,OAC/BgB,EAAOnB,EAAeoT,EAAOxO,OA5C7B,UA8CqBgG,GAA0BzJ,EAAKS,IAAKT,EAAKC,QA9C9D,eA+CWiM,SACbvN,EAAS0B,EAAe6L,EAAO8G,YAC/BrU,EAASQ,EAAkB+M,EAAO+G,cAjDhC,WAsDiB,cAAvBhB,EAAOlB,YAtDD,wBAuDN1J,QAAQC,IAAI,gGAEN8D,EAzDA,YAyDkB9I,EAAOtD,OACzBgB,EAAOoL,EAAY6G,EAAOxO,OAChC4D,QAAQC,IAAI,wGAA2BtH,GA3DjC,UA8DqBqJ,GAA0BrJ,EAAKE,KAAKoJ,SAAUtJ,EAAKC,QA9DxE,SA8DAgM,EA9DA,QA+DWC,SACbvN,EAAS0B,EAAe6L,EAAO8G,YAC/BrU,EAASQ,EAAkB+M,EAAO+G,cAGtCtU,EACI4B,EAAgB,CACZqH,QAASqE,EAAaK,KACtB5L,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjC4G,QAASuE,EAAaC,OAAS5N,EAAciO,QAAUjO,EAAckO,MACrE3E,aAAc,CACVE,WAAY,SACZD,SAAU,cA5EpB,4CAAH,sDAyFf,OACI,yBAAK2E,UAAU,MACX,yBAAKA,UAAU,gBACX,kBAAC,KAAD,CAAiB0G,UAAYA,EAAYC,YAPjC,SAAClT,GACjBmH,QAAQC,IAAI,mBAAoBpH,KAOpB,kBAAC,GAAD,MACA,kBAACuR,GAAD,S,cC/IhB4B,GAAiB,GAEfC,GAAa,WACf,IAAM3U,EAAWwM,cACX/I,EAAqB8I,aAAY,SAAC1E,GAAD,OAAqBA,EAAM1H,GAAGsD,eAAiB,MAFjE,EAGsBmR,yBAAnChT,EAHa,EAGbA,gBAAiBiT,EAHJ,EAGIA,cA0CzB,OAhCAC,IAAMC,WAAU,WACZtR,EAAcuR,SAAQ,YAAwD,IAT1DjV,EASK+B,EAAoD,EAApDA,IAAKmH,EAA+C,EAA/CA,QAA+C,IAAtClH,eAAsC,MAA5B,GAA4B,MAAxBuC,eAAwB,SAGrEuQ,EAAc/S,GAKd4S,GAAUO,SAASnT,KAGvBF,EAAgBqH,EAAD,aACXnH,OACGC,EAFQ,CAGXkO,QAAS,SAAChD,EAAOiI,EAAQC,GACjBpT,EAAQkO,SACRlO,EAAQkO,QAAQhD,EAAOiI,EAAQC,IAGvCC,SAAU,SAACnI,EAAOkI,GAxBN,IAACpV,EA0BTC,E5BIG,SAAA8B,GAAG,MAAK,CAC3BrB,KA7C2B,kBA8C3BqB,O4BNyBuT,CAAeF,IA1BfpV,EA2BOoV,EA1B5BT,GAAS,YAAOA,GAAUnQ,QAAO,SAAAzC,GAAG,OAAI/B,IAAO+B,UAL3B/B,EAoCD+B,EAnCnB4S,GAAS,sBAAOA,IAAP,CAAkB3U,UAqC5B,CAAC0D,EAAeoR,EAAejT,EAAiB5B,IAE5C,MC1CX,SAASsV,GAAalJ,GAClB,IACMmJ,EADU,IACFnJ,EAAMnJ,OAEpB,OACI,yBAAK6K,UAAU,kBACX,gEAAcyH,GACd,gEAAcnJ,EAAMlJ,OACpB,4EAAgBkJ,EAAMjJ,QACtB,gEAAciJ,EAAMhJ,aACpB,oGAAoBgJ,EAAM/I,c,+VCNtC,SAASmS,GAAUpJ,GAAe,IACtBnJ,EAAWmJ,EAAXnJ,OAGFwS,EAAUxS,GAAU,GAGpByS,EAAiBC,aAAH,KAAeC,UAC7BC,EAAiBC,KAAOC,IAAV,KACFN,EAAU,OAAS,KAAmBC,GAGpDM,EAAcC,KAiBlB,OAhBIhT,GAAU,KACV+S,EAAcE,MAEdjT,GAAU,KACV+S,EAAcG,MAEdlT,GAAU,KACV+S,EAAcI,MAEdnT,GAAU,KACV+S,EAAcK,MAEdpT,GAAU,IACV+S,EAAcM,MAId,kBAACT,EAAD,KACI,yBAAK/H,UAAU,eACX,yBAAKkE,IAAMgE,EAAc1D,MA9BxB,O,6GCLjB,SAASiE,GAAOnK,GAAe,IACnBjJ,EAAWiJ,EAAXjJ,OAGJqT,EAAUC,KAiBd,OAhBItT,EAAS,KACTqT,EAAUE,MAEVvT,EAAS,KACTqT,EAAUG,MAEVxT,EAAS,KACTqT,EAAUI,MAEVzT,EAAS,KACTqT,EAAUI,MAEVzT,EAAS,IACTqT,EAAUK,MAIV,yBAAK/I,UAAU,YACX,yBAAKkE,IAAMwE,EAAUlE,MArBhB,M,kICAjB,SAASwE,GAAe1K,GAAe,IAC3B/I,EAAgB+I,EAAhB/I,YAGJmT,EAAUC,KAiBd,OAhBIpT,EAAc,KACdmT,EAAUE,MAEVrT,EAAc,KACdmT,EAAUG,MAEVtT,EAAc,KACdmT,EAAUI,MAEVvT,EAAc,KACdmT,EAAUO,MAEV1T,EAAc,IACdmT,EAAUQ,MAIV,yBAAKlJ,UAAU,oBACX,yBAAKkE,IAAMwE,EAAUlE,MArBhB,M,6GCHjB,SAAS2E,GAAe7K,GAAe,IAC3BhJ,EAAgBgJ,EAAhBhJ,YAGJoT,EAAUC,KAcd,OAbIrT,EAAc,KACdoT,EAAUU,MAEV9T,EAAc,KACdoT,EAAUI,MAEVxT,EAAc,KACdoT,EAAUW,MAEV/T,EAAc,IACdoT,EAAUQ,MAIV,yBAAKlJ,UAAU,oBACX,yBAAKkE,IAAMwE,EAAUlE,MAlBhB,M,cCJjB,SAAS8E,GAAahL,GAClB,IACM/J,EADU+J,EAAMiL,SAAW,IACTjL,EAAM/J,MAE9B,OACI,6BACI,kBAACiV,GAAA,EAAD,CAAkBzI,MAAM,YAAY9F,QAAQ,SAAS1G,MAAQA,EAAQkV,KAAO,MCNxF,SAASC,GAAqBpL,GAC1B,IAAMqL,EAAM,eAAOrL,EAAMkG,MAAb,CAAoBoF,MAAOtL,EAAMmL,OAO7C,OACI,yBAAKzJ,UAAU,uBAAuBwE,MAAQmF,GAC1C,kBAACL,GAAD,CAAc/U,MAAQ+J,EAAM/J,MAAQgV,SAAW,MAC/C,yBAAK/E,MATS,CAClBxP,SAAU,WACV6U,IAAK,MACLC,KAAM,MACNC,UAAW,0BAKiBzL,EAAM0L,MCL1C,SAASC,GAAK3L,GACV,IAAMvI,EAAiB0I,aAAY,SAAC1I,GAAD,OAAgBA,EAAM1D,IAAM,MAEzD8C,GADWuJ,cACF3I,EAAMb,SAASC,QACxBC,EAAQW,EAAMb,SAASE,MAEvBG,GADaQ,EAAMb,SAASM,WACdO,EAAMb,SAASK,aAC7BF,EAASU,EAAMb,SAASG,OACxBC,EAAcS,EAAMb,SAASI,YAE7B4U,EAA2B,CAC7BlV,SAAU,WACVmV,OAAQ,OACRC,MAAO,QAGPC,EAAe,GACflV,GAAU,KAAIkV,EAAe,CAAC5T,OAAQ,uBACtCtB,GAAU,KAAIkV,EAAe,CAAC5T,OAAQ,uBACtCtB,GAAU,KAAIkV,EAAe,CAAC5T,OAAQ,uBACtCtB,GAAU,KAAIkV,EAAe,CAAC5T,OAAQ,uBACtCtB,GAAU,IAAGkV,EAAe,CAAC5T,OAAQ,uBAEzC,IAAI6T,EAAY,GACZjV,EAAS,KAAIiV,EAAY,CAAC7T,OAAQ,uBAClCpB,EAAS,KAAIiV,EAAY,CAAC7T,OAAQ,uBAClCpB,EAAS,KAAIiV,EAAY,CAAC7T,OAAQ,uBAClCpB,EAAS,KAAIiV,EAAY,CAAC7T,OAAQ,uBAClCpB,EAAS,IAAGiV,EAAY,CAAC7T,OAAQ,uBAErC,IAAI8T,EAAoB,GACpBjV,EAAc,KAAIiV,EAAoB,CAAC9T,OAAQ,uBAC/CnB,EAAc,KAAIiV,EAAoB,CAAC9T,OAAQ,uBAC/CnB,EAAc,KAAIiV,EAAoB,CAAC9T,OAAQ,uBAC/CnB,EAAc,IAAGiV,EAAoB,CAAC9T,OAAQ,uBAElD,IAAI+T,EAAoB,GAOxB,OANIjV,EAAc,KAAIiV,EAAoB,CAAC/T,OAAQ,sBAC/ClB,EAAc,KAAIiV,EAAoB,CAAC/T,OAAQ,sBAC/ClB,EAAc,KAAIiV,EAAoB,CAAC/T,OAAQ,sBAC/ClB,EAAc,KAAIiV,EAAoB,CAAC/T,OAAQ,sBAC/ClB,EAAc,IAAGiV,EAAoB,CAAC/T,OAAQ,uBAG9C,yBAAKuJ,UAAU,QACX,kBAACwH,GAAD,CAAcrS,OAASA,EAASC,MAAQA,EAAQC,OAASA,EAASC,YAAcA,EAAcC,YAAcA,IAE5G,kBAACmU,GAAD,CAAsBnV,MAAQY,EAASqP,MAAK,eAAO0F,EAAP,GAAqBG,EAArB,CAAmCD,MAAO,YAAaX,KAAO,GAAKO,IAAM,kBAACtC,GAAD,CAAWvS,OAASA,MACzI,kBAACuU,GAAD,CAAsBnV,MAAQc,EAASmP,MAAK,eAAO0F,EAAP,GAAqBI,EAArB,CAAgCF,MAAO,YAAaX,KAAO,GAAKO,IAAM,kBAACvB,GAAD,CAAQpT,OAASA,MACnI,kBAACqU,GAAD,CAAsBnV,MAAQe,EAAckP,MAAK,eAAO0F,EAAP,GAAqBK,EAArB,CAAwCH,MAAO,WAAYX,KAAO,GAAKO,IAAM,kBAACb,GAAD,CAAgB7T,YAAcA,MAC5J,kBAACoU,GAAD,CAAsBnV,MAAQgB,EAAciP,MAAK,eAAO0F,EAAP,GAAqBM,EAArB,CAAwCJ,MAAO,UAAWX,KAAO,GAAKO,IAAM,kBAAChB,GAAD,CAAgBzT,YAAcA,MAE3J,yBAAKiP,MAAQ,CAACiG,WAAY,kCAAmCzV,SAAU,WAAYmV,OAAQ,QAASC,MAAO,OAAQrJ,MAAO,SACtH,8FACA,uKACA,6C,WC1DX2J,G,kDAKL,SAASC,KACL,IAAMzY,EAAWwM,cADC,EAEPD,aAAY,SAAC1I,GACpB,OAAOA,EAAM1D,IAAM,MAEiCsC,WAAtCI,GALA,EAKVD,SALU,EAKAC,YAAYC,EALZ,EAKYA,SAAUC,EALtB,EAKsBA,SAMxC2F,QAAQC,IAAI,aAAc9F,GAG1B,IAAM6V,EAAY,yCAAG,iCAAA9N,EAAA,sEACEnI,GAAWI,GADb,QACXtB,EADW,UAIPoX,EAAIpX,EAAKuB,SACT8V,EAAIrX,EAAKwB,SACf/C,EACIuC,EAAkB,CAAEK,SAAUrB,EAAKqB,SAAUC,WAAYtB,EAAKsB,WAAYC,SAAU,CAAC6V,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAAK5V,SAAU,CAAC6V,EAAE,GAAIA,EAAE,GAAIA,EAAE,QAPxH,2CAAH,qDAqBZC,EAAc,yCAAG,WAAOpY,EAAkBkL,EAAwBsB,EAAY5K,GAA7D,UAAAuI,EAAA,yDACfnK,IAAS+X,GAAWM,SADL,sBAED,MAAVnN,IACA5I,EAAS,GAAKV,GAEJ,MAAVsJ,IACA5I,EAAS,GAAKV,GAEJ,MAAVsJ,IACA5I,EAAS,GAAKV,GAGlBrC,EACIwC,EAAsBF,EAASwW,SAAU/V,IAb9B,SAiBTmI,GAAsBnI,GAjBb,2CAAH,4DAqBpB,OACI,yBAAK+K,UAAU,QACX,yBAAKA,UAAU,2BAAf,yHAGA,yBAAKA,UAAU,eACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,6BAAf,sGACA,yCAEI,6BACA,6BACA,kBAACiL,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAYjQ,QAAQ,WAAWhJ,GAAG,sBAAlC,kEACA,kBAACkZ,GAAA,EAAD,CACIC,QAAQ,qBACRnZ,GAAG,sBACHuO,SA/CP,SAACrB,GAClBjN,EACIwC,EAAsBF,EAAS6W,YAAalM,EAAMyB,OAAOrM,Q,qCAI7D+W,CAAkBnM,EAAMyB,OAAOrM,QA0CPA,MAAQQ,GAER,kBAACwW,GAAA,EAAD,CAAUhX,MAAQ,qBAAlB,qBACA,kBAACgX,GAAA,EAAD,CAAUhX,MAAQ,oBAAlB,sBAGR,6BACA,6BACA,kBAACiX,GAAA,EAAD,CAAQzK,MAAM,YAAYF,QAAU+J,GAApC,+CAGJ,6BAEA,0CACgB3V,EAAS,GADzB,IAC+BA,EAAS,GADxC,IAC+CA,EAAS,GACpD,6BACI,oCACI,kBAACgL,GAAA,EAAD,CACIiB,QAAU,CAACC,KAAM,qBACjBf,KArFR,GAsFQE,IArFhB,EAsFgBC,IAxFR,IAyFQhM,MAAQU,EAAS,GAAKyL,OAAK,EAC3BF,SAAW,SAACmD,EAAQ8H,GAAT,OAAoBV,EAAeL,GAAWM,SAAU,IAAKrH,EAAG8H,QAI3F,6BACI,6BACI,oCACI,kBAACxL,GAAA,EAAD,CACIiB,QAAU,CAACC,KAAM,qBACjBf,KAlGR,GAmGQE,IAlGhB,EAmGgBC,IArGR,IAsGQhM,MAAQU,EAAS,GAAKyL,OAAK,EAC3BF,SAAW,SAACmD,EAAQ8H,GAAT,OAAoBV,EAAeL,GAAWM,SAAU,IAAKrH,EAAG8H,QAI3F,6BACI,6BACI,oCACI,kBAACxL,GAAA,EAAD,CACIiB,QAAU,CAACC,KAAM,qBACjBf,KA/GR,GAgHQE,IA/GhB,EAgHgBC,IAlHR,IAmHQhM,MAAQU,EAAS,GAAKyL,OAAK,EAC3BF,SAAW,SAACmD,EAAQ8H,GAAT,OAAoBV,EAAeL,GAAWM,SAAU,IAAKrH,EAAG8H,QAK3F,6BAEA,0CAAiBzW,EAAS,GAA1B,IAAgCA,EAAS,GAAzC,IAAgDA,EAAS,IACzD,gCCnJpB,SAAS0W,KACL,OACI,yBAAK1L,UAAU,kBACX,yBAAKA,UAAU,2BAAf,0FCCZ,SAAS2L,KAAkB,IAAD,EACIrK,aAAU,GAA5BvL,EADc,EACdA,MAAOwL,EADO,EACPA,OAEf,OACI,yBAAKvB,UAAU,SACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,cACX,4BACI,4BAAI,uBAAG4L,KAAK,IAAI/K,QAAU,kBAAMU,EAAO,KAAnC,0HACJ,4BAAI,uBAAGqK,KAAK,IAAI/K,QAAU,kBAAMU,EAAO,KAAnC,4FAGZ,yBAAKvB,UAAU,cACX,yBAAKA,UAAU,qBAAf,6HACY,IAAVjK,GAAe,kBAAC4U,GAAD,MACL,IAAV5U,GAAe,kBAAC2V,GAAD,W,SFTpChB,K,oBAAAA,E,qBAAAA,Q,0BGDGmB,GAAWC,KAAXD,OAEFE,GAAoB,CACtBlH,OAAQ,oBACR9D,MAAO,UACPiL,QAAS,MAGPC,GAAc,SAACC,GAAD,MAAc,CAC9BrH,OAAQqH,EAAU,iCAAmC,GACrDnL,MAAOmL,EAAU,sBAAwB,KAG7C,SAASC,KACL,IAAMpW,EAAQ0I,aAAY,SAAC1I,GAAD,OAAkBA,GAAS,MAC/C7D,EAAWwM,cAEX0N,EAAgBrW,EAAMmE,KAAKrB,SAE3BwT,EAAeD,EAActT,MAAME,QACnCsT,EAAeF,EAActT,MAAMG,QACnCsT,EAAeH,EAAchT,MAAMJ,QACnCwT,EAAeJ,EAAchT,MAAMH,QACnCwT,EAAcL,EAAcjT,SAASH,QACrC0T,EAAcN,EAAcjT,SAASF,QACrC0T,EAAqBP,EAAc/S,gBAAgBL,QACnD4T,EAAqBR,EAAc/S,gBAAgBJ,QAcnD4T,EAAgB,yCAAG,6BAAA/P,EAAA,2DACjBuP,GAAgBI,GAAeE,GAAsBJ,GADpC,gCAGUpO,GAAiBiO,EAActT,MAAMC,KAH/C,QAGXyG,EAHW,QAKAC,QACbvB,KACAhM,EACI6I,YAAK,gBAGT7I,EACI4B,EAAgB,CACZqH,QAASqE,EAAaK,KAClB5L,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjC4G,QAASuE,EAAaC,OAAS5N,EAAcib,QAAUjb,EAAckO,MACrE3E,aAAc,CACVE,WAAY,SACZD,SAAU,cAnBjB,2CAAH,qDA4BhBmF,EAAW,SAACrB,GACd,IAAMvH,EAAOuH,EAAMyB,OAAOhJ,KACpBrD,EAAQ4K,EAAMyB,OAAOrM,MAE3BrC,EACIwG,EAAed,EAAM,MAAOrD,IA7ClB,WACd,IAAMgF,EAAQ,eAAO6S,GACrB7S,EAAST,MAAME,QAAUoT,EAActT,MAAMI,QAAQ6T,KAAKX,EAActT,MAAMC,KAC9EQ,EAASH,MAAMJ,QAAUoT,EAAchT,MAAMF,QAAQ6T,KAAKX,EAAchT,MAAML,KAC9EQ,EAASJ,SAASH,QAAUoT,EAAcjT,SAASD,QAAQ6T,KAAKX,EAAcjT,SAASJ,KACvFQ,EAASF,gBAAgBL,QAAUO,EAASF,gBAAgBN,MAAQQ,EAASJ,SAASJ,IAEtF7G,E9BjCR,SAAqB2G,GACjB,OAAO,SAAC3G,EAAUC,GACdD,EAAS,CACLS,KAhBgB,eAiBhBC,QAASiG,K8B8BTmU,CAAYzT,IAwChB0T,IAGEC,EAAS,SAAC/N,GACZ,IAAMvH,EAAOuH,EAAMyB,OAAOhJ,KAC1B1F,EACIwG,EAAed,EAAM,WAAW,KAIlCuV,GAAcd,IAAiBI,IAAgBE,IAAuBJ,EAG5E,OAFA3R,QAAQC,IAAI,aAAcsS,GAGtB,kBAAC,GAAD,CAAQC,IAAK,GACT,yBAAKpN,UAAU,mBACX,0BAAMA,UAAU,eACZ,yBAAKA,UAAU,qBACX,2BAAO+E,YAAY,6EAAiBpS,KAAK,OAAOiF,KAAK,QAAQrD,MAAQ6X,EAActT,MAAMC,KAAO,GAAKyH,SAAWA,EAAW0M,OAASA,EAAS1I,MAAQyH,GAAYK,IAAiBD,KAChLC,GAAgBD,GAAgB,kBAAC,KAAD,MAChCC,IAAiBD,GAAgB,0BAAM7H,MAAQ,CAACzD,MAAO,qBAAsB,kBAAC,KAAD,QAEnF,yBAAKf,UAAU,qBACX,2BAAO+E,YAAY,iCAAQpS,KAAK,QAAQiF,KAAK,QAAQrD,MAAQ6X,EAAchT,MAAML,KAAO,GAAKyH,SAAWA,EAAW0M,OAASA,EAAS1I,MAAQyH,GAAYG,EAAchT,MAAMH,UAAYmT,EAAchT,MAAMJ,WAC3MwT,GAAgBD,GAAgB,kBAAC,KAAD,MAChCC,IAAiBD,GAAgB,0BAAM/H,MAAQ,CAACzD,MAAO,qBAAsB,kBAAC,KAAD,QAEnF,yBAAKf,UAAU,qBACX,2BAAO+E,YAAY,kFAAiBpS,KAAK,WAAWiF,KAAK,WAAWrD,MAAQ6X,EAAcjT,SAASJ,KAAO,GAAKyH,SAAWA,EAAW0M,OAASA,EAAS1I,MAAQyH,GAAYS,IAAgBD,KACzLC,GAAeD,GAAe,kBAAC,KAAD,MAC9BC,IAAgBD,GAAe,0BAAMjI,MAAQ,CAACzD,MAAO,qBAAsB,kBAAC,KAAD,QAEjF,yBAAKf,UAAU,qBACX,2BAAO+E,YAAY,8FAAmBpS,KAAK,WAAWiF,KAAK,kBAAkBrD,MAAQ6X,EAAc/S,gBAAgBN,KAAO,GAAKyH,SAAWA,EAAW0M,OAASA,EAAS1I,MAAQyH,GAAYW,IAAuBD,KAChNC,GAAsBD,GAAsB,kBAAC,KAAD,MAC5CC,IAAuBD,GAAsB,0BAAMnI,MAAQ,CAACzD,MAAO,qBAAsB,kBAAC,KAAD,SAGnG,yBAAKf,UAAU,0BACX,4BACIA,UAAU,kBACVa,QAAU,kBAAMgM,KAChBpM,SAAW0M,EACX3I,MAAQ2I,EAAapB,GAAoB,IAJ7C,mCASJ,yBAAK/L,UAAU,iCACTsM,IAAiBD,GAAgB,+KAAiC,0BAAM7H,MAAO,CAACzD,MAAO,YAArB,sEAAjC,wNACjCyL,IAAiBD,GAAgB,wKACjCG,IAAgBD,GAAe,gJAA2B,0BAAMjI,MAAO,CAACzD,MAAO,YAArB,sEAA3B,kQAAqI,0BAAMyD,MAAO,CAACzD,MAAO,YAArB,iBAArI,KAC/B6L,IAAuBD,GAAsB,6IAYnE,SAASU,KACL,IAAMnb,EAAWwM,cADJ,EAGaG,mBAAoB,CAC1C/F,MAAO,GACPK,SAAU,KALD,oBAGNpD,EAHM,KAGCuX,EAHD,KAQP9M,EAAW,SAACrB,GACd,IAAMvH,EAAOuH,EAAMyB,OAAOhJ,KACpBrD,EAAQ4K,EAAMyB,OAAOrM,MAE3B+Y,EAAS,eACFvX,EADC,eAEH6B,EAAOrD,MAIVsM,EAAO,yCAAG,6BAAA/D,EAAA,sEACeS,GAAYxH,EAAM+C,MAAO/C,EAAMoD,UAD9C,OACNqG,EADM,OAGZtN,EACI4B,EAAgB,CACZqH,QAASqE,EAAaK,KACtB5L,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjC4G,QAASuE,EAAaC,OAAS5N,EAAcib,QAAUjb,EAAckO,MACrE3E,aAAc,CACVE,WAAY,SACZD,SAAU,cAXd,2CAAH,qDAkBP8R,EAAapX,EAAM+C,MAAMyU,OAAS,GAAKxX,EAAMoD,SAASoU,OAAS,EAErE,OACI,kBAAC,GAAD,CAAQH,IAAK,GACT,yBAAKpN,UAAU,gBACX,0BAAMA,UAAU,eACZ,2BAAO+E,YAAY,4EAAgBpS,KAAK,OAAOiF,KAAK,QAAQrD,MAAQwB,EAAM+C,OAAS,GAAK0H,SAAWA,IACnG,2BAAOuE,YAAY,kFAAiBpS,KAAK,WAAWiF,KAAK,WAAWrD,MAAQwB,EAAMoD,UAAY,GAAKqH,SAAWA,KAElH,yBAAKR,UAAU,0BACX,4BACIA,UAAU,kBACVS,SAAW0M,EACX3I,MAAQ2I,EAAapB,GAAoB,GACzClL,QAAUA,GAJd,2FAcpB,SAAS2M,KAAQ,IAAD,EACsClM,aAAU,GAA7CmM,EADH,EACJ1X,MAA4B2X,EADxB,EACgBnM,OACX7C,cAEjB,OACI,kBAAC,GAAD,CAAQ0O,IAAK,GACT,yBAAKpN,UAAU,QACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,wBAAwBa,QAAU,kBAAM6M,EAAU,IAAKlJ,MAAQ,CAACzD,MAAuB,IAAhB0M,EAAoB,sBAAwB,KAAlI,sEAGA,yBAAKzN,UAAU,2BAA2Ba,QAAU,kBAAM6M,EAAU,IAAKlJ,MAAQ,CAACzD,MAAuB,IAAhB0M,EAAoB,sBAAwB,KAArI,uEAIJ,yBAAKzN,UAAU,0BACO,IAAhByN,GAAqB,kBAACJ,GAAD,MACL,IAAhBI,GAAqB,kBAACtB,GAAD,U,wCC1N/C,SAASwB,GAAgBrP,GAAe,IAC5B8B,EAAoC9B,EAApC8B,KAAME,EAA8BhC,EAA9BgC,IAAKC,EAAyBjC,EAAzBiC,IAAKhM,EAAoB+J,EAApB/J,MAAOiM,EAAalC,EAAbkC,SAE/B,OACI,6BACI,kBAACoN,GAAA,EAAD,CACI5N,UAAU,mBACV6N,eAAe,kBACfC,eAAe,kBACfxN,IAAMA,EACNC,IAAMA,EACNH,KAAOA,EACP7L,MAAQA,EACRwZ,YAAa,SAACzP,EAAOvI,GAAR,OAAkB,wBAASuI,IACxCkC,SAAW,SAACzH,GAAD,OAAcyH,EAASzH,OCnBlD,SAASiV,KACL,IACMhW,EADQyG,aAAY,SAAC1I,GAAD,OAAkBA,GAAS,MAClCoE,UAAUnC,KAEvB9F,EAAWwM,cAEXqM,EAAiB,SAAC/T,EAAeW,I,uCACnCsW,CAAwBjX,EAAOW,GAC/BzF,ElCiDR,SAAwB8E,EAAeW,GACnC,OAAO,SAACzF,EAAUC,GACdD,EAAS,CACLS,KAlEoB,mBAmEpB8F,UAAWzB,EACXW,QAASA,KkCtDJuW,CAAelX,EAAOW,KAYnC,OACI,yBAAKqI,UAAU,kBATRhI,EAAK1B,KAAI,SAAAgJ,GAAC,OACb,yBAAKU,UAAU,uBAAuBhM,IAAG,UAAMsL,EAAEtI,MAAR,YAAiBsI,EAAEtI,QACxD,yBAAKgJ,UAAU,8BAA+BV,EAAE1H,MAChD,kBAAC+V,GAAD,CAAiBrN,KAAM,EAAKC,IAAK,EAAKH,KAAM,GAAK7L,MAAQ+K,EAAE3H,QAAU6I,SAAW,SAAC1C,GAAD,OAAeiN,EAAezL,EAAEtI,MAAO8G,W,cCXvI,SAASqQ,GAAU7P,GAAe,IACtB8P,EAA8C9P,EAA9C8P,YAAaC,EAAiC/P,EAAjC+P,aAAc9Z,EAAmB+J,EAAnB/J,MAAO+Z,EAAYhQ,EAAZgQ,QADb,EAEOC,eAFP,oBAEtBC,EAFsB,KAETC,EAFS,OAGSF,eAHT,oBAGtBG,EAHsB,KAGRC,EAHQ,KAgBvBC,EAAyB,CAC3BC,SAAU,OACV9N,MAAO,UACP+N,cAAe,SACf9C,QAASwC,EAAc,GAAK,GAG1BO,EAA0B,CAC5BF,SAAU,OACV9N,MAAO,UACP+N,cAAe,SACf9C,QAAS0C,EAAe,GAAK,GAmBjC,OACI,yBAAKlK,MAzCuB,CAC5BxP,SAAU,WACVga,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZtF,MAAO,QACPuF,UAAW,SACXC,OAAQ,WAmCJ,yBAAK5K,MAbW,CACpB2K,UAAW,SACXna,SAAU,WACV6U,IAAK,UACLC,KAAM,MACNC,UAAW,mBACXH,MAAO,OACP7I,MAAO,OACP0J,WAAY,wBAMF6D,GAGN,yBAAK9J,MAAQoK,EAAyB/N,QAAUuN,EAActK,IAAM2K,GAChE,kBAAC,KAAD,CAAoBjK,MAAQ,CAACsK,cAAe,aAEhD,yBAAKtK,MAzBc,CACvBoF,MAAO,QACPiF,SAAU,WAwBAta,GAEN,yBAAKiQ,MAAQuK,EAA0BlO,QAAUwN,EAAevK,IAAM6K,GAClE,kBAAC,KAAD,CAAqBnK,MAAQ,CAACsK,cAAe,cCtD7D,SAASO,GAAoB/Q,GAAe,IAChCgR,EAAgDhR,EAAhDgR,QAAShY,EAAuCgH,EAAvChH,OAAQiY,EAA+BjR,EAA/BiR,SAAUC,EAAqBlR,EAArBkR,WAAY3P,EAASvB,EAATuB,KAEzC4P,EADiBhR,aAAY,SAAC1I,GAAD,OAAkBA,GAAS,MAC3BoE,UAAUlC,KAAKX,GAAQN,MAEpD9E,EAAWwM,cA2BjB,OACI,yBAAKsB,UAAU,kBACX,kBAACmO,GAAD,CAAWC,YAdC,WAChB,IAAIsB,EAAID,GAERC,GAAK,IACI,IACLA,EAAI,GAGRxd,EAASmF,EAAeC,EAAQoY,IAChCH,EAASjY,EAAQkY,EAAWF,EAAQhY,GAAQoY,MAKDrB,aA3B3B,WAChB,IAAMd,EAAS+B,EAAQhY,GAAQiW,OAAS,EACpCmC,EAAID,GAERC,GAAK,GACGnC,IACJmC,EAAInC,GAGRrb,EAASmF,EAAeC,EAAQoY,IAChCH,EAASjY,EAAQkY,EAAWF,EAAQhY,GAAQoY,MAiB4Bnb,MAAQ+a,EAAQhY,GAAQmY,GAAenB,QAAUzO,KC1CjI,IAAM8P,GAAY,CACd,SAAY,EACZ,OAAU,EACV,OAAU,EACV,KAAQ,EACR,OAAU,EACV,KAAQ,EACR,KAAQ,EACR,MAAS,EACT,KAAQ,EACR,MAAS,EACT,QAAW,GACX,MAAS,GACT,MAAS,GACT,OAAU,GACV,QAAW,GACX,QAAW,GACX,SAAY,GACZ,MAAS,GACT,MAAS,GACT,OAAU,GACV,QAAW,GACX,OAAU,GACV,KAAQ,GACR,KAAQ,IAGNC,GAAY,CACd,OAAU,GACV,OAAU,GACV,QAAW,GACX,OAAU,GACV,OAAU,GACV,SAAY,GACZ,IAAO,GACP,IAAO,GACP,OAAU,GACV,OAAU,GACV,OAAU,GACV,OAAU,GACV,OAAU,GACV,OAAU,GACV,OAAU,GACV,QAAW,GACX,QAAW,GACX,OAAU,GACV,UAAa,GACb,UAAa,GACb,KAAQ,GACR,MAAS,IAKPN,GAAU,CAAE9X,OAFH,CAAC,WAAY,SAAU,SAAU,OAAQ,SAAU,OAAQ,OAAQ,QAAS,OAAQ,QAAS,UAAW,QAAS,QAAS,SAAU,UAAW,UAAW,WAAY,QAAS,QAAS,SAAU,UAAW,SAAU,OAAQ,QAEpNC,OADX,CAAC,SAAU,SAAU,UAAW,SAAU,SAAU,WAAY,MAAO,MAAO,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAAW,UAAW,SAAU,YAAa,YAAa,OAAQ,UAGrO,SAASoY,KACL,IAAMN,EAAW,SAAC3X,EAAWmB,I,qCACzB+W,CAAqB,CAAClY,OAAMmB,SAG1BhD,EAAQ0I,aAAY,SAAC1I,GAAD,OAAkBA,GAAS,MAC/C7D,EAAWwM,cAEX8B,EAAW,SAAC5I,EAAcmB,GAC5BwW,EAAS3X,EAAMmB,GACf7G,ErCUR,SAAqB0F,EAAcrD,GAC/B,OAAO,SAACrC,EAAUC,GACdD,EAAS,CACLS,KApFiB,gBAqFjBiF,OACArD,WqCfKwb,CAAYnY,EAAMmB,KAG/B,OACI,yBAAKiH,UAAU,4BACX,kBAACqP,GAAD,CAAqB/X,OAAS,SAAWiY,SAAWA,EAAWD,QAAUA,GAAUE,WAAaG,GAAY9P,KAAK,6BACjH,kBAACwP,GAAD,CAAqB/X,OAAS,SAAWiY,SAAWA,EAAWD,QAAUA,GAAUE,WAAaI,GAAY/P,KAAK,6BAEjH,yBAAKG,UAAU,kCAAkCwE,MAAO,CAAC4K,OAAQ,WAAjE,oDACA,kBAACzB,GAAD,CAAiBrN,IAAM,EAAIC,IAAM,EAAIH,KAAO,GAAM7L,MAAQwB,EAAMoE,UAAUjC,WAAasI,SAAW,SAACzH,GAAUyH,EAAS,aAAczH,MAEpI,yBAAKiH,UAAU,kCAAkCwE,MAAO,CAAC4K,OAAQ,WAAjE,qDACA,kBAACzB,GAAD,CAAiBrN,IAAM,EAAIC,IAAM,EAAIH,KAAO,GAAM7L,MAAQwB,EAAMoE,UAAUhC,KAAOqI,SAAW,SAACzH,GAAUyH,EAAS,OAAQzH,OC9EpI,IAAMiX,GAAW,CACbC,KAAM,CACF,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC9E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChF,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAExCC,OAAQ,CACJ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAIxE,SAASC,KACL,IAAMpa,EAAQ0I,aAAY,SAAC1I,GAAD,OAAkBA,GAAS,MAC/C7D,EAAWwM,cACXvH,EAASpB,EAAMoE,UAAUhD,OAC3BiZ,EAASra,EAAMoE,UAAU/B,KACzBC,EAActC,EAAMoE,UAAU9B,YAE5B+V,EAAW,yCAAG,uBAAAtR,EAAA,6DAChBsT,GAAU,GAEG,IACTA,EAASJ,GAAS7Y,GAAQoW,OAAS,GAJvB,SAQV5P,GAAiBqS,GAAS7Y,GAAQiZ,IARxB,OAUhBle,EACIkF,EAAUgZ,IAXE,2CAAH,qDAeX/B,EAAY,yCAAG,uBAAAvR,EAAA,6DACjBsT,GAAU,GAEGJ,GAAS7Y,GAAQoW,OAAS,IACnC6C,EAAS,GAJI,SAQXzS,GAAiBqS,GAAS7Y,GAAQiZ,IARvB,OAUjBle,EACIkF,EAAUgZ,IAXG,2CAAH,qDAuClB,OACI,yBAAKpQ,UAAU,kBACX,kBAACmO,GAAD,CAAW5Z,MAAQyb,GAAS7Y,GAAQiZ,GAAU/B,aAAeA,EAAeD,YAAcA,EAAcE,QAAQ,sDAChH,kBAACH,GAAD,CAAW5Z,MAAQ8D,EAAcgW,aA3BX,YAC1BhW,GAAe,GACG,KACdA,EAAc,GAIlB0F,GAAsB1F,GAEtBnG,EAAS+E,EAAaoB,KAkBsD+V,YAfnD,YACzB/V,GAAe,GACG,IACdA,EAAc,IAIlB0F,GAAsB1F,GAEtBnG,EAAS+E,EAAaoB,KAM2FiW,QAAQ,6DCjFjI,SAAS+B,KAAoB,IACjBxE,EAAWC,KAAXD,OAQFyE,EAAuB,SAACzS,EAAwBC,GACjC,kBAANA,G,uCACPyS,CAAmB1S,EAAOC,IAI5B0S,EAAiB,CACnBrB,UAAW,SACXN,SAAU,SACV9N,MAAO,OACP0P,cAAe,QACfhG,WAAY,gCAGhB,OACI,yBAAKzK,UAAU,qBACf,kBAAC6L,EAAD,CAAQuB,IAAK,GACT,6BACI,6BACI,0BAAM5I,MAAOgM,GAAb,+KAEA,kBAAC5C,GAAA,EAAD,CACI5N,UAAU,iBACV6N,eAAe,gBACfC,eAAe,gBACfxN,IAAM,KACNC,IAAM,KACNH,KAAO,GACPF,aAAe,KACf6N,YAAa,SAACzP,EAAOvI,GAAR,OAAkB,wBAASuI,IACxCkC,SAAW,SAACiL,GAAD,OAAY6E,EAAqB,IAAK7E,OAGzD,6BACI,0BAAMjH,MAAOgM,GAAb,2LAEA,kBAAC5C,GAAA,EAAD,CACI5N,UAAU,iBACV6N,eAAe,gBACfC,eAAe,gBACfxN,IAAM,KACNC,IAAM,KACNH,KAAO,GACPF,aAAe,OACf6N,YAAa,SAACzP,EAAOvI,GAAR,OAAkB,wBAASuI,IACxCkC,SAAW,SAACiL,GAAD,OAAY6E,EAAqB,IAAK7E,OAGzD,6BACI,0BAAMjH,MAAOgM,GAAb,6HAEA,kBAAC5C,GAAA,EAAD,CACI5N,UAAU,iBACV6N,eAAe,gBACfC,eAAe,gBACfxN,IAAM,EACNC,IAAM,IACNL,aAAe,IACf6N,YAAa,SAACzP,EAAOvI,GAAR,OAAkB,wBAASuI,IACxCkC,SAjEU,SAACjM,GACN,kBAAVA,G,qCACPmc,CAAoBnc,UCXhC,SAASoc,GAAMpc,EAAe+L,EAAaC,GAOvC,OANIhM,EAAQ+L,IACR/L,EAAQ+L,GAER/L,EAAQgM,IACRhM,EAAQgM,GAELhM,ECEX,SAASqc,KACL,IAAM7a,EAAQ0I,aAAY,SAAC1I,GAAD,OAAkBA,GAAS,MAC/C7D,EAAWwM,cAIXmS,EAAW,SAAC9Z,EAAWC,GACzB,OAAQD,GACJ,KAAK,EACD,OAAO4Z,GAAM3Z,EAAO,EAAG,IAE3B,KAAK,EACD,OAAO2Z,GAAM3Z,EAAO,EAAG,IAE3B,KAAK,EACD,OAAO2Z,GAAM3Z,EAAO,EAAG,IAE3B,KAAK,EACD,OAAO2Z,GAAM3Z,EAAO,EAAG,IAE3B,KAAK,EACD,OAAO2Z,GAAM3Z,EAAO,EAAG,IAE3B,KAAK,EACD,OAAO2Z,GAAM3Z,EAAO,EAAG,GAE3B,KAAK,EACD,OAAO2Z,GAAM3Z,EAAO,EAAG,IAE3B,KAAK,EACD,OAAO2Z,GAAM3Z,EAAO,EAAG,IAE3B,KAAK,EACD,OAAO2Z,GAAM3Z,EAAO,EAAG,GAE3B,KAAK,EACD,OAAO2Z,GAAM3Z,EAAO,EAAG,IAE3B,KAAK,GACD,OAAO2Z,GAAM3Z,EAAO,EAAG,IAE3B,KAAK,GACD,OAAO2Z,GAAM3Z,EAAO,EAAG,IAE3B,KAAK,GACD,OAAO2Z,GAAM3Z,EAAO,EAAG,GAE3B,QACI,OAAQ,IA4CpB,OACI,yBAAKgJ,UAAU,0BAvBRjK,EAAMoE,UAAUpC,YAAYzB,KAAI,SAAAgJ,GAAM,IAAD,EACXvJ,EAAMoE,UAAUpC,YAAYuH,EAAEvI,WAAnDC,EADgC,EAChCA,MAEJzC,EAAayC,EAMjB,OAJkB,KALsB,EACzBD,YAKXxC,EAAkB,IAAVyC,EAAc,eAAO,sBAI7B,yBAAKhD,IAAG,UAAMsL,EAAE1H,KAAR,YAAgB0H,EAAEtI,QACtB,kBAACmX,GAAD,CACIC,YAAc,kBA7BnB,SAACrX,EAAmBC,GAC/BA,EAAQ6Z,EAAS9Z,IAAaC,GAC9B9E,EACI4E,EAAmBC,EAAW8Z,EAAS9Z,EAAWC,KAEtDgH,GAAwBjH,EAAWC,GAwBC8Z,CAAOxR,EAAEvI,UAAWuI,EAAEtI,QAC1CqX,aAAe,kBAtBnB,SAACtX,EAAmBC,GAChCA,EAAQ6Z,EAAS9Z,IAAaC,GAC9B9E,EACI4E,EAAmBC,EAAW8Z,EAAS9Z,EAAWC,KAEtDgH,GAAwBjH,EAAWC,GAiBE+Z,CAAQzR,EAAEvI,UAAWuI,EAAEtI,QAC5CzC,MAAQA,EACR+Z,QAAUhP,EAAE1H,YCrFpC,SAASoZ,KACL,IAAMjb,EAAQ0I,aAAY,SAAC1I,GAAD,OAAkBA,GAAS,MAC/C7D,EAAWwM,cACbpG,EAAOvC,EAAMoE,UAAU7B,KAmB3B,OACI,yBAAK0H,UAAU,kBACX,kBAACmO,GAAD,CACIC,YAAc,kBAlBtB9V,EAAOqY,GADPrY,GAAQ,EACW,EAAG,IACtBpG,EACI2E,EAAayB,SAEjB2F,GAAiB3F,IAeT+V,aAAe,kBAXvB/V,EAAOqY,GADPrY,GAAQ,EACW,EAAG,IACtBpG,EACI2E,EAAayB,SAEjB2F,GAAiB3F,IAQT/D,MAAQ+D,EACRgW,QAAU,uDCnBPxC,KAAXD,OAER,SAASoF,GAAe3S,GAA4B,IACxC4S,EAAU5S,EAAV4S,MAER,OACI,yBAAK1M,MAAQ,CAACqK,SAAU,SAAUO,OAAQ,SAAUD,UAAW,SAAUgC,cAAe,cAAiBD,GAIjH,SAASE,KACS3S,aAAY,SAAC1I,GAAD,OAAkBA,EAAMoE,WAAa,MAA/D,IACMiS,EAAgB3N,aAAY,SAAC1I,GAAD,OAAkBA,EAAMmE,KAAKrB,UAAY,MACrE3G,EAAWwM,cACT5F,EAA2BsT,EAA3BtT,MAAOM,EAAoBgT,EAApBhT,MAAOD,EAAaiT,EAAbjT,SAEhBkY,EAAa,yCAAG,WAAOla,GAAP,UAAA2F,EAAA,sEACZY,KADY,uBAEZD,GAAmBtG,GAFP,OAGlBjF,EACIgF,EAAUC,IAEdjF,G3CiBG,SAACA,EAAUC,GACdD,EAAS,CACLS,KA3D+B,mC2CkCjB,2CAAH,sDAWb2e,EAAY,yCAAG,uBAAAxU,EAAA,sEAEXY,KAFW,OAGjBxL,G3CSG,SAACA,EAAUC,GACdD,EAAS,CACLS,KA3D+B,mC2C6ClB,2CAAH,qDAQZ4e,EAAO,yCAAG,6BAAAzU,EAAA,sEACesB,GAAqB,CAC5CtF,MAAOA,EAAMC,IACbK,MAAOA,EAAML,IACbI,SAAUA,EAASJ,MAJX,OACNyG,EADM,OAQZtN,EACI4B,EAAgB,CACZqH,QAASqE,EAAaK,KAClB5L,QAAS,CACLD,KAAK,IAAIE,MAAOC,UAAYC,KAAKC,SACjC4G,QAASuE,EAAaC,OAAS5N,EAAcib,QAAUjb,EAAckO,MACrE3E,aAAc,CACVE,WAAY,SACZD,SAAU,cAM9BnJ,EAAS6I,YAAK,UAtBF,2CAAH,qDAyBb,OACI,yBAAKiF,UAAU,aACX,kBAACwR,GAAA,EAAD,CACIC,UAAW,EACXhI,KAAO,KACPiI,UAAY,OACZC,MAAO,EACP3R,UAAU,oBAEV,kBAACwR,GAAA,EAAOI,OAAR,KACI,0BAAM5R,UAAU,kBAAkBa,QAAU,kBAAMyQ,MAAlD,qDAEJ,kBAACE,GAAA,EAAOK,KAAR,KACI,yBAAK7R,UAAU,qBACX,yBAAKA,UAAU,oBACX,kBAAC,KAAD,CAAQ8R,WAAW,QAAQ/Q,MAAM,MAAM0I,KAAK,KAAKsI,QAAM,EAAClR,QAAU,kBAAMwQ,EAAc,UAAtF,8CACA,kBAAC,KAAD,CAAQS,WAAW,QAAQ/Q,MAAM,SAAS0I,KAAK,KAAKsI,QAAM,EAAClR,QAAU,kBAAMwQ,EAAc,YAAzF,+CAEJ,kBAACJ,GAAD,CAAgBC,MAAM,6BACtB,kBAACrB,GAAD,MACA,kBAACoB,GAAD,CAAgBC,MAAM,6BACtB,kBAAClD,GAAD,MACA,kBAACiD,GAAD,CAAgBC,MAAM,kEACtB,kBAACF,GAAD,MACA,kBAACb,GAAD,MACA,kBAACS,GAAD,QAIR,kBAACY,GAAA,EAAOQ,OAAR,KACI,yBAAKxN,MAAQ,CAAC2K,UAAW,WACrB,kBAAC,KAAD,CAAQ2C,WAAW,QAAQrI,KAAK,KAAKjF,MAAO,CAAC2K,UAAW,SAAUvF,MAAO,QAAS/I,QAAU0Q,GAA5F,2CAKZ,kBAAClB,GAAD,O,WC7GJxE,GAAWC,KAAXD,OAER,SAASoG,KACYvT,cAEjB,OACI,kBAAC,GAAD,CAAQ0O,IAAK,GACT,yBAAKpN,UAAU,cACX,yBAAKA,UAAU,4BCqB/B,SAASkS,KACP,OAAQ,8BAGV,SAASC,KACP,IAEQzc,EAFM+I,aAAY,SAAC1E,GAAD,OAAgBA,GAAS,MAChB1H,GAAGoD,UAC9BC,KAER,OACE,yBAAKsK,UAAU,OACXtK,GAAQ,kBAACuU,GAAD,MACV,kBAAC,GAAD,MACA,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOmI,OAAK,EAACC,KAAK,SAASpR,UAAYiR,KACvC,kBAAC,KAAD,CAAOE,OAAK,EAACC,KAAK,WAAWpR,UAAYoF,KACzC,kBAAC,KAAD,CAAO+L,OAAK,EAACC,KAAK,kBAAkBpR,UAAY0K,KAChD,kBAAC,KAAD,CAAOyG,OAAK,EAACC,KAAK,QAAQpR,UAAYuM,KACtC,kBAAC,KAAD,CAAO4E,OAAK,EAACC,KAAK,aAAapR,UAAYmQ,KAC3C,kBAAC,KAAD,CAAOgB,OAAK,EAACC,KAAK,aAAapR,UAAYgR,MAE7C,kBAAC,KAAD,CAAUK,GAAG,gBC/CnB,SAASC,KACL,OACI,kBAAC,IAAD,CAAUxY,MAAQA,IACd,kBAAC,oBAAD,CAAkByY,iBAAkB,EAAQC,SAAW,EAAIC,iBAAmB,KAC1E,kBAAC,IAAD,CAAiBhZ,QAAUA,IACvB,kBAACyY,GAAD,SCJpBQ,IAASC,OACP,kBAACL,GAAD,MACAM,SAASC,eAAe,SxDgIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1Y,QAAQ0Y,MAAMA,EAAMnY,YyDpIxBP,QAAQC,IAAI,wBAEZhC,oBAAS,wBAAwB,SAACtG,GAC9BiH,EAAQ+Z,KAAK,sBAAuBhhB,MAGxCsG,oBAAS,2BAA2B,SAACjD,GACjC4D,EAAQ+Z,KAAK,yBAA0B3d,MAG3CiD,oBAAS,kBAAkB,SAAC2a,GACxB,IAAM/f,EAAmBN,KAAKC,MAAMogB,GACpCha,EAAQ+Z,KAAK,YAAa9f,EAAKuH,IAAKvH,EAAKwH,QAASxH,EAAKyH,WAG3DrC,oBAAS,sBAAsB,SAACpD,GAC5B+D,EAAQ+Z,KAAK,qBAAsB9d,MAGvCoD,oBAAS,iBAAiB,SAACjB,GACvB4B,EAAQ+Z,KAAK,YAAa3b,MAG9BiB,oBAAS,uBAAuB,SAAC1D,GAC7BqE,EAAQ+Z,KAAK,sBAAuBpe,MAGxC0D,oBAAS,sBAAsB,SAACzD,GAC5BoE,EAAQ+Z,KAAK,qBAAsBne,MAGvCyD,oBAAS,uBAAuB,SAACxD,GAC7BmE,EAAQ+Z,KAAK,sBAAuBle,MAGxCwD,oBAAS,4BAA4B,SAACxD,GAClCmE,EAAQ+Z,KAAK,2BAA4Ble,MAG7CwD,oBAAS,4BAA4B,SAAC2C,GAClChC,EAAQ+Z,KAAK,2BAA4B/X,Q","file":"static/js/main.a64c4c97.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/40.4f68236c.svg\";","module.exports = __webpack_public_path__ + \"static/media/item_weapon_ak47.4540b0aa.png\";","module.exports = __webpack_public_path__ + \"static/media/item_armor.54e93891.png\";","module.exports = __webpack_public_path__ + \"static/media/item_ammo_shotgun.ad78f4ac.png\";","module.exports = __webpack_public_path__ + \"static/media/item_clothes_mask_1.df3617fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item_clothes_mask_2.b1f07183.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item_clothes_mask_3.4a1f8673.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item_clothes_mask_4.ce2bafeb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item_clothes_mask_5.fcc186f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100.504c8166.svg\";","module.exports = __webpack_public_path__ + \"static/media/80.d75a1d48.svg\";","module.exports = __webpack_public_path__ + \"static/media/60.a0e448c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/40.2ba0f73e.svg\";","module.exports = __webpack_public_path__ + \"static/media/20.d04326c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.78f4b6ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/100.bd994074.svg\";","module.exports = __webpack_public_path__ + \"static/media/80.52c8315a.svg\";","module.exports = __webpack_public_path__ + \"static/media/60.9dfb8ce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.d831e46c.svg\";","module.exports = __webpack_public_path__ + \"static/media/100.05b25b95.svg\";","module.exports = __webpack_public_path__ + \"static/media/80.a2558ffa.svg\";","module.exports = __webpack_public_path__ + \"static/media/60.efae3775.svg\";","module.exports = __webpack_public_path__ + \"static/media/40.2e7a3e76.svg\";","module.exports = __webpack_public_path__ + \"static/media/15.a7268e06.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.1954e3cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/100.4510934c.svg\";","module.exports = __webpack_public_path__ + \"static/media/70.c29a32e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/40.68dff684.svg\";","module.exports = __webpack_public_path__ + \"static/media/10.6eed6b11.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.9926f17b.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const ENQUEUE_SNACKBAR = 'ENQUEUE_SNACKBAR';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const REMOVE_SNACKBAR = 'REMOVE_SNACKBAR';\r\n\r\nexport enum NotifyVariant {\r\n    DEFAULT = 'default',\r\n    SUCCESS = 'success',\r\n    ERROR = 'error',\r\n    WARNING = 'warning',\r\n    INFO = 'info',\r\n}\r\n\r\nenum NotifyVertical {\r\n    TOP = 'top',\r\n    BOTTOM = 'bottom',\r\n}\r\n\r\nenum NotifyHorizontal {\r\n    CENTER = 'center',\r\n    LEFT = 'left',\r\n    RIGHT = 'right',\r\n}\r\n\r\nexport type NotifyOrigin = {\r\n    horizontal: NotifyHorizontal;\r\n    vertical: NotifyVertical;\r\n}\r\n\r\nconst enqueueSnackbar = (notification) => {\r\n    const key = notification.options && notification.options.key;\r\n\r\n    return {\r\n        type: ENQUEUE_SNACKBAR,\r\n        notification: {\r\n            ...notification,\r\n            key: key || new Date().getTime() + Math.random(),\r\n        },\r\n    };\r\n};\r\n\r\nconst closeSnackbar = key => ({\r\n    type: CLOSE_SNACKBAR,\r\n    dismissAll: !key, // dismiss all if no key has been defined\r\n    key,\r\n});\r\n\r\nconst removeSnackbar = key => ({\r\n    type: REMOVE_SNACKBAR,\r\n    key,\r\n});\r\n\r\nexport {\r\n    enqueueSnackbar,\r\n    closeSnackbar,\r\n    removeSnackbar,\r\n}","import { Item } from \"../types\";\r\nimport shortid from 'shortid';\r\n\r\nexport const SET_INVENTORY_ITEMS = 'SET_INVENTORY_ITEMS';\r\nexport const SET_GROUND_ITEMS = 'SET_GROUND_ITEMS';\r\nexport const SET_INVENTORY_SLOTS = 'SET_INVENTORY_SLOTS';\r\nexport const SET_SNACKBAR = 'SET_SNACKBAR';\r\nexport const GET_INVENTORY_ITEMS = 'GET_INVENTORY_ITEMS';\r\n\r\nconst deleteInventoryItemById = (id: number) => {\r\n    return (dispatch, getState) => {\r\n        if (id === -1) {\r\n            return;\r\n        }\r\n\r\n        const { UI } = getState();\r\n        const { inventory } = UI;\r\n        const { items: inventoryItems } = inventory;\r\n        const invItems = [...inventoryItems];\r\n\r\n        invItems.splice(id, 1);\r\n        dispatch(\r\n            setInventoryItems(invItems)\r\n        );\r\n    };\r\n};\r\n\r\nconst addInventoryItem = () => {\r\n    return (dispatch, getState) => {\r\n        console.log('addInventoryItem getState', getState());\r\n    };\r\n};\r\n\r\nconst stackItems = (currentItemIndex: number, nextItemIndex: number) => {\r\n    return (dispatch, getState) => {\r\n        const { UI } = getState();\r\n        const { inventory } = UI;\r\n        const { items } = inventory;\r\n        const invItems = [...items];\r\n\r\n        if (currentItemIndex === -1 || nextItemIndex === -1) {\r\n            return;\r\n        }\r\n\r\n        const currentItem = {...items[currentItemIndex]};\r\n        const nextItem = {...items[nextItemIndex]};\r\n\r\n        if (currentItem.key !== nextItem.key) {\r\n            return;\r\n        }\r\n\r\n        const maxStackCount = currentItem.data.maxStackCount;\r\n        const sum = currentItem.amount + nextItem.amount;\r\n\r\n        console.log('maxStackCount', maxStackCount);\r\n        console.log('sum', sum);\r\n\r\n        if (sum > maxStackCount) {\r\n            const amount = sum - maxStackCount;\r\n            currentItem.amount = amount;\r\n            nextItem.amount = maxStackCount;\r\n            invItems.splice(currentItemIndex, 1, currentItem);\r\n            invItems.splice(nextItemIndex, 1, nextItem);\r\n        } else {\r\n            nextItem.amount = sum; \r\n            invItems.splice(currentItemIndex, 1, nextItem);\r\n            invItems.splice(nextItemIndex, 1);\r\n        }\r\n\r\n        dispatch({\r\n            type: SET_INVENTORY_ITEMS,\r\n            payload: invItems,\r\n        });\r\n    };\r\n};\r\n\r\nconst setInventorySlots = (slots: number) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_INVENTORY_SLOTS,\r\n            payload: slots,\r\n        })\r\n    };\r\n};\r\n\r\nconst setInventoryItems = (items: Item[]) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_INVENTORY_ITEMS,\r\n            payload: items,\r\n        })\r\n    };\r\n};\r\n\r\n// Разделяет предметы в инвентаре.\r\nconst splitInventoryItemByIndex = (itemId: number, splitCount: number) => {\r\n    return (dispatch, getState) => {\r\n        if (!Number.isInteger(splitCount)) {\r\n            return;\r\n        }\r\n\r\n        if (splitCount <= 0) {\r\n            return;\r\n        }\r\n\r\n        const { UI } = getState();\r\n        const { inventory } = UI;\r\n        const { items } = inventory;\r\n        const invItems = [...items];\r\n        const findItem = JSON.parse(JSON.stringify(invItems[itemId]));\r\n        const newItem = JSON.parse(JSON.stringify(findItem));\r\n        const item = invItems[itemId];\r\n\r\n        if (item.amount <= splitCount) {\r\n            return;\r\n        }\r\n\r\n        const amount = item.amount - splitCount;\r\n        findItem.amount = amount;\r\n        newItem.data.shortid = `__newItem${shortid.generate()}`;\r\n        newItem.amount = splitCount;\r\n    \r\n        invItems.splice(itemId, 1);\r\n        invItems.splice(itemId, 0, findItem, newItem);\r\n        dispatch(setInventoryItems(invItems));\r\n    };\r\n};\r\n\r\nconst setGroundItems = (items: Item[]) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_GROUND_ITEMS,\r\n            payload: items,\r\n        })\r\n    };\r\n};\r\n\r\nexport {\r\n    addInventoryItem,\r\n    setInventoryItems,\r\n    setInventorySlots,\r\n    setGroundItems,\r\n    stackItems,\r\n    splitInventoryItemByIndex,\r\n    deleteInventoryItemById,\r\n}","export enum HudType {\r\n    SET_HEALTH_HUDS = 'SET_HEALTH_HUDS',\r\n    SET_ARMOR_HUDS = 'SET_ARMOR_HUDS',\r\n    SET_HUNGER_HUDS = 'SET_HUNGER_HUDS',\r\n    SET_DEHYDRATION_HUDS = 'SET_DEHYDRATION_HUDS',\r\n    SET_TEMPERATURE_HUDS = 'SET_TEMPERATURE_HUDS',\r\n}\r\n\r\nfunction setHudsData(type: HudType, value: number) {\r\n    return (dispatch, getState) => {\r\n        \r\n        if (value > 100) {\r\n            value = 100;\r\n        }\r\n        if (value < 0) {\r\n            value = 0;\r\n        }\r\n        \r\n        dispatch({\r\n            type: type,\r\n            payload: value,\r\n        });                \r\n    };\r\n}\r\n\r\nexport {\r\n    setHudsData,\r\n}","import { LootCreateData } from \"../reducers/UIReducer\";\r\n\r\nexport const SET_LOOT_CREATE_DATA = 'SET_LOOT_CREATE_DATA';\r\n\r\nfunction setLootCreateData(data: LootCreateData) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_LOOT_CREATE_DATA,\r\n            payload: data,\r\n        });\r\n    };\r\n}\r\n\r\nexport enum PropType {\r\n    OBJECT_HASH = 'objectHash',\r\n    ROTATION = 'rotation',\r\n    POSITION = 'position',\r\n};\r\n\r\nfunction setPropLootCreateData(type: PropType, value: any) {\r\n    return (dispatch, getState) => {\r\n        const { UI } = getState();\r\n        const { lootCreate } = UI;\r\n\r\n        const loot = {...lootCreate};\r\n        loot[type] = value;\r\n\r\n        dispatch({\r\n            type: SET_LOOT_CREATE_DATA,\r\n            payload: loot,\r\n        })\r\n    };\r\n}\r\n\r\nexport {\r\n    setLootCreateData,\r\n    setPropLootCreateData,\r\n}","import { SET_INVENTORY_ITEMS, SET_GROUND_ITEMS, SET_INVENTORY_SLOTS, SET_SNACKBAR, GET_INVENTORY_ITEMS } from \"../actions/inventoryActions\";\r\nimport shortid from 'shortid';\r\nimport { Item, ItemKey, ItemType } from \"../types\";\r\nimport { ENQUEUE_SNACKBAR, CLOSE_SNACKBAR, REMOVE_SNACKBAR } from \"../actions/notificationActions\";\r\nimport { SET_DISPLAY_UI } from \"../actions/displayUIActions\";\r\nimport { HudType } from \"../actions/hudsDataActions\";\r\nimport { SET_LOOT_CREATE_DATA } from \"../actions/lootCreateDataActions\";\r\n\r\nexport type DisplayUI = {\r\n    huds: boolean;\r\n};\r\n\r\nexport type HudsData = {\r\n    health: number;\r\n    armor: number;\r\n    hunger: number;\r\n    dehydration: number;\r\n    temperature: number;\r\n    isBleeding: boolean;\r\n};\r\n\r\nexport type LootCreateData = {\r\n    objectId: number;\r\n    objectHash: string;\r\n    position: number[];\r\n    rotation: number[];\r\n};\r\n\r\nexport type UIState = {\r\n    lootCreate: LootCreateData;\r\n    hudsData: HudsData;\r\n    displayUI: DisplayUI;\r\n    notifications: any[];\r\n    inventory: {\r\n        slots: number;\r\n        items: Item[];\r\n    };\r\n    ground: {\r\n        items: Item[];\r\n    };\r\n}\r\n\r\nconst getData = (): Item[] => [\r\n    // {\r\n    //     key: ItemKey.ITEM_WEAPON_AK47, \r\n    //     amount: 1,\r\n    //     data: {\r\n    //         type: ItemType.WEAPON,\r\n    //         name: 'Kalash',\r\n    //         description: 'Убивац',\r\n    //         maxStackCount: 1,\r\n    //         serverId: shortid.generate(),\r\n    //         shortid: shortid.generate(),\r\n    //         isDelete: false,\r\n    //         weight: 4,\r\n    //     }\r\n    // },\r\n\r\n    // {\r\n    //     key: ItemKey.ITEM_AMMO_SHOTGUN, \r\n    //     amount: 25,\r\n    //     data: {\r\n    //         type: ItemType.COMMON,\r\n    //         name: 'SHOTGUN SHELL',\r\n    //         description: 'Пережаризац',\r\n    //         maxStackCount: 30,\r\n    //         serverId: shortid.generate(),\r\n    //         shortid: shortid.generate(),\r\n    //         isDelete: false,\r\n    //         weight: 0.1,\r\n    //     }\r\n    // },\r\n\r\n    // {\r\n    //     key: ItemKey.ITEM_ARMOR, \r\n    //     amount: 1, \r\n    //     data: {\r\n    //         type: ItemType.ARMOR,\r\n    //         name: 'ARMOR',\r\n    //         description: 'Защищац',\r\n    //         maxStackCount: 1,\r\n    //         serverId: shortid.generate(),\r\n    //         shortid: shortid.generate(),\r\n    //         isDelete: false,\r\n    //         weight: 6,\r\n    //     }\r\n    // },\r\n\r\n    // {\r\n    //     key: ItemKey.ITEM_CLOTHES_MASK_1, \r\n    //     amount: 1, \r\n    //     data: {\r\n    //         type: ItemType.CLOTHES,\r\n    //         name: 'Маска 1',\r\n    //         description: 'Одевац',\r\n    //         maxStackCount: 1,\r\n    //         serverId: shortid.generate(),\r\n    //         shortid: shortid.generate(),\r\n    //         isDelete: true,\r\n    //         weight: 2,\r\n    //     }\r\n    // },\r\n];\r\n\r\nconst initialState: UIState = {\r\n    lootCreate: {\r\n        objectId: 0,\r\n        objectHash: 'w_sg_pumpshotgun',\r\n        position: [0, 0, 0],\r\n        rotation: [0, 0, 0],\r\n    },\r\n    hudsData: {\r\n        health: 100,\r\n        armor: 100,\r\n        hunger: 100,\r\n        dehydration: 100,\r\n        temperature: 100,\r\n        isBleeding: true,\r\n    },\r\n    displayUI: {\r\n        huds: false,\r\n    },\r\n    notifications: [],\r\n    inventory: {\r\n        slots: 10,\r\n        items: [],\r\n    },\r\n    ground: {\r\n        items: getData(),\r\n    },\r\n};\r\n\r\nfunction UIReducer(state: UIState = initialState, action: any) {\r\n    switch (action.type) {\r\n        case SET_LOOT_CREATE_DATA:\r\n            return {\r\n                ...state,\r\n                lootCreate: { ...action.payload },\r\n            };\r\n\r\n        case HudType.SET_TEMPERATURE_HUDS:\r\n            return {\r\n                ...state,\r\n                hudsData: {\r\n                    ...state.hudsData,\r\n                    temperature: action.payload,\r\n                },\r\n            };\r\n\r\n        case HudType.SET_HUNGER_HUDS:\r\n            return {\r\n                ...state,\r\n                hudsData: {\r\n                    ...state.hudsData,\r\n                    hunger: action.payload,\r\n                },\r\n            };\r\n\r\n        case HudType.SET_DEHYDRATION_HUDS:\r\n            return {\r\n                ...state,\r\n                hudsData: {\r\n                    ...state.hudsData,\r\n                    dehydration: action.payload,\r\n                },\r\n            };\r\n\r\n        case HudType.SET_ARMOR_HUDS:\r\n            return {\r\n                ...state,\r\n                hudsData: {\r\n                    ...state.hudsData,\r\n                    armor: action.payload,\r\n                },\r\n            };\r\n\r\n        case HudType.SET_HEALTH_HUDS:\r\n            return {\r\n                ...state,\r\n                hudsData: {\r\n                    ...state.hudsData,\r\n                    health: action.payload,\r\n                },\r\n            };\r\n\r\n        case SET_DISPLAY_UI:\r\n            return {\r\n                ...state,\r\n                displayUI: action.payload,\r\n            };\r\n\r\n        case ENQUEUE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                notifications: [\r\n                    ...state.notifications,\r\n                    {\r\n                        key: action.key,\r\n                        ...action.notification,\r\n                    },\r\n                ],\r\n            };\r\n\r\n        case CLOSE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                notifications: state.notifications.map(notification => (\r\n                    (action.dismissAll || notification.key === action.key)\r\n                        ? { ...notification, dismissed: true }\r\n                        : { ...notification }\r\n                )),\r\n            };\r\n\r\n        case REMOVE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                notifications: state.notifications.filter(\r\n                    notification => notification.key !== action.key,\r\n                ),\r\n            };\r\n\r\n        case SET_SNACKBAR:\r\n            return { ...state, snackbar: {...action.payload} };\r\n\r\n        case SET_INVENTORY_ITEMS:\r\n            state.inventory.items = action.payload;\r\n            return { ...state };\r\n\r\n        case SET_INVENTORY_SLOTS:\r\n            state.inventory.slots = action.payload;\r\n            return { ...state }\r\n\r\n        case SET_GROUND_ITEMS:\r\n            return { ...state, ground: { items: action.payload } };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    UIReducer,\r\n}","import { DisplayUI } from \"../reducers/UIReducer\";\r\n\r\nexport const SET_DISPLAY_UI = 'SET_DISPLAY_UI';\r\n\r\nfunction setDisplayUI(displayUI: DisplayUI) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_DISPLAY_UI,\r\n            payload: displayUI,\r\n        })\r\n    };\r\n}\r\n\r\nexport {\r\n    setDisplayUI,\r\n}","import { SET_SHOW } from \"../actions/clothesActions\";\r\n\r\nexport type ClothesState = {\r\n    isShow: boolean;\r\n}\r\n\r\nconst initialState: ClothesState = {\r\n    isShow: true,\r\n};\r\n\r\nfunction ClothesReducer(state: ClothesState = initialState, action: any) {\r\n    switch (action.type) {\r\n        case SET_SHOW:\r\n            return { ...state, isShow: action.payload };\r\n\r\n        default:\r\n            return { ...state };\r\n            \r\n    }\r\n}\r\n\r\nexport {\r\n    ClothesReducer,\r\n}","export const SET_SHOW = 'IS_SHOW';\r\n\r\nfunction setShow(bool: boolean) {\r\n    return (dispatch, getState) => {\r\n\r\n        console.log('setShow', bool);\r\n\r\n        dispatch({\r\n            type: SET_SHOW,\r\n            payload: bool,\r\n        });\r\n    };\r\n}\r\n\r\nexport {\r\n    setShow,\r\n}","export const SET_INITIAL_CHARACTER_STATE = 'SET_INITIAL_CHARACTER_STATE';\r\nexport const SET_FACE_FEATURE = 'SET_FACE_FEATURE';\r\nexport const SET_PARENT_INDEX = 'SET_PARENT_INDEX';\r\nexport const SET_HEAD_PROP = 'SET_HEAD_PROP';\r\nexport const SET_HAIR_ID = 'SET_HAIR_ID';\r\nexport const SET_GENDER = 'SET_GENDER';\r\nexport const SET_HAIR_COLOR = 'SET_HAIR_COLOR';\r\nexport const SET_HEAD_OVERLAY_PROP = 'SET_HEAD_OVERLAY_PROP';\r\nexport const SET_EYES_COLOR = 'SET_EYES_COLOR';\r\n\r\nfunction setEyesColor(id: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_EYES_COLOR,\r\n            payload: id,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setHeadOverlayProp(overlayId: number, index: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_HEAD_OVERLAY_PROP,\r\n            index,\r\n            overlayId,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setHairColor(id: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_HAIR_COLOR,\r\n            payload: id,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setGender(gender: 'male' | 'female') {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_GENDER,\r\n            payload: gender,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setHairId(id: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_HAIR_ID,\r\n            payload: id,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setInitialCharacter() {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_INITIAL_CHARACTER_STATE,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setFaceFeature(index: number, feature: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_FACE_FEATURE,\r\n            faceIndex: index,\r\n            feature: feature,\r\n        })\r\n    };\r\n}\r\n\r\nfunction setParentIndex(parent: string, index: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_PARENT_INDEX,\r\n            parent: parent,\r\n            index: index,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setHeadProp(name: string, value: number) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_HEAD_PROP,\r\n            name,\r\n            value,\r\n        });\r\n    };\r\n}\r\n\r\nexport {\r\n    setInitialCharacter,\r\n    setFaceFeature,\r\n    setParentIndex,\r\n    setHeadProp,\r\n    setHairId,\r\n    setGender,\r\n    setHairColor,\r\n    setHeadOverlayProp,\r\n    setEyesColor,\r\n}","import { SET_FACE_FEATURE, SET_INITIAL_CHARACTER_STATE, SET_PARENT_INDEX, SET_HEAD_PROP, SET_HAIR_ID, SET_GENDER, SET_HAIR_COLOR, SET_HEAD_OVERLAY_PROP, SET_EYES_COLOR } from \"../actions/characterActions\";\r\n\r\nexport type FaceType = {\r\n        index: number;\r\n        feature: number;\r\n        name: string;\r\n}; \r\n\r\nexport type HeadType = {\r\n    mother: {\r\n        index: number;\r\n    };\r\n    father: {\r\n        index: number;\r\n    };\r\n};\r\n\r\nexport type CharacterState = {\r\n    defaultState: {\r\n        face: FaceType[];\r\n        head: HeadType;\r\n        similarity: number;\r\n        skin: number;\r\n        hair: number;\r\n        gender: 'male' | 'female';\r\n        hairColorId: number;\r\n        headOverlay: HeadOverlay[];\r\n        eyes: number;\r\n    };\r\n\r\n    face: FaceType[];\r\n    head: HeadType;\r\n    similarity: number;\r\n    skin: number;\r\n    hair: number;\r\n    gender: 'male' | 'female';\r\n    hairColorId: number;\r\n    headOverlay: HeadOverlay[];\r\n    eyes: number;\r\n};\r\n\r\nexport type HeadOverlay = {\r\n    overlayId: number;\r\n    index: number;\r\n    name: string;\r\n};\r\n\r\nconst defaultHead: HeadType = {\r\n    father: { index: 0 },\r\n    mother: { index: 0 },\r\n};\r\n\r\nconst defaultFace: FaceType[] = [\r\n    { index: 0, feature: -1.0, name: 'Ширина носа' },\r\n    { index: 1, feature: -1.0, name: 'Высота носа' },\r\n    { index: 2, feature: -1.0, name: 'Длина кончика носа' },\r\n    { index: 3, feature: -1.0, name: 'Глубина моста носа' },\r\n    { index: 4, feature: -1.0, name: 'Высота кончика носа' },\r\n    { index: 5, feature: -1.0, name: 'Поломаность носа' },\r\n    { index: 6, feature: -1.0, name: 'Высота бровей' },\r\n    { index: 7, feature: -1.0, name: 'Глубина бровей' },\r\n    { index: 8, feature: -1.0, name: 'Высота скул' },\r\n    { index: 9, feature: -1.0, name: 'Ширина скул' },\r\n    { index: 10, feature: -1.0, name: 'Глубина щек' },\r\n    { index: 11, feature: -1.0, name: 'Размер глаз' },\r\n    { index: 12, feature: -1.0, name: 'Толщина глуб' },\r\n    { index: 13, feature: -1.0, name: 'Ширина челюсти' },\r\n    { index: 14, feature: -1.0, name: 'Форма челюсти' },\r\n    { index: 15, feature: -1.0, name: 'Высота подбородка' },\r\n    { index: 16, feature: -1.0, name: 'Глубина подбородка' },\r\n    { index: 17, feature: -1.0, name: 'Ширина подбородка' },\r\n    { index: 18, feature: -1.0, name: 'Подбородочный отступ' },\r\n    { index: 19, feature: -1.0, name: 'Обхват шеи' },\r\n];\r\n\r\nconst defaultHeadOverlay = [\r\n    { overlayId: 0, index: 0, name: 'Физические деффекты' },\r\n    { overlayId: 1, index: 0, name: 'Волосы на лице' },\r\n    { overlayId: 2, index: 0, name: 'Брови' },\r\n    { overlayId: 3, index: 0, name: 'Старение' },\r\n    { overlayId: 4, index: 0, name: 'Грим' },\r\n    { overlayId: 5, index: 0, name: 'Румянец' },\r\n    { overlayId: 6, index: 0, name: 'Цвет лица' },\r\n    { overlayId: 7, index: 0, name: 'Загар' },\r\n    { overlayId: 8, index: 0, name: 'Губы' },\r\n    { overlayId: 9, index: 0, name: 'Родинки/веснушки' },\r\n    { overlayId: 10, index: 0, name: 'Волосы на груди' },\r\n    { overlayId: 11, index: 0, name: 'Пятна на теле' },\r\n    { overlayId: 12, index: 0, name: 'Оставить пятна на теле?' },\r\n];\r\n\r\nconst initialState: CharacterState = {\r\n    defaultState: {\r\n        headOverlay: JSON.parse(JSON.stringify(defaultHeadOverlay)),\r\n        face: JSON.parse(JSON.stringify(defaultFace)),\r\n        head: JSON.parse(JSON.stringify(defaultHead)),\r\n        similarity: 0.5,\r\n        skin: 0.5,\r\n        hair: 0,\r\n        gender: 'male',\r\n        hairColorId: 0,\r\n        eyes: 0,\r\n    },\r\n    headOverlay: defaultHeadOverlay,\r\n    head: {...defaultHead},\r\n    face: [...defaultFace],\r\n    similarity: 0.5,\r\n    skin: 0.5,\r\n    hair: 0,\r\n    gender: 'male',\r\n    hairColorId: 0,\r\n    eyes: 0,\r\n};\r\n\r\nfunction characterReducer(state = initialState, action: any) {\r\n    switch (action.type) {\r\n\r\n        case SET_EYES_COLOR: {\r\n            state.eyes = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n\r\n        case SET_HEAD_OVERLAY_PROP: {\r\n            state.headOverlay[action.overlayId].index = action.index;\r\n\r\n            return {\r\n                ...state,\r\n            }        \r\n        }\r\n\r\n        case SET_HAIR_COLOR: {\r\n            return {\r\n                ...state,\r\n                hairColorId: action.payload,\r\n            }\r\n        }\r\n\r\n        case SET_GENDER: {\r\n            state.gender = action.payload;\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n\r\n        case SET_HAIR_ID: {\r\n            state.hair = action.payload;\r\n            return {\r\n                ...state,\r\n            }   \r\n        }\r\n\r\n        case SET_HEAD_PROP: {\r\n            return {\r\n                ...state,\r\n                [action.name]: action.value,\r\n            }\r\n        }\r\n\r\n        case SET_PARENT_INDEX: {\r\n            state.head[action.parent].index = action.index;\r\n\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n\r\n        case SET_FACE_FEATURE:\r\n            const characterState = {...state};\r\n            const face = {...characterState.face};\r\n            const faceIndex = action.faceIndex;\r\n            const feature = action.feature;\r\n            face[faceIndex].feature = feature;\r\n\r\n            return {\r\n                ...characterState,\r\n            }\r\n\r\n        case SET_INITIAL_CHARACTER_STATE: {\r\n            return {\r\n                ...state,\r\n                ...JSON.parse(JSON.stringify(state.defaultState)),\r\n            }\r\n        }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    characterReducer,\r\n}","export const UPDATE_REGISTER_PROP = 'UPDATE_REGISTER_PROP';\r\nexport const SET_REGISTER = 'SET_REGISTER';\r\n\r\nfunction updateAuthProp(prop: string, subProp: string, value: any) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: UPDATE_REGISTER_PROP,\r\n            prop,\r\n            subProp,\r\n            value,\r\n        });\r\n    };\r\n}\r\n\r\nfunction setRegister(register: any) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_REGISTER,\r\n            payload: register\r\n        });\r\n    };\r\n}\r\n\r\nexport {\r\n    updateAuthProp,\r\n    setRegister,\r\n}","import { UPDATE_REGISTER_PROP, SET_REGISTER } from \"../actions/authActions\";\r\n\r\nexport type AuthState = {\r\n    register: {\r\n        login: {\r\n            val: string;\r\n            isValid: boolean;\r\n            isTouch: boolean,\r\n            regular: RegExp;\r\n        };\r\n        password: {\r\n            val: string;\r\n            isValid: boolean;\r\n            isTouch: boolean,\r\n            regular: RegExp;\r\n        };\r\n        confirmPassword: {\r\n            val: string;\r\n            isTouch: boolean,\r\n            isValid: boolean;\r\n        };\r\n        email: {\r\n            val: string;\r\n            isValid: boolean\r\n            isTouch: boolean,\r\n            regular: RegExp,\r\n        }\r\n    },\r\n}\r\n\r\nconst initialState: AuthState = {\r\n    register: {\r\n        login: {\r\n            val: '',\r\n            isValid: false,\r\n            isTouch: false,\r\n            regular: /^[a-zA-Z0-9_-]{3,16}$/,\r\n        },\r\n        password: {\r\n            val: '',\r\n            isValid: false,\r\n            isTouch: false,\r\n            regular: /^[0-9a-zA-Z!@#$%^&*]{6,30}$/,\r\n        },\r\n        email: {\r\n            val:'',\r\n            isValid: false,\r\n            isTouch: false,\r\n            regular: /.+@.+\\..+/i,\r\n        },\r\n        confirmPassword: {\r\n            val: '',\r\n            isValid: false,\r\n            isTouch: false,\r\n        }\r\n    }\r\n};\r\n\r\nfunction authReducer(state = initialState, action: any) {\r\n    switch (action.type) {\r\n        case UPDATE_REGISTER_PROP: {\r\n            state.register[action.prop][action.subProp] = action.value;\r\n            \r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n\r\n        case SET_REGISTER: {\r\n            const newState = {...state};\r\n            newState.register = action.payload;\r\n\r\n            return {\r\n                ...newState,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    authReducer,\r\n}","import { combineReducers } from \"redux\";\r\nimport { UIReducer, UIState } from \"./UIReducer\";\r\nimport { ClothesReducer, ClothesState } from \"./clothesReducer\";\r\nimport { connectRouter } from 'connected-react-router'\r\nimport { characterReducer, CharacterState } from \"./characterReducer\";\r\nimport { authReducer, AuthState } from \"./authReducer\";\r\n\r\nexport type State = {\r\n    character: CharacterState;\r\n    UI: UIState;\r\n    clothes: ClothesState;\r\n    auth: AuthState;\r\n}\r\n\r\nconst createRootReducer = (history) => combineReducers({\r\n    auth: authReducer,\r\n    character: characterReducer,\r\n    UI: UIReducer,\r\n    clothes: ClothesReducer,\r\n    router: connectRouter(history),\r\n  });\r\n\r\nexport {\r\n    createRootReducer,\r\n}","import EventEmitter from 'wolfy87-eventemitter';\r\n\r\nconst emitter: any = new EventEmitter();\r\n\r\nexport {\r\n    emitter,\r\n}","import { createMemoryHistory  } from 'history';\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { createRootReducer } from \"../reducers\";\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { PlayerEvents } from '../helpers/playerEvents';\r\n\r\nconst history = createMemoryHistory({\r\n    initialEntries: [ '/one', '/two', { pathname: '/three' } ],\r\n    initialIndex: 1\r\n});\r\n\r\nconst store = createStore(\r\n    createRootReducer(history), \r\n    compose(\r\n        applyMiddleware(\r\n            routerMiddleware(history),\r\n            thunk, \r\n            logger,\r\n        ),\r\n    ),\r\n);\r\n\r\nconsole.log('store', store);\r\n\r\nPlayerEvents(store.dispatch, store.getState);\r\n\r\nexport {\r\n    history,\r\n    store,\r\n}","import { push } from 'connected-react-router';\r\nimport { emitter } from '../emitter';\r\nimport { Item } from '../../types';\r\nimport { setGroundItems, setInventorySlots } from '../../actions/inventoryActions';\r\nimport { enqueueSnackbar } from '../../actions/notificationActions';\r\nimport { NotifyOrigin } from '../../actions/notificationActions';\r\nimport { DisplayUI } from '../../reducers/UIReducer';\r\nimport { setDisplayUI } from '../../actions/displayUIActions';\r\nimport { setHudsData, HudType } from '../../actions/hudsDataActions';\r\n\r\nfunction PlayerEvents(dispatch, getState) {\r\n    emitter.on('goToClear', () => {\r\n        dispatch(push('/clear'));\r\n    });\r\n\r\n    emitter.on('goToUIItems', () => {\r\n        dispatch(push('/UIItems'));\r\n    });\r\n\r\n    emitter.on('goToEntityCreate', () => {\r\n        dispatch(push('/goToEntityCreate'));\r\n    });\r\n\r\n    emitter.on('eventSetGroundItems', (items: Item[]) => {\r\n        dispatch(setGroundItems(items));\r\n    });\r\n\r\n    emitter.on('setNotify', (msg: string, variant: string, origin: NotifyOrigin) => {\r\n        dispatch(enqueueSnackbar({\r\n            message: msg,\r\n            options: {\r\n                key: new Date().getTime() + Math.random(),\r\n                variant: variant,\r\n                anchorOrigin: {\r\n                    vertical: origin.vertical,\r\n                    horizontal: origin.horizontal,\r\n                },\r\n            },\r\n        }));\r\n    });\r\n\r\n    emitter.on('cef_set_display_ui', (displayUI: DisplayUI) => {\r\n        dispatch(setDisplayUI(displayUI));\r\n    });\r\n\r\n    emitter.on('change_UI', (name: string) => {\r\n        dispatch(push(`/${name}`));\r\n    });\r\n\r\n    emitter.on('cef_set_health_huds', (health: number) => {\r\n        dispatch(\r\n            setHudsData(HudType.SET_HEALTH_HUDS, health)\r\n        );\r\n    });\r\n\r\n    emitter.on('cef_set_armor_huds', (armor: number) => {\r\n        dispatch(\r\n            setHudsData(HudType.SET_ARMOR_HUDS, armor)\r\n        );\r\n    });\r\n\r\n    emitter.on('cef_set_hunger_huds', (hunger: number) => {\r\n        dispatch(\r\n            setHudsData(HudType.SET_HUNGER_HUDS, hunger)\r\n        );\r\n    });\r\n\r\n    emitter.on('cef_set_dehydration_huds', (hunger: number) => {\r\n        dispatch(\r\n            setHudsData(HudType.SET_DEHYDRATION_HUDS, hunger)\r\n        );\r\n    });\r\n\r\n    emitter.on('cef_set_inventory_weight', (weight: number) => {\r\n        dispatch(\r\n            setInventorySlots(weight)\r\n        );\r\n    });\r\n}\r\n\r\nexport {\r\n    PlayerEvents,\r\n}","/* ОПИСАНИЕ ПРЕДМЕТА */\r\nexport interface BodyArmourData extends ItemData {\r\n    defence?: number;\r\n}\r\n\r\nexport interface WeaponData extends ItemData {\r\n    clip?: number;\r\n}\r\n\r\n/* ОПИСАНИЕ ПРЕДМЕТА */\r\nexport enum ItemType {\r\n    WEAPON = 'WEAPON',\r\n    ARMOR = 'ARMOR',\r\n    COMMON = 'COMMON',\r\n    CLOTHES = 'CLOTHES',\r\n}\r\n\r\nexport enum ItemKey {\r\n    ITEM_WEAPON_AK47 = 'ITEM_WEAPON_AK47',\r\n    ITEM_ARMOR = 'ITEM_ARMOR',\r\n    ITEM_AMMO_SHOTGUN = 'ITEM_AMMO_SHOTGUN',\r\n    ITEM_CLOTHES_MASK_1 = 'ITEM_CLOTHES_MASK_1',\r\n    ITEM_CLOTHES_MASK_2 = 'ITEM_CLOTHES_MASK_2',\r\n    ITEM_CLOTHES_MASK_3 = 'ITEM_CLOTHES_MASK_3',\r\n    ITEM_CLOTHES_MASK_4 = 'ITEM_CLOTHES_MASK_4',\r\n    ITEM_CLOTHES_MASK_5 = 'ITEM_CLOTHES_MASK_5',\r\n}\r\n\r\nexport type Item = {\r\n    key: ItemKey;\r\n    amount: number;\r\n    data: ItemData;\r\n}\r\n\r\nexport type ItemData = {\r\n    type: ItemType;\r\n    name: string; // Название предмета.\r\n    description: string;\r\n    maxStackCount: number; // Максимальный стак предмета.\r\n    weight: number; // Вес предмета (1 шт).\r\n    serverId: string;\r\n    shortid: string;\r\n    isDelete: boolean; // Удалить после использования?\r\n}\r\n\r\nexport interface DataBodyArmour extends ItemData {\r\n    defence?: number;\r\n}\r\n\r\nexport interface DataWeapon extends ItemData {\r\n    clip?: number;\r\n}\r\n\r\nexport interface DataBackpack extends ItemData {\r\n    slots: number;\r\n}","import img_item_weapon_ak47 from '../assets/items/item_weapon_ak47.png';\r\nimport img_item_armor from '../assets/items/item_armor.png';\r\nimport img_item_ammo_shotgun from '../assets/items/item_ammo_shotgun.png';\r\nimport item_clothes_mask_1 from '../assets/items/item_clothes_mask_1.jpg';\r\nimport item_clothes_mask_2 from '../assets/items/item_clothes_mask_2.jpg';\r\nimport item_clothes_mask_3 from '../assets/items/item_clothes_mask_3.jpg';\r\nimport item_clothes_mask_4 from '../assets/items/item_clothes_mask_4.jpg';\r\nimport item_clothes_mask_5 from '../assets/items/item_clothes_mask_5.jpg';\r\nimport { ItemKey } from '../types';\r\n\r\nconst images = {\r\n    [ItemKey.ITEM_WEAPON_AK47]: img_item_weapon_ak47,\r\n    [ItemKey.ITEM_ARMOR]: img_item_armor,\r\n    [ItemKey.ITEM_AMMO_SHOTGUN]: img_item_ammo_shotgun,\r\n    [ItemKey.ITEM_CLOTHES_MASK_1]: item_clothes_mask_1,\r\n    [ItemKey.ITEM_CLOTHES_MASK_2]: item_clothes_mask_2,\r\n    [ItemKey.ITEM_CLOTHES_MASK_3]: item_clothes_mask_3,\r\n    [ItemKey.ITEM_CLOTHES_MASK_4]: item_clothes_mask_4,\r\n    [ItemKey.ITEM_CLOTHES_MASK_5]: item_clothes_mask_5,\r\n};\r\n\r\nconst getItemImage = (itemKey: ItemKey) => images[itemKey];\r\n\r\nexport {\r\n    getItemImage,\r\n}","import rpc, { call, callClient, callServer } from 'rage-rpc';\r\nimport { LootCreateData } from '../../reducers/UIReducer';\r\n\r\ntype Result = {\r\n    result: boolean;\r\n    text: string;\r\n}\r\n\r\nexport type HeadPropType = {name: 'mother' | 'father' | 'skin' | 'similarity', val: number};\r\n\r\ntype CharacterType = {\r\n    gender: string;\r\n    face: any[];\r\n    head: any;\r\n    eyes: number;\r\n};\r\n\r\n// Подбор предмета с земли.\r\nasync function takeInventoryItemToServer(serverId: string, amount: number): Promise<Result> {\r\n    return callServer('server_take_inventory_item', JSON.stringify({ serverId, amount }));\r\n    return { result: true, text: '\"Взять предмет\". Заглушка' };\r\n}\r\n// Дропает предмет из инвентаря.\r\nasync function dropInventoryItemToServer(itemKey: string, amount: number): Promise<Result> {\r\n    return callServer('server_drop_inventory_item', JSON.stringify({itemKey, amount}));\r\n    return { result: true, text: '\"Выбосить предмет\". Заглушка' };\r\n}\r\n// Отправка на сервак serverId чтобы использовать предмет в инвентаре по нему.\r\nasync function usesInventoryItemByServerId(serverId: string): Promise<Result> {\r\n    return callServer('server_use_item_by_serverid', serverId);\r\n    return { result: true, text: '\"Использование предмета\". Заглушка.' };\r\n}\r\n\r\n// Создает на клиенте объект с указанным хэшем и возвращает данные о нем.\r\nasync function lootCreate(objectHash: string): Promise<LootCreateData | false> {\r\n    return callClient('client_set_loot_create', objectHash);\r\n    return {\r\n        objectId: 0,\r\n        objectHash: 'w_ar_assaultrifle',\r\n        position: [2, 32, 2320],\r\n        rotation: [120, 231, 3],\r\n    };\r\n}\r\n\r\nasync function setLootCreateRotation(pos: number[]): Promise<any> {\r\n    return callClient('client_set_loot_create_rotation', pos);\r\n}\r\n\r\nasync function setLootCreateHash(hash: string): Promise<any> {\r\n    return callClient('client_set_loot_create_hash', hash);\r\n}\r\n\r\n// Отправляет данные на сервер для регистрации.\r\nasync function serverRegister(login: string, email: string, password: string): Promise<Result> {\r\n    return callServer('server_register', {login, email, password});\r\n    return { result: true, text: 'Вы успешно зарегистрировались!' };\r\n}\r\n\r\n// Отправляет данные на сервер для авторизации.\r\nasync function serverLogin(login: string, password: string): Promise<Result> {\r\n    return callServer('server_login', {login, password});\r\n    // return { result: true, text: 'Вы успешно авторизовались!' };\r\n}\r\n\r\n// Изменяет положение игрока на клиенте.\r\nasync function setCharacterHeading(h: number): Promise<any> {\r\n    return callClient('client_character_set_heading', h);\r\n}\r\n\r\n// Меняет хар-ки лица на клиенте.\r\nasync function setCharacterFaceFeature(index: number, feature: number): Promise<any> {\r\n    return callClient('client_character_set_face', {index, feature});\r\n}\r\n\r\n// Меняет пол на клиенте.\r\nasync function setCharacterGender(gender: 'male' | 'female'): Promise<any> {\r\n    return callClient('client_character_set_gender', gender);\r\n}\r\n\r\nasync function setCharacterHeadProp(data: HeadPropType): Promise<any> {\r\n    return callClient('client_character_set_head_prop', data);\r\n}\r\n\r\nasync function resetCharacter(): Promise<any> {\r\n    return callClient('client_character_reset');\r\n}\r\n\r\nasync function setCharacterHair(dId: number) {\r\n    return callClient('client_character_set_hair', dId);\r\n}\r\n\r\nasync function setCharacterCamera(coord: 'x' | 'y' | 'z', n: number) {\r\n    return callClient('client_character_set_camera_pos', {coord, n});\r\n}\r\n\r\nasync function setCharacterReady() {\r\n    return callClient('client_character_ready');\r\n}\r\n\r\nasync function setCharacterHairColor(id: number): Promise<any> {\r\n    return callClient('client_character_set_hair_color', id);\r\n}\r\n\r\nasync function setCharacterHeadOverlay(overlayId: number, index: number): Promise<any> {\r\n    return callClient('client_character_set_overlay', {overlayId, index});\r\n}\r\n\r\nasync function setCharacterEyes(val: number) {\r\n    return callClient('client_Character_set_eyes', val);\r\n}\r\n\r\nasync function updateCharacterCameraPosition() {\r\n    return callClient('update_character_camera_position');\r\n}\r\n\r\nasync function serverCheckLogin(login: string): Promise<{result: boolean; text: string}> {\r\n    return callServer('server_check_login', login);\r\n    return {result: false, text: 'pizda vcem'};\r\n}\r\n\r\nasync function serverCharacterReady(data: {login: string; email: string; password: string}) {\r\n    return callServer('server_character_ready', data);\r\n    return { text: 'test', result: true };\r\n}\r\n\r\nexport type CharactersDataResult = {\r\n    maxCharacters: number;\r\n    hasCharacters: number;\r\n};\r\n\r\nexport type CharactersServerResult = {\r\n    result: boolean; \r\n    text: string; \r\n    data: CharactersDataResult;\r\n};\r\n\r\nexport {\r\n    takeInventoryItemToServer,\r\n    dropInventoryItemToServer,\r\n    usesInventoryItemByServerId,\r\n\r\n    lootCreate,\r\n    setLootCreateRotation,\r\n    setLootCreateHash,\r\n\r\n    serverRegister,\r\n    serverLogin,\r\n    serverCheckLogin,\r\n    serverCharacterReady,\r\n\r\n    setCharacterHeading,\r\n    setCharacterFaceFeature,\r\n    setCharacterGender,\r\n    setCharacterHeadProp,\r\n    resetCharacter,\r\n    setCharacterHair,\r\n    setCharacterCamera,\r\n    setCharacterReady,\r\n    setCharacterHairColor,\r\n    setCharacterHeadOverlay,\r\n    setCharacterEyes,\r\n\r\n    updateCharacterCameraPosition,\r\n}","import React, { useState } from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { MdCallSplit } from \"react-icons/md\";\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { splitInventoryItemByIndex, setInventoryItems, setGroundItems } from '../../../../../actions/inventoryActions';\r\nimport { UIState } from '../../../../../reducers/UIReducer';\r\nimport { Item } from '../../../../../types';\r\nimport { State } from '../../../../../reducers';\r\nimport { takeInventoryItemToServer } from '../../../../../helpers/playerEvents/rpcCall';\r\nimport { enqueueSnackbar, NotifyVariant } from '../../../../../actions/notificationActions';\r\nimport shortid from 'shortid';\r\nconst groundShortString = 'groundCells__';\r\nconst inventoryShortString = 'inventoryCells_';\r\n\r\ntype Props = {\r\n    item: Item;\r\n    isInventory?: boolean;\r\n    onPopClose: () => any;\r\n}\r\n\r\nfunction TabSplitComponent(props: Props) {\r\n    const { item, isInventory } = props;\r\n    const UIState = useSelector((state: any): UIState => {\r\n        return state.UI || [];\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const { inventory, ground } = UIState;\r\n    const { items: inventoryItems } = inventory;\r\n    const { items: groundItems } = ground;\r\n    const amount = item.amount;\r\n    const maxSplit = amount - 1;\r\n    \r\n    const [inputValue, setInputValue] = useState<any>(maxSplit);\r\n\r\n    const checkRangeValue = (value: number) => {\r\n        if (!Number.isInteger(value) || isNaN(value)) {\r\n            setInputValue(0);\r\n        }\r\n        \r\n        if (value > maxSplit) {\r\n            setInputValue(maxSplit);\r\n        } \r\n\r\n        if (value < maxSplit) {\r\n            setInputValue(value);\r\n        }\r\n\r\n        if (value < 0) {\r\n            setInputValue(0);\r\n        }\r\n    };\r\n\r\n    const onSliderChange = (event: any, value: number | number[]) => {\r\n        if (typeof value !== 'number') {\r\n            return;\r\n        }\r\n\r\n        checkRangeValue(value);\r\n        console.log('-> onSliderChange value', value);\r\n\r\n        if (typeof value === 'number') {\r\n            setInputValue(value);\r\n        }\r\n    };\r\n\r\n    const onInputChange = (event: any) => { \r\n        const value = parseInt(event.target.value);\r\n        checkRangeValue(value);\r\n    };\r\n\r\n    const onIconBtnClick = async (event: any) => {\r\n        // Если предмет принадлежит инвентарю.\r\n        if (isInventory) {\r\n            const idx = inventoryItems.findIndex((i) => i === item);\r\n            console.log('onIconBtnClick idx', idx);\r\n\r\n            if (idx !== -1) {\r\n                dispatch(\r\n                    splitInventoryItemByIndex(idx, inputValue)\r\n                );\r\n            }\r\n\r\n            props.onPopClose();\r\n        } else {            \r\n            props.onPopClose();\r\n\r\n            const idx = groundItems.findIndex((i) => i === item);\r\n            if (idx !== -1) {\r\n                if (inputValue <= 0) {\r\n                    props.onPopClose();\r\n                    return;\r\n                }\r\n\r\n                // Взять указанное количество предметов.\r\n                const serverResult = await takeInventoryItemToServer(item.data.serverId, inputValue);    \r\n                if (serverResult.result) {\r\n                    console.log('Взять указанное кол-во', item);\r\n\r\n                    const groundItem = JSON.parse(JSON.stringify(groundItems[idx]));\r\n                    const inventoryItem = JSON.parse(JSON.stringify(groundItem));\r\n\r\n                    const amount = groundItem.amount - inputValue;\r\n                    if (amount > 0) {\r\n                        groundItems[idx].amount = amount;\r\n                        // groundItems[idx].data.shortid = `${groundShortString}${shortid.generate()}`;\r\n                        inventoryItem.amount = inputValue;\r\n                        inventoryItem.data.shortid = `${inventoryShortString}${shortid.generate()}`;\r\n                        inventoryItems.unshift(inventoryItem);\r\n                    }\r\n            \r\n                    if (amount <= 0) {\r\n                        console.log('amount <= 0');\r\n                        groundItems.splice(idx, 1);\r\n                        inventoryItem.amount = groundItem.amount;\r\n                        inventoryItems.unshift(inventoryItem);\r\n                    }\r\n            \r\n                    dispatch(\r\n                        setInventoryItems(JSON.parse(JSON.stringify(inventoryItems)))\r\n                    );\r\n                    dispatch(\r\n                        setGroundItems(groundItems)\r\n                    );\r\n                    dispatch(\r\n                        enqueueSnackbar({\r\n                            message: serverResult.text,\r\n                                options: {\r\n                                    key: new Date().getTime() + Math.random(),\r\n                                    variant: NotifyVariant.DEFAULT,\r\n                                    anchorOrigin: {\r\n                                        horizontal: 'center',\r\n                                        vertical: 'bottom',\r\n                                    }\r\n                            },\r\n                        })\r\n                    );\r\n                } else {\r\n                    dispatch(\r\n                        enqueueSnackbar({\r\n                            message: serverResult.text,\r\n                                options: {\r\n                                    key: new Date().getTime() + Math.random(),\r\n                                    variant: NotifyVariant.ERROR,\r\n                                    anchorOrigin: {\r\n                                        horizontal: 'center',\r\n                                        vertical: 'bottom',\r\n                                    }\r\n                            },\r\n                        })\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        props.onPopClose();\r\n    };\r\n\r\n    return (\r\n        <div className=\"popover-tab-container\">\r\n            <div className=\"popover-tab-container__item\">\r\n                <Slider\r\n                    defaultValue={ 1 }\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={ Math.ceil(amount / 100 * 10) } // 1 step = 10%.\r\n                    min={ 1 }\r\n                    max={ maxSplit }\r\n                    value={ inputValue }\r\n                    onChange={ onSliderChange }\r\n                    disabled={ maxSplit <= 1 }\r\n                    marks\r\n                />\r\n            </div>\r\n\r\n            <input type=\"text\" value={ inputValue } onChange={ onInputChange } />\r\n            \r\n            <div onClick={ onIconBtnClick }>\r\n                <IconButton color=\"inherit\" aria-label=\"upload picture\" component=\"span\" classes={{ root: 'popover-icon-button' }}>\r\n                    <MdCallSplit />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    TabSplitComponent,\r\n}","import React from \"react\";\r\nimport { Item } from \"../../../../types\";\r\nimport { Popover } from '@material-ui/core';\r\nimport { TabSplitComponent } from \"./TabSplitComponent\";\r\nimport { useToggle } from \"@umijs/hooks\";\r\nimport { dropInventoryItemToServer, usesInventoryItemByServerId } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SET_INVENTORY_ITEMS, SET_GROUND_ITEMS, deleteInventoryItemById } from \"../../../../actions/inventoryActions\";\r\nimport { UIState } from \"../../../../reducers/UIReducer\";\r\nimport shortid from 'shortid';\r\nimport { enqueueSnackbar, NotifyVariant } from \"../../../../actions/notificationActions\";\r\nconst shortString = '__groundCells';\r\n\r\ntype Props = {\r\n    anchorEl: any;\r\n    item: Item;\r\n    onPopClose: () => any;\r\n}\r\n\r\nfunction SelectedInventoryItem(props: Props) {\r\n    const { item, anchorEl, onPopClose } = props;\r\n    const { state, toggle } = useToggle(0);\r\n    const dispatch = useDispatch();\r\n    const store = useSelector((state: any): UIState => {\r\n        return state.UI || [];\r\n    });\r\n\r\n    function Tab1() {\r\n        const onDropItem = async () => {\r\n            const serverResult = await dropInventoryItemToServer(item.key, item.amount);\r\n            \r\n            if (serverResult.result) {\r\n                console.log('onDropItem', item);\r\n                const inventoryItems = [...store.inventory.items];\r\n                const groundItems = [...store.ground.items];\r\n                const idx = store.inventory.items.findIndex(i => i === item);\r\n\r\n                if (idx !== -1) {\r\n                    const newItem = {...item};\r\n                    newItem.data.shortid = `${shortString}${shortid.generate()}`;\r\n                    inventoryItems.splice(idx, 1);\r\n                    groundItems.unshift(newItem);\r\n\r\n                    dispatch({\r\n                        type: SET_INVENTORY_ITEMS,\r\n                        payload: inventoryItems\r\n                    });\r\n    \r\n                    dispatch({\r\n                        type: SET_GROUND_ITEMS,\r\n                        payload: groundItems\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        const onUsesItem = async () => {\r\n            const serverResult = await usesInventoryItemByServerId(item.data.serverId);\r\n\r\n            // Если получилось использовать предмет, то удалить если нужно.\r\n            if (serverResult.result) {\r\n                const inventoryItems = [...store.inventory.items];\r\n                const idx = inventoryItems.findIndex(i => i === item);\r\n\r\n                if (item.data.isDelete) {\r\n                    dispatch(\r\n                        deleteInventoryItemById(idx)\r\n                    );\r\n                }\r\n            }\r\n\r\n            dispatch(\r\n                enqueueSnackbar({\r\n                    message: serverResult.text,\r\n                        options: {\r\n                            key: new Date().getTime() + Math.random(),\r\n                            variant: serverResult.result ? NotifyVariant.DEFAULT : NotifyVariant.ERROR,\r\n                            anchorOrigin: {\r\n                                horizontal: 'center',\r\n                                vertical: 'bottom',\r\n                            }\r\n                    },\r\n                })\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div className='popover-select-tab'>\r\n                <div onClick={ () => toggle(2) }>Инфо.</div>\r\n                <div onClick={ onUsesItem }>Использовать</div>\r\n                <div onClick={ () => toggle(1) }>Разделить</div>\r\n                <div onClick={ onDropItem }>Выбросить</div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    function Tab2() {\r\n        return (\r\n            <div className='cell-popover-content cell-popover-content-tab2'>\r\n                <div className=\"cell-popover-content__data\">\r\n                    <strong>\r\n                        { item.data.name } (&nbsp;{ item.amount }&nbsp;)\r\n                    </strong>\r\n                </div>\r\n                <div className=\"cell-popover-content__change-data\">\r\n                    <TabSplitComponent isInventory onPopClose={ onPopClose } item={ item } />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function Tab3() {\r\n        return (\r\n            <div className='cell-popover-content cell-popover-content-tab3'>\r\n                <div className=\"cell-popover-content__change-data\">\r\n                    <div>Название: { item.data.name }</div>\r\n                    <div>Кол-во: { item.amount }</div>\r\n                    <div>Макс. стак: { item.data.maxStackCount }</div>\r\n                    <div>вес 1 шт.: { item.data.weight }</div>\r\n                    <div>Описание: { item.data.description }</div>\r\n                    <div>Тип: { item.data.type }</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            classes={ { root: 'rootOverridePopover', paper: 'paperOverridePopover' } }\r\n            id={ 'cell-popover' }\r\n            open={ !!anchorEl }\r\n            anchorEl={ anchorEl }\r\n            onClose={ onPopClose }\r\n            anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\"\r\n            }}\r\n            transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\"\r\n            }}\r\n        >\r\n            <div className=\"cell-popover\">\r\n                { state === 0 && <Tab1 /> }\r\n                { state === 1 && <Tab2 /> }\r\n                { state === 2 && <Tab3 /> }\r\n            </div>\r\n        </Popover>\r\n    );\r\n};\r\n\r\nexport {\r\n    SelectedInventoryItem,\r\n}","import React from \"react\";\r\nimport { Item } from \"../../../../types\";\r\nimport { Popover } from \"@material-ui/core\";\r\nimport { useToggle } from \"@umijs/hooks\";\r\nimport { TabSplitComponent } from \"../SelectedInventoryItem/TabSplitComponent\";\r\n\r\ntype Props = {\r\n    anchorEl: any;\r\n    item: Item;\r\n    isInventory: boolean;\r\n    onPopClose: () => any;\r\n}\r\n\r\nfunction SelectedGroundItem(props: Props) {\r\n    const { item, anchorEl, onPopClose } = props;\r\n    const { state, toggle } = useToggle(0);\r\n    \r\n    function Tab1() {\r\n        return (\r\n            <div className='cell-popover-content cell-popover-content-tab2'>\r\n                <div className=\"cell-popover-content__data\">\r\n                    <strong>\r\n                        { item.data.name } (&nbsp;{ item.amount }&nbsp;)\r\n                    </strong>\r\n                </div>\r\n                <div className=\"cell-popover-content__change-data\">\r\n                    <TabSplitComponent onPopClose={ onPopClose } item={ item } />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <Popover\r\n            classes={ { root: 'rootOverridePopover', paper: 'paperOverridePopover' } }\r\n            id={ 'cell-popover' }\r\n            open={ !!anchorEl }\r\n            anchorEl={ anchorEl }\r\n            onClose={ onPopClose }\r\n            anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\"\r\n            }}\r\n            transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\"\r\n            }}\r\n        >\r\n            <div className=\"cell-popover\">\r\n                { state === 0 && <Tab1 /> }\r\n            </div>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport {\r\n    SelectedGroundItem,\r\n}","import React, { useState } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { Item } from \"../../../../types\";\r\nimport { getItemImage } from \"../../../../helpers/getImages\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setInventoryItems, splitInventoryItemByIndex, stackItems, setGroundItems } from \"../../../../actions/inventoryActions\";\r\nimport { UIState } from \"../../../../reducers/UIReducer\";\r\nimport { GiRapidshareArrow } from \"react-icons/gi\";\r\nimport { SelectedInventoryItem } from \"../SelectedInventoryItem\";\r\nimport { SelectedGroundItem } from \"../SelectedGroundItem\";\r\nimport { takeInventoryItemToServer } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { enqueueSnackbar, NotifyVariant } from \"../../../../actions/notificationActions\";\r\nimport shortid from 'shortid';\r\nconst groundShortString = 'groundCells__';\r\nconst inventoryShortString = 'inventoryCells_';\r\n\r\ntype Props = {\r\n    item: Item;\r\n    id: number;\r\n    isPopover?: boolean;\r\n    isInventory?: boolean;\r\n}\r\n\r\nconst InventoryCell = (props: Props) => {\r\n    const { item, id, isInventory } = props;\r\n\r\n    const UIState = useSelector((state: any): UIState => {\r\n        return state.UI || [];\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const { inventory, ground } = UIState;\r\n    const { items } = inventory;\r\n    const { items: groundItems } = ground;\r\n    const itemImage = getItemImage(item.key);\r\n\r\n\r\n    const [currentItem, setCurrentItem] = useState<Item | null>(null);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    let isStack = false;\r\n    let currentInvItem;\r\n    let nextItem;\r\n    if (isInventory) {\r\n        const currentInvItemIdx = items.findIndex(i => i === item);\r\n        if (currentInvItemIdx !== -1) {\r\n            currentInvItem = items[currentInvItemIdx];\r\n            nextItem = items[currentInvItemIdx + 1];\r\n\r\n            if (currentInvItem && nextItem) {\r\n                if (currentInvItem.key === nextItem.key && currentInvItem.data.maxStackCount > 1) {\r\n                    isStack = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSelectItem = (item: Item, e: any) => {\r\n        console.log('onSelectItem', item);\r\n        setCurrentItem(item);\r\n        setAnchorEl(e.currentTarget);\r\n    };\r\n\r\n    const onPopClose = () => {\r\n        setCurrentItem(null);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const onMouseDown = async (event) => {\r\n        // Клик правой кнопкой мыши на элемент в инвентаре.\r\n        if (isInventory && event.button === 2) {\r\n            if (item.amount <= 1) {\r\n                return;\r\n            }\r\n\r\n            const idx = items.findIndex(i => i === item);\r\n\r\n            if (idx === -1) {\r\n                return;\r\n            }\r\n\r\n            dispatch(\r\n                splitInventoryItemByIndex(idx, Math.floor(item.amount / 2))\r\n            );\r\n        } \r\n        // Клик правой кнопкой мыши на элемент на земле.\r\n        else if (!isInventory && event.button === 2) {\r\n            console.log('Взять макс число предметов.', item);\r\n            \r\n            // Взять максимальное количество предметов по клику на правую кнопку мыши.\r\n            const serverResult = await takeInventoryItemToServer(item.data.serverId, item.amount);\r\n\r\n            // Если удалить предмет с земли получилось - положить его в инвентарь.\r\n            if (serverResult.result) {\r\n                const idx = groundItems.findIndex(i => i === item);\r\n                \r\n                if (idx === -1) {\r\n                    return;\r\n                }\r\n\r\n                const groundItem = JSON.parse(JSON.stringify(groundItems[idx]));\r\n                const inventoryItem = JSON.parse(JSON.stringify(groundItem));\r\n                inventoryItem.data.shortid = `${inventoryShortString}${shortid.generate()}`;\r\n                inventoryItem.amount = item.amount;\r\n                items.unshift(inventoryItem);\r\n                groundItems.splice(idx, 1);\r\n                dispatch(setInventoryItems(items));\r\n                dispatch(setGroundItems(groundItems));\r\n            }\r\n\r\n            dispatch(\r\n                enqueueSnackbar({\r\n                    message: serverResult.text,\r\n                        options: {\r\n                            key: new Date().getTime() + Math.random(),\r\n                            variant: serverResult.result ? NotifyVariant.DEFAULT : NotifyVariant.ERROR,\r\n                            anchorOrigin: {\r\n                                horizontal: 'center',\r\n                                vertical: 'bottom',\r\n                            }\r\n                    },\r\n                })\r\n            );\r\n        }\r\n        // Клик левой кнопкой мыши на элемент на земле.\r\n        else if (!isInventory && event.button === 0) {\r\n            console.log('Открыть контекстное меню.', item);\r\n        }\r\n    }\r\n\r\n    const onStackClick = (event: any) => {\r\n        event.stopPropagation();\r\n        const currentItemIndex = items.findIndex(i => i === item);\r\n        const nextItemIndex = items.findIndex(i => i === nextItem);\r\n        console.log('currentItemIndex', currentItemIndex);\r\n        console.log('nextItemIndex', nextItemIndex);\r\n        dispatch(\r\n            stackItems(currentItemIndex, nextItemIndex)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            { !!currentItem && isInventory && <SelectedInventoryItem onPopClose={ onPopClose } anchorEl={ anchorEl } item={ currentItem } /> }\r\n            { !!currentItem && !isInventory && <SelectedGroundItem isInventory onPopClose={ onPopClose } anchorEl={ anchorEl } item={ currentItem } /> }\r\n\r\n            <Draggable draggableId={ item.data.shortid } index={ id }>\r\n                {(dragProvided, snapshot) => {\r\n                    return (\r\n                        <div\r\n                            onClick={ (e) => onSelectItem(item, e) }\r\n                            onMouseDown={ onMouseDown }\r\n                        >\r\n                            <div ref={ dragProvided.innerRef }>\r\n                                <div \r\n                                    className=\" inventory-cell\"\r\n                                    { ...dragProvided.draggableProps }\r\n                                    { ...dragProvided.dragHandleProps }\r\n                                >\r\n                                    <div className=\"inventory-cell-image\" >\r\n                                        <img src={ itemImage } draggable={ false } />\r\n                                    </div>\r\n                                    <div className=\"inventory-cell-name\">\r\n                                        { item.data.name }\r\n                                    </div>\r\n                                    <div className=\"inventory-cell-amount\">\r\n                                        { `${item.amount}/${item.data.maxStackCount}` }\r\n                                    </div>\r\n                                    <div className=\"inventory-cell-weight\">\r\n                                        { (item.data.weight * item.amount).toFixed(1) }&nbsp;кг.\r\n                                    </div>\r\n                                    { isStack && <div className='isStack' onClick={ (e) => onStackClick(e) }><GiRapidshareArrow /></div> }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }} \r\n            </Draggable>\r\n        </>\r\n    );\r\n};\r\n\r\nexport {\r\n    InventoryCell,\r\n}","import React from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport { InventoryCell } from \"../InventoryCell\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { UIState } from '../../../../reducers/UIReducer';\r\nconst shortString = 'inventoryCells_';\r\n\r\nconst getListStyle = (isDraggingOver) => {\r\n    console.log('isDraggingOver', isDraggingOver);\r\n    \r\n    return {\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden',\r\n        height: '32rem',\r\n        border: isDraggingOver ? '3px dotted green' : '3px dotted transparent',\r\n    }\r\n};\r\n\r\nconst InventoryCells = (props) => {\r\n    const UIState = useSelector((state: any): UIState => {\r\n        return state.UI || [];\r\n    });\r\n    const { inventory } = UIState;\r\n    const { items } = inventory;\r\n\r\n    const getItems = () => {\r\n        return items.map((item, id) => {\r\n            return <InventoryCell \r\n                key={ `${shortString}${item.data.shortid}` } \r\n                id={ id } \r\n                item={ item } \r\n                isInventory \r\n            />\r\n        });\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <Droppable droppableId=\"droppable1\">\r\n                {(provided, snapshot) => (\r\n                    <div ref={ provided.innerRef } style={ getListStyle(snapshot.isDraggingOver) } { ...provided.droppableProps }>\r\n                        { getItems() }\r\n                        { provided.placeholder }\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </>\r\n    );\r\n};\r\n\r\nexport {\r\n    InventoryCells,\r\n}","import React from \"react\";\r\nimport { InventoryCells } from \"./InventoryCells\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { UIState } from \"../../../reducers/UIReducer\";\r\nimport { GiFullMotorcycleHelmet, GiTShirt, GiTrousers, GiSteeltoeBoots, GiBackpack } from \"react-icons/gi\";\r\n\r\nfunction Inventory(props) {\r\n    const state = useSelector((state: any): UIState => state.UI || []);\r\n    const { inventory } = state;\r\n    const { slots, items } = inventory;\r\n\r\n    const inventoryWeight = items.reduce((acc, item) => acc + (item.data.weight * item.amount), 0);\r\n    console.log('inventoryWeight', inventoryWeight);\r\n    const inventoryFixWeight = Number.isInteger(inventoryWeight) ? inventoryWeight.toFixed(0) : inventoryWeight.toFixed(1);\r\n\r\n    return (\r\n        <div className=\"inventory\">\r\n            <div className=\"ui-top\">\r\n                Инвентарь ({ inventoryFixWeight }/{ slots })\r\n            </div>\r\n            <div className=\"inventory-middle\">\r\n                <div className=\"inventory-clothes\">\r\n                    <div className=\"clothes-item\">\r\n                        <div className=\"clothes-item-icon\">\r\n                            <GiFullMotorcycleHelmet />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"clothes-item\">\r\n                        <div className=\"clothes-item-icon\">\r\n                            <GiBackpack />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"clothes-item\">\r\n                        <div className=\"clothes-item-icon\">\r\n                            <GiTShirt />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"clothes-item\">\r\n                        <div className=\"clothes-item-icon\">\r\n                            <GiTrousers />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"clothes-item\">\r\n                        <div className=\"clothes-item-icon\">\r\n                            <GiSteeltoeBoots />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"inventory-body-items\">\r\n\r\n                    <div className=\"inventory-body\">\r\n                        <InventoryCells />\r\n                    </div>\r\n\r\n                </div>    \r\n            </div>            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport {\r\n    Inventory,\r\n}","import React from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setInventoryItems } from \"../../../../actions/inventoryActions\";\r\nimport { UIState } from \"../../../../reducers/UIReducer\";\r\nimport { InventoryCell } from \"../../Inventory/InventoryCell\";\r\nconst groundShortString = 'groundCells__';\r\nconst inventoryShortString = 'inventoryCells_';\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n    overflowY: 'auto',\r\n    overflowX: 'hidden',\r\n    height: '37rem',\r\n    border: isDraggingOver ? '3px dotted green' : '3px dotted transparent',\r\n});\r\n\r\nconst ItemsGroundCells = (props) => {\r\n    const UIState = useSelector((state: any): UIState => {\r\n        return state.UI || [];\r\n    });\r\n    const { ground } = UIState;\r\n    const { items } = ground;    \r\n\r\n    return (\r\n        <Droppable droppableId=\"droppable\">\r\n        {(provided, snapshot) => (\r\n            <div { ...provided.droppableProps } ref={ provided.innerRef } style={ getListStyle(snapshot.isDraggingOver) }>\r\n                { items.map((item, idx) => <InventoryCell key={ `${groundShortString}${item.data.shortid}` } id={ idx } item={ item } />) }\r\n                { provided.placeholder }\r\n            </div>\r\n        )}\r\n        </Droppable>\r\n    );\r\n};\r\n\r\nexport {\r\n    ItemsGroundCells,\r\n}","import React from \"react\";\r\nimport { ItemsGroundCells } from \"./ItemsGroundCells\";\r\n\r\nconst ItemsGround = () => {\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"items-ground\">\r\n                <div className=\"ui-top\">Предметы на земле</div>\r\n                <div className=\"items-ground-middle\">\r\n                    <ItemsGroundCells />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {\r\n    ItemsGround,\r\n}","import React from \"react\";\r\nimport './UserInterface.css';\r\nimport { Inventory } from \"./Inventory\";\r\nimport { ItemsGround } from \"./ItemsGround\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\n\r\nimport { setInventoryItems, setGroundItems } from \"../../actions/inventoryActions\";\r\nimport { enqueueSnackbar, NotifyVariant } from \"../../actions/notificationActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { UIState } from \"../../reducers/UIReducer\";\r\nimport { takeInventoryItemToServer, dropInventoryItemToServer } from \"../../helpers/playerEvents/rpcCall\";\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination): any => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    console.log('result', result);\r\n\r\n    return result;\r\n};\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex): any => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\n\r\nfunction ItemsUI(props) {\r\n    const UIState = useSelector((state: any): UIState => {\r\n        return state.UI || [];\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const { inventory, ground } = UIState;\r\n\r\n\r\n    const id2List = {\r\n        droppable: 'ground',\r\n        droppable1: 'inventory',\r\n    };\r\n\r\n    const getList = (id) => UIState[id2List[id]].items;\r\n\r\n    const onDragEnd = async (result) => {\r\n        const { source, destination } = result;\r\n\r\n        console.log('result', result);\r\n        console.log('source', source);\r\n        console.log('destination', destination);\r\n\r\n        // dropped outside the list\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        // Если дроп. перенесен на текущий.\r\n        if (source.droppableId === destination.droppableId) {\r\n            const items = reorder(\r\n                getList(source.droppableId),\r\n                source.index,\r\n                destination.index\r\n            );\r\n\r\n            console.log('-> items', items);\r\n            console.log('-> source.droppableId', source.droppableId);\r\n            console.log('-> destination.index', destination.index);\r\n\r\n            if (source.droppableId === 'droppable') {\r\n                dispatch(setGroundItems(items));\r\n            }\r\n            \r\n            if (source.droppableId === 'droppable1') {\r\n                dispatch(setInventoryItems(items));\r\n            }\r\n\r\n        } else { // Если дроп. перенесен с 1го на другой.\r\n            const result = move(\r\n                getList(source.droppableId),\r\n                getList(destination.droppableId),\r\n                source,\r\n                destination,\r\n            );\r\n\r\n            // Предмет выкинули.\r\n            // ОТПРАВКА НА SERVER ITEM_KEY И AMOUNT ПРЕДМЕТА - для его удаления из инвентаря.\r\n            if (source.droppableId === 'droppable1') {\r\n                const inventoryItems = [...inventory.items];\r\n                const item = inventoryItems[source.index];\r\n\r\n                const serverResult = await dropInventoryItemToServer(item.key, item.amount);\r\n                if (serverResult.result) {\r\n                    dispatch(setGroundItems(result.droppable));\r\n                    dispatch(setInventoryItems(result.droppable1));\r\n                }\r\n            }\r\n\r\n            // Предмет взяли.\r\n            if (source.droppableId === 'droppable') {\r\n                console.log(' ===> Предмет положен.');\r\n              \r\n                const groundItems = [...ground.items];\r\n                const item = groundItems[source.index];\r\n                console.log(' ---> ПРЕДМЕТ ПОЛОЖИЛИ.', item);\r\n   \r\n                // Отправляем на сервак shortid предмета который перекладываем в инвентарь.\r\n                const serverResult = await takeInventoryItemToServer(item.data.serverId, item.amount);\r\n                if (serverResult.result) {\r\n                    dispatch(setGroundItems(result.droppable));\r\n                    dispatch(setInventoryItems(result.droppable1));\r\n                }\r\n\r\n                dispatch(\r\n                    enqueueSnackbar({\r\n                        message: serverResult.text,\r\n                        options: {\r\n                            key: new Date().getTime() + Math.random(),\r\n                            variant: serverResult.result ? NotifyVariant.DEFAULT : NotifyVariant.ERROR,\r\n                            anchorOrigin: {\r\n                                horizontal: 'center',\r\n                                vertical: 'bottom',\r\n                            },\r\n                        },\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDragStart = (data) => {\r\n        console.log('onDragStart data', data);  \r\n    }\r\n\r\n    return (\r\n        <div className='UI'> \r\n            <div className=\"UI-container\">\r\n                <DragDropContext onDragEnd={ onDragEnd } onDragStart={ onDragStart }>  \r\n                    <ItemsGround />\r\n                    <Inventory />\r\n                </DragDropContext>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport {\r\n    ItemsUI,\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport { removeSnackbar } from '../../../actions/notificationActions';\r\n\r\nlet displayed: any = [];\r\n\r\nconst NotifyComp = () => {\r\n    const dispatch = useDispatch();\r\n    const notifications: any = useSelector((store: any): any => store.UI.notifications || []);\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const storeDisplayed = (id) => {\r\n        displayed = [...displayed, id];\r\n    };\r\n\r\n    const removeDisplayed = (id) => {\r\n        displayed = [...displayed.filter(key => id !== key)];\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        notifications.forEach(({ key, message, options = {}, dismissed = false }) => {\r\n            if (dismissed) {\r\n                // dismiss snackbar using notistack\r\n                closeSnackbar(key);\r\n                return;\r\n            }\r\n\r\n            // do nothing if snackbar is already displayed\r\n            if (displayed.includes(key)) return;\r\n\r\n            // display snackbar using notistack\r\n            enqueueSnackbar(message, {\r\n                key,\r\n                ...options,\r\n                onClose: (event, reason, myKey) => {\r\n                    if (options.onClose) {\r\n                        options.onClose(event, reason, myKey);\r\n                    }\r\n                },\r\n                onExited: (event, myKey) => {\r\n                    // removen this snackbar from redux store\r\n                    dispatch(removeSnackbar(myKey));\r\n                    removeDisplayed(myKey);\r\n                },\r\n            });\r\n\r\n            // keep track of snackbars that we've displayed\r\n            storeDisplayed(key);\r\n        });\r\n    }, [notifications, closeSnackbar, enqueueSnackbar, dispatch]);\r\n\r\n    return null;\r\n};\r\n\r\nexport {\r\n    NotifyComp,\r\n};","import React from \"react\";\r\n\r\ntype Props = {\r\n    health: number;\r\n    armor: number;\r\n    hunger: number;\r\n    dehydration: number;\r\n    temperature: number;\r\n};\r\n\r\nfunction HudsMenuData(props: Props) {\r\n    const percent = 12000 / 100; // 1%\r\n    const blood = props.health * percent; // Количество крови.\r\n\r\n    return (\r\n        <div className=\"huds-menu-data\">\r\n            <div>Кровь: { blood }</div>\r\n            <div>Броня: { props.armor }</div>\r\n            <div>Сытость: { props.hunger }</div>\r\n            <div>Жажда: { props.dehydration }</div>\r\n            <div>Температура: { props.temperature }</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    HudsMenuData,\r\n}","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { pulse, jello} from 'react-animations';\r\nimport image_blood_100 from '../../../assets/huds/health/100.svg';\r\nimport image_blood_80 from '../../../assets/huds/health/80.svg';\r\nimport image_blood_60 from '../../../assets/huds/health/60.svg';\r\nimport image_blood_40 from '../../../assets/huds/health/40.svg';\r\nimport image_blood_20 from '../../../assets/huds/health/20.svg';\r\nimport image_blood_empty from '../../../assets/huds/health/empty.svg';\r\n\r\ntype Props = {\r\n    health: number;\r\n}\r\n\r\nfunction HealthHud(props: Props) {\r\n    const { health } = props;\r\n    let styles = {};\r\n\r\n    const isLowHP = health <= 50;\r\n\r\n    // Pulse animation\r\n    const pulseAnimation = keyframes`${pulse}`;\r\n    const HealthPulseDiv = styled.div`\r\n        animation: ${ isLowHP ? '.95s' : '3s' } infinite ${ pulseAnimation };\r\n    `;\r\n\r\n    let healthImage = image_blood_100;\r\n    if (health <= 80) {\r\n        healthImage = image_blood_80;\r\n    }\r\n    if (health <= 60) {\r\n        healthImage = image_blood_60;\r\n    }\r\n    if (health <= 40) {\r\n        healthImage = image_blood_40;\r\n    }\r\n    if (health <= 20) { \r\n        healthImage = image_blood_20;\r\n    }\r\n    if (health <= 0) {\r\n        healthImage = image_blood_empty;\r\n    }\r\n\r\n    return (\r\n        <HealthPulseDiv>\r\n            <div className=\"huds-health\">\r\n                <img src={ healthImage } style={ styles } />\r\n            </div>\r\n        </HealthPulseDiv>\r\n    );\r\n}\r\n\r\nexport {\r\n    HealthHud,\r\n}","import React, { CSSProperties } from \"react\";\r\nimport img_icon_100 from '../../../assets/huds/eat/100.svg';\r\nimport img_icon_80 from '../../../assets/huds/eat/80.svg';\r\nimport img_icon_60 from '../../../assets/huds/eat/60.svg';\r\nimport img_icon_40 from '../../../assets/huds/eat/40.svg';\r\nimport img_empty from '../../../assets/huds/eat/empty.svg';\r\n\r\ntype Props = {\r\n    hunger: number;\r\n};\r\n\r\nfunction EatHud(props: Props) {\r\n    const { hunger } = props;\r\n    let styles = {};\r\n    \r\n    let imgIcon = img_icon_100;\r\n    if (hunger < 80) {\r\n        imgIcon = img_icon_80;\r\n    }    \r\n    if (hunger < 60) {\r\n        imgIcon = img_icon_60;\r\n    }\r\n    if (hunger < 40) {\r\n        imgIcon = img_icon_40;\r\n    }\r\n    if (hunger < 20) {\r\n        imgIcon = img_icon_40;\r\n    }\r\n    if (hunger < 1) {\r\n        imgIcon = img_empty;\r\n    }\r\n    \r\n    return (\r\n        <div className='huds-eat'>\r\n            <img src={ imgIcon } style={ styles } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    EatHud,\r\n}","import React, { CSSProperties } from \"react\"\r\n\r\nimport img_icon_100 from '../../../assets/huds/temperature/100.svg';\r\nimport img_icon_80 from '../../../assets/huds/temperature/80.svg';\r\nimport img_icon_60 from '../../../assets/huds/temperature/60.svg';\r\nimport img_icon_40 from '../../../assets/huds/temperature/40.svg';\r\nimport img_icon_20 from '../../../assets/huds/temperature/15.svg';\r\nimport img_icon_empty from '../../../assets/huds/temperature/empty.svg';\r\n\r\ntype Props = {\r\n    temperature: number;\r\n\r\n}\r\nfunction TemperatureHud(props: Props) {\r\n    const { temperature } = props;\r\n    let styles = {};\r\n\r\n    let imgIcon = img_icon_100;\r\n    if (temperature < 80) {\r\n        imgIcon = img_icon_80;\r\n    }    \r\n    if (temperature < 60) {\r\n        imgIcon = img_icon_60;\r\n    }\r\n    if (temperature < 40) {\r\n        imgIcon = img_icon_40;\r\n    }\r\n    if (temperature < 20) {\r\n        imgIcon = img_icon_20;\r\n    }\r\n    if (temperature < 1) {\r\n        imgIcon = img_icon_empty;\r\n    }\r\n\r\n    return (\r\n        <div className=\"huds-temperature\">\r\n            <img src={ imgIcon } style={ styles } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    TemperatureHud,\r\n}","import React, { CSSProperties } from \"react\"\r\n\r\nimport img_icon_100 from '../../../assets/huds/dehydration/100.svg';\r\nimport img_icon_70 from '../../../assets/huds/dehydration/70.svg';\r\nimport img_icon_40 from '../../../assets/huds/dehydration/40.svg';\r\nimport img_icon_10 from '../../../assets/huds/dehydration/10.svg';\r\nimport img_icon_empty from '../../../assets/huds/dehydration/empty.svg';\r\n\r\ntype Props = {\r\n    dehydration: number;\r\n}\r\n\r\nfunction DehydrationHud(props: Props) {\r\n    const { dehydration } = props;\r\n    let styles = {};\r\n\r\n    let imgIcon = img_icon_100;\r\n    if (dehydration < 70) {\r\n        imgIcon = img_icon_70;\r\n    }    \r\n    if (dehydration < 40) {\r\n        imgIcon = img_icon_40;\r\n    }\r\n    if (dehydration < 10) {\r\n        imgIcon = img_icon_10;\r\n    }\r\n    if (dehydration < 1) {\r\n        imgIcon = img_icon_empty;\r\n    }\r\n\r\n    return (\r\n        <div className=\"huds-dehydration\">\r\n            <img src={ imgIcon } style={ styles } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    DehydrationHud,\r\n}","import { CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\ntype Props = {\r\n    value: number;\r\n    maxValue: number\r\n};\r\n\r\nfunction CircularLine(props: Props) {\r\n    const percent = props.maxValue / 100; // 1%;\r\n    const value = percent * props.value;\r\n\r\n    return (\r\n        <div>\r\n            <CircularProgress color='secondary' variant=\"static\" value={ value } size={ 50 } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CircularLine,\r\n}","import React, { CSSProperties } from \"react\";\r\nimport { CircularLine } from \"./CircularLine\";\r\n\r\ntype Props = {\r\n    hud: any;\r\n    style: CSSProperties;\r\n    size: string;\r\n    value: number;\r\n};\r\n\r\nfunction CircularHudWithImage(props: Props) {\r\n    const styles = {...props.style, width: props.size};\r\n    const hudStyle: any = { \r\n        position: 'absolute',\r\n        top: '45%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    };\r\n    return (\r\n        <div className='CircularHudWithImage' style={ styles }>\r\n            <CircularLine value={ props.value } maxValue={ 100 } />\r\n            <div style={hudStyle}>{ props.hud }</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CircularHudWithImage,\r\n}","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { UIState } from \"../../../reducers/UIReducer\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { CircularLine } from \"./CircularLine\";\r\nimport { setHudsData, HudType } from \"../../../actions/hudsDataActions\";\r\nimport { HudsMenuData } from \"./HudsMenuData\";\r\nimport { FaHamburger } from \"react-icons/fa\";\r\nimport { HealthHud } from \"./HealthHud\";\r\nimport { EatHud } from \"./EatHud\";\r\nimport { TemperatureHud } from \"./TemperatureHud\";\r\nimport { DehydrationHud } from \"./DehydrationHud\";\r\nimport CircularSlider from 'react-circular-slider-svg';\r\nimport { CircularHudWithImage } from \"./CircularHudWithImage\";\r\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\r\n\r\nfunction Huds(props) {\r\n    const state: UIState = useSelector((state: any) => state.UI || []);\r\n    const dispatch = useDispatch();\r\n    const health = state.hudsData.health;\r\n    const armor = state.hudsData.armor;\r\n    const isBleeding = state.hudsData.isBleeding;\r\n    const temperature = state.hudsData.temperature;\r\n    const hunger = state.hudsData.hunger;\r\n    const dehydration = state.hudsData.dehydration;\r\n\r\n    const hudStyles: CSSProperties = {\r\n        position: 'absolute',\r\n        bottom: '1rem',\r\n        right: '1rem',\r\n    };\r\n\r\n    let healthStyles = {};\r\n    if (health <= 80) healthStyles = {filter: 'hue-rotate(-30deg)'};\r\n    if (health <= 60) healthStyles = {filter: 'hue-rotate(-40deg)'};\r\n    if (health <= 40) healthStyles = {filter: 'hue-rotate(-50deg)'};\r\n    if (health <= 20) healthStyles = {filter: 'hue-rotate(-60deg)'};\r\n    if (health <= 0) healthStyles = {filter: 'hue-rotate(-70deg)'};\r\n\r\n    let eatStyles = {};\r\n    if (hunger < 80) eatStyles = {filter: 'hue-rotate(-30deg)'};\r\n    if (hunger < 60) eatStyles = {filter: 'hue-rotate(-40deg)'};\r\n    if (hunger < 40) eatStyles = {filter: 'hue-rotate(-50deg)'};\r\n    if (hunger < 20) eatStyles = {filter: 'hue-rotate(-60deg)'};\r\n    if (hunger < 1) eatStyles = {filter: 'hue-rotate(-70deg)'};\r\n\r\n    let dehydrationStyles = {};\r\n    if (dehydration < 70) dehydrationStyles = {filter: 'hue-rotate(-30deg)'};\r\n    if (dehydration < 40) dehydrationStyles = {filter: 'hue-rotate(-40deg)'};\r\n    if (dehydration < 10) dehydrationStyles = {filter: 'hue-rotate(-50deg)'};\r\n    if (dehydration < 1) dehydrationStyles = {filter: 'hue-rotate(-60deg)'};\r\n\r\n    let temperatureStyles = {};\r\n    if (temperature < 80) temperatureStyles = {filter: 'hue-rotate(45deg)'};\r\n    if (temperature < 60) temperatureStyles = {filter: 'hue-rotate(60deg)'};\r\n    if (temperature < 40) temperatureStyles = {filter: 'hue-rotate(75deg)'};\r\n    if (temperature < 20) temperatureStyles = {filter: 'hue-rotate(90deg)'};\r\n    if (temperature < 1) temperatureStyles = {filter: 'hue-rotate(100deg)'};\r\n\r\n    return (\r\n        <div className=\"huds\">\r\n            <HudsMenuData health={ health } armor={ armor } hunger={ hunger } dehydration={ dehydration } temperature={ temperature } />\r\n\r\n            <CircularHudWithImage value={ health } style={ {...hudStyles, ...healthStyles, right: '15.2rem'} } size={ '' } hud={ <HealthHud health={ health } /> } />\r\n            <CircularHudWithImage value={ hunger } style={ {...hudStyles, ...eatStyles, right: '10.2rem'} } size={ '' } hud={ <EatHud hunger={ hunger } /> } />\r\n            <CircularHudWithImage value={ dehydration } style={ {...hudStyles, ...dehydrationStyles, right: '5.2rem'} } size={ '' } hud={ <DehydrationHud dehydration={ dehydration } /> } />\r\n            <CircularHudWithImage value={ temperature } style={ {...hudStyles, ...temperatureStyles, right: '.2rem'} } size={ '' } hud={ <TemperatureHud temperature={ temperature } /> } />\r\n\r\n            <div style={ {textShadow: 'rgba(0, 0, 0, 0.37) 0px 0px 7px', position: 'absolute', bottom: '10rem', right: '2rem', color: '#000'} }>\r\n                <div>[TAB] Инвентарь:</div>\r\n                <div>[G] Зайти в инвентарь машины:</div>\r\n                <div>[F6] HUDS:</div>\r\n            </div>\r\n{/* \r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_HEALTH_HUDS, health - 5)) }>-</button>\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_HEALTH_HUDS, health + 5)) }>+</button>\r\n\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_ARMOR_HUDS, armor - 5)) }>-</button>\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_ARMOR_HUDS, armor + 5)) }>+</button>\r\n\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_HUNGER_HUDS, hunger - 5)) }>-</button>\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_HUNGER_HUDS, hunger + 5)) }>+</button>\r\n            \r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_DEHYDRATION_HUDS, dehydration - 5)) }>-</button>\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_DEHYDRATION_HUDS, dehydration + 5)) }>+</button>\r\n\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_TEMPERATURE_HUDS, temperature - 5)) }>-</button>\r\n            <button onClick={ () => dispatch(setHudsData(HudType.SET_TEMPERATURE_HUDS, temperature + 5)) }>+</button>  */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    Huds,\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { setLootCreateData, setPropLootCreateData, PropType } from \"../../../actions/lootCreateDataActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { UIState } from \"../../../reducers/UIReducer\";\r\nimport { Button, FormControl, InputLabel, Select, MenuItem, FormHelperText, Slider } from '@material-ui/core';\r\nimport { lootCreate, setLootCreateHash, setLootCreateRotation } from \"../../../helpers/playerEvents/rpcCall\";\r\n\r\nexport type Coords = {\r\n    x: number, \r\n    y: number, \r\n    z: number,\r\n};\r\n\r\nenum SliderType {\r\n    ROTATION = 'ROTATION',\r\n    POSITION = 'POSITION',\r\n}\r\n\r\nfunction LootCreate() {\r\n    const dispatch = useDispatch();\r\n    const UI = useSelector((state: any): UIState => {\r\n        return state.UI || [];\r\n    });\r\n    const { objectId, objectHash, position, rotation } = UI.lootCreate;\r\n    \r\n    const maxStepRotation = 180;\r\n    const oneStepRotation = 10;\r\n    const minStep = 0;\r\n\r\n    console.log('objectHash', objectHash);\r\n\r\n    // Пересоздает текущий объект на клиенте.\r\n    const createObject = async () => {\r\n        const data = await lootCreate(objectHash); // Отправляет на клиент хэш объекта для его создания.\r\n\r\n        if (data) {\r\n            const p = data.position;\r\n            const r = data.rotation;\r\n            dispatch(\r\n                setLootCreateData({ objectId: data.objectId, objectHash: data.objectHash, position: [p[0], p[1], p[2]], rotation: [r[0], r[1], r[2]] })\r\n            );\r\n        }\r\n    };\r\n\r\n    const onHashChange = (event) => {\r\n        dispatch(\r\n            setPropLootCreateData(PropType.OBJECT_HASH, event.target.value)\r\n        );\r\n\r\n        // Изменить хэш объекта на клиенте.\r\n        setLootCreateHash(event.target.value);\r\n    }\r\n\r\n    const onSliderChange = async (type: SliderType, coord: 'x' | 'y' | 'z', event: any, value: number) => {\r\n        if (type === SliderType.ROTATION) {\r\n            if (coord === 'x') {\r\n                rotation[0] = value;\r\n            }\r\n            if (coord === 'y') {\r\n                rotation[1] = value;\r\n            }\r\n            if (coord === 'z') {\r\n                rotation[2] = value;\r\n            }\r\n\r\n            dispatch(\r\n                setPropLootCreateData(PropType.ROTATION, rotation)\r\n            );\r\n\r\n            // Установка на клиенте вращения.\r\n            await setLootCreateRotation(rotation);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='loot'>\r\n            <div className=\"AI-content-inner__title\">\r\n                Создание точки с лутом\r\n            </div>\r\n            <div className=\"loot-create\">\r\n                <div className=\"loot-create__object\">\r\n                    <div className='loot-create__object-title'>Данные для объекта</div>\r\n                    <div>\r\n                        Hash:&nbsp;\r\n                        <br/>\r\n                        <br/>\r\n                        <FormControl>\r\n                            <InputLabel variant='outlined' id=\"loot-create__label\">Хэш объекта:</InputLabel>\r\n                            <Select\r\n                                labelId=\"loot-create__label\"\r\n                                id=\"loot-create__select\"\r\n                                onChange={ onHashChange }\r\n                                value={ objectHash }\r\n                            >\r\n                                <MenuItem value={ 'w_ar_assaultrifle' }>w_ar_assaultrifle</MenuItem>\r\n                                <MenuItem value={ 'w_sg_pumpshotgun' }>w_sg_pumpshotgun</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <br/>\r\n                        <br/>\r\n                        <Button color='secondary' onClick={ createObject }>Создать</Button>\r\n                    </div>\r\n                    \r\n                    <br />\r\n\r\n                    <div>\r\n                        Rotation: { rotation[0]} { rotation[1] } { rotation[2] }\r\n                        <div>\r\n                            <span>X:</span>\r\n                                <Slider\r\n                                    classes={ {root: 'loot-slider__root'} }\r\n                                    step={ oneStepRotation }\r\n                                    min={ minStep }\r\n                                    max={ maxStepRotation }\r\n                                    value={ rotation[0] } marks\r\n                                    onChange={ (e: any, v: any) => onSliderChange(SliderType.ROTATION, 'x', e, v) }\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <span>Y:</span>\r\n                                <Slider\r\n                                    classes={ {root: 'loot-slider__root'} }\r\n                                    step={ oneStepRotation }\r\n                                    min={ minStep }\r\n                                    max={ maxStepRotation }\r\n                                    value={ rotation[1] } marks\r\n                                    onChange={ (e: any, v: any) => onSliderChange(SliderType.ROTATION, 'y', e, v) }\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <span>Z:</span>\r\n                                <Slider\r\n                                    classes={ {root: 'loot-slider__root'} }\r\n                                    step={ oneStepRotation }\r\n                                    min={ minStep }\r\n                                    max={ maxStepRotation }\r\n                                    value={ rotation[2] } marks\r\n                                    onChange={ (e: any, v: any) => onSliderChange(SliderType.ROTATION, 'z', e, v) }\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <br />\r\n\r\n                    <div>Position: { position[0]} { position[1] } { position[2] }</div>\r\n                    <br />\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    LootCreate,\r\n}","import React from \"react\"\r\n\r\nfunction VehicleCreate() {\r\n    return (\r\n        <div className='vehicle-create'>\r\n            <div className=\"AI-content-inner__title\">\r\n                Создание машины\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    VehicleCreate,\r\n}","import React from \"react\";\r\nimport './adminInterface.css';\r\nimport { useToggle, useKeyPress } from \"@umijs/hooks\";\r\nimport { LootCreate } from \"./LootCreate\";\r\nimport { VehicleCreate } from \"./VehicleCreate\";\r\n\r\nfunction AdminInterface() {\r\n    const { state, toggle } = useToggle(1);\r\n\r\n    return (\r\n        <div className='admin'>\r\n            <div className='admin-interface'>\r\n                <div className=\"admin-interface__container\">\r\n                    <div className=\"AI-sidebar\">\r\n                        <ul>\r\n                            <li><a href=\"#\" onClick={ () => toggle(1) }>Создание точки с лутом</a></li>\r\n                            <li><a href=\"#\" onClick={ () => toggle(2) }>Создание машины</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"AI-content\">\r\n                        <div className=\"AI-content__title\">Панель администратора</div>\r\n                        { state === 1 && <LootCreate /> }\r\n                        { state === 2 && <VehicleCreate /> }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    AdminInterface,\r\n}","import React, { useState } from \"react\";\r\nimport './auth.css';\r\nimport { useToggle } from \"@umijs/hooks\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { enqueueSnackbar, NotifyVariant } from \"../../../actions/notificationActions\";\r\nimport { GiThumbUp, GiThumbDown } from \"react-icons/gi\";\r\nimport { serverRegister, serverLogin, updateCharacterCameraPosition, serverCheckLogin } from \"../../../helpers/playerEvents/rpcCall\";\r\nimport { Previous } from \"../Previous\";\r\nimport { push } from \"connected-react-router\";\r\nimport { Animation, Whisper, Tooltip } from 'rsuite';\r\nimport { State } from \"../../../reducers\";\r\nimport { setRegister, updateAuthProp } from \"../../../actions/authActions\";\r\nconst { Bounce } = Animation;\r\n\r\nconst btnRegValidStyles = {\r\n    border: '1px solid #c0c0c0',   \r\n    color: '#c0c0c0',\r\n    opacity: '.5',\r\n};\r\n\r\nconst inputStyles = (isError) => ({\r\n    border: isError ? '1px dashed rgba(160, 7, 17, 1)' : '',\r\n    color: isError ? 'rgba(160, 7, 17, 1)' : '',\r\n})\r\n\r\nfunction Register() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const dispatch = useDispatch();\r\n\r\n    const registerState = state.auth.register;\r\n\r\n    const isLoginValid = registerState.login.isValid;\r\n    const isLoginTouch = registerState.login.isTouch;\r\n    const isEmailValid = registerState.email.isValid;\r\n    const isEmailTouch = registerState.email.isTouch;\r\n    const isPassValid = registerState.password.isValid;\r\n    const isPassTouch = registerState.password.isTouch;\r\n    const isConfirmPassValid = registerState.confirmPassword.isValid;\r\n    const isConfirmPassTouch = registerState.confirmPassword.isTouch;\r\n\r\n    const checkData = () => {\r\n        const newState = {...registerState};\r\n        newState.login.isValid = registerState.login.regular.test(registerState.login.val); \r\n        newState.email.isValid = registerState.email.regular.test(registerState.email.val); \r\n        newState.password.isValid = registerState.password.regular.test(registerState.password.val);\r\n        newState.confirmPassword.isValid = newState.confirmPassword.val === newState.password.val; \r\n\r\n        dispatch(\r\n            setRegister(newState)\r\n        );\r\n    };\r\n\r\n    const clickRegisterBtn = async () => {\r\n        if (isLoginValid && isPassValid && isConfirmPassValid && isEmailValid) {\r\n            // Если игрока с указанным ником нет на сервере, то допустить к кастомизации.\r\n            const serverResult = await serverCheckLogin(registerState.login.val);\r\n            \r\n            if (serverResult.result) {\r\n                updateCharacterCameraPosition();\r\n                dispatch(\r\n                    push('/character')\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    enqueueSnackbar({\r\n                        message: serverResult.text,\r\n                            options: {\r\n                                key: new Date().getTime() + Math.random(),\r\n                                variant: serverResult.result ? NotifyVariant.SUCCESS : NotifyVariant.ERROR,\r\n                                anchorOrigin: {\r\n                                    horizontal: 'center',\r\n                                    vertical: 'bottom',\r\n                                }\r\n                        },\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    const onChange = (event: any) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        dispatch(\r\n            updateAuthProp(name, 'val', value)\r\n        );\r\n\r\n        checkData();\r\n    };\r\n\r\n    const onBlur = (event: any) => {\r\n        const name = event.target.name;\r\n        dispatch(\r\n            updateAuthProp(name, 'isTouch', true)\r\n        );\r\n    };\r\n\r\n    const isDisabled = !isLoginValid || !isPassValid || !isConfirmPassValid || !isEmailValid;\r\n    console.log('isDisabled', isDisabled);\r\n\r\n    return (\r\n        <Bounce in={ true }>\r\n            <div className='middle-register'>\r\n                <form className=\"middle-form\">\r\n                    <div className='middle-form_input'>\r\n                        <input placeholder='Логин(Никнейм)' type=\"text\" name='login' value={ registerState.login.val || '' } onChange={ onChange } onBlur={ onBlur } style={ inputStyles(isLoginTouch && !isLoginValid) } />\r\n                        { isLoginTouch && isLoginValid && <GiThumbUp /> }\r\n                        { isLoginTouch && !isLoginValid && <span style={ {color: 'rgb(218, 75, 85)'} }><GiThumbDown /></span> } \r\n                    </div>\r\n                    <div className='middle-form_input'>\r\n                        <input placeholder='Емейл' type=\"email\" name='email' value={ registerState.email.val || '' } onChange={ onChange } onBlur={ onBlur } style={ inputStyles(registerState.email.isTouch && !registerState.email.isValid) } />\r\n                        { isEmailTouch && isEmailValid && <GiThumbUp /> }\r\n                        { isEmailTouch && !isEmailValid && <span style={ {color: 'rgb(218, 75, 85)'} }><GiThumbDown /></span> } \r\n                    </div>\r\n                    <div className='middle-form_input'>\r\n                        <input placeholder='Введите пароль' type=\"password\" name='password' value={ registerState.password.val || '' } onChange={ onChange } onBlur={ onBlur } style={ inputStyles(isPassTouch && !isPassValid) } />\r\n                        { isPassTouch && isPassValid && <GiThumbUp /> }\r\n                        { isPassTouch && !isPassValid && <span style={ {color: 'rgb(218, 75, 85)'} }><GiThumbDown /></span> } \r\n                    </div>\r\n                    <div className='middle-form_input'>\r\n                        <input placeholder='Повторите пароль' type=\"password\" name='confirmPassword' value={ registerState.confirmPassword.val || '' } onChange={ onChange } onBlur={ onBlur } style={ inputStyles(isConfirmPassTouch && !isConfirmPassValid) } />\r\n                        { isConfirmPassTouch && isConfirmPassValid && <GiThumbUp /> }\r\n                        { isConfirmPassTouch && !isConfirmPassValid && <span style={ {color: 'rgb(218, 75, 85)'} }><GiThumbDown /></span> }\r\n                    </div>\r\n                </form>\r\n                <div className=\"auth-interface__bottom\">\r\n                    <button \r\n                        className='button-register' \r\n                        onClick={ () => clickRegisterBtn() } \r\n                        disabled={ isDisabled }\r\n                        style={ isDisabled ? btnRegValidStyles : {} }    \r\n                    >\r\n                        Далее\r\n                    </button>\r\n                </div>\r\n                <div className='auth-interface__bottom-errors'>\r\n                    { isLoginTouch && !isLoginValid && <div>Логин должен быть длиной от <span style={{color: '#34c3ff'}}>3 до 16 символов</span>. Может содержать латинские буквы и цифры.</div> }\r\n                    { isEmailTouch && !isEmailValid && <div>Введите корректный емейл.</div> }\r\n                    { isPassTouch && !isPassValid && <div>Пароль должен быть от <span style={{color: '#34c3ff'}}>6 до 30 символов</span>, разрешено латиниские буквы, цифры и спецсимволы <span style={{color: '#34c3ff'}}>@ # $ % ^ & *</span>.</div> }\r\n                    { isConfirmPassTouch && !isConfirmPassValid && <div>Пароли не совпадают.</div> }\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    );\r\n}\r\n\r\ntype LoginType = {\r\n    login: string;\r\n    password: string;\r\n}\r\n\r\nfunction Login() {\r\n    const dispatch = useDispatch();\r\n    \r\n    const [state, setState] = useState<LoginType>({\r\n        login: '',\r\n        password: '',\r\n    });\r\n\r\n    const onChange = (event: any) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        setState({\r\n            ...state,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const onClick = async () => {\r\n        const serverResult = await serverLogin(state.login, state.password);\r\n\r\n        dispatch(\r\n            enqueueSnackbar({\r\n                message: serverResult.text,\r\n                options: {\r\n                    key: new Date().getTime() + Math.random(),\r\n                    variant: serverResult.result ? NotifyVariant.SUCCESS : NotifyVariant.ERROR,\r\n                    anchorOrigin: {\r\n                        horizontal: 'center',\r\n                        vertical: 'bottom',\r\n                    },\r\n                },\r\n            })\r\n        );\r\n    };\r\n\r\n    const isDisabled = state.login.length < 3 || state.password.length < 6;\r\n\r\n    return (\r\n        <Bounce in={ true }>\r\n            <div className='middle-login'>\r\n                <form className=\"middle-form\">\r\n                    <input placeholder='Введите логин' type=\"text\" name='login' value={ state.login || '' } onChange={ onChange } />\r\n                    <input placeholder='Введите пароль' type=\"password\" name='password' value={ state.password || '' } onChange={ onChange } />\r\n                </form>\r\n                <div className=\"auth-interface__bottom\">\r\n                    <button \r\n                        className='button-register' \r\n                        disabled={ isDisabled }\r\n                        style={ isDisabled ? btnRegValidStyles : {} }\r\n                        onClick={ onClick }\r\n                    >\r\n                        Авторизоваться\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    );\r\n}\r\n\r\nfunction Auth() {\r\n    const { state: toggleState, toggle: setToggle } = useToggle(0);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Bounce in={ true }>\r\n            <div className='auth'>\r\n                <div className=\"auth-interface\">\r\n                    <div className=\"auth-interface__top\">\r\n                        <div className=\"auth-interface__login\" onClick={ () => setToggle(0) } style={ {color: toggleState === 0 ? 'rgba(160, 7, 17, 1)' : ''} }>\r\n                            Авторизация\r\n                        </div>\r\n                        <div className=\"auth-interface__register\" onClick={ () => setToggle(1) } style={ {color: toggleState === 1 ? 'rgba(160, 7, 17, 1)' : ''} }>\r\n                            Регистрация\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"auth-interface__middle\">\r\n                        { toggleState === 0 && <Login /> }\r\n                        { toggleState === 1 && <Register /> }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    );\r\n}\r\n\r\nexport {\r\n    Auth,\r\n}","import React from \"react\";\r\nimport ReactSlider from \"react-slider\";\r\n\r\ntype Props = {\r\n    onChange: (p1: number) => any;\r\n    min: number;\r\n    max: number;\r\n    step: number;\r\n    defVal?: number;\r\n    value?: number;\r\n};\r\n\r\nfunction CharacterSlider(props: Props) {\r\n    const { step, min, max, value, onChange } = props;\r\n    \r\n    return (\r\n        <div>\r\n            <ReactSlider\r\n                className=\"character-slider\"\r\n                thumbClassName=\"character-thumb\"\r\n                trackClassName=\"character-track\"\r\n                min={ min }\r\n                max={ max }\r\n                step={ step }\r\n                value={ value }\r\n                renderThumb={(props, state) => <div {...props}></div>}\r\n                onChange={ (val: any) => onChange(val) }\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterSlider,\r\n}","import React from \"react\";\r\nimport { CharacterSlider } from \"../CharacterSlider\";\r\nimport { setCharacterFaceFeature } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setFaceFeature } from \"../../../../actions/characterActions\";\r\nimport { State } from \"../../../../reducers\";\r\n\r\nfunction CharacterFace() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const face = state.character.face;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSliderChange = (index: number, feature: number) => {\r\n        setCharacterFaceFeature(index, feature);\r\n        dispatch(setFaceFeature(index, feature));\r\n    };\r\n\r\n    const getData = () => {\r\n        return face.map(i => (\r\n            <div className='character-face__item' key={ `${i.index}_${i.index}` }>\r\n                <div className=\"character-face__item-title\">{ i.name }</div>\r\n                <CharacterSlider min={-1.0} max={1.0} step={0.1} value={ i.feature } onChange={ (n: number) => onSliderChange(i.index, n) } />\r\n            </div>\r\n        ));\r\n    }\r\n \r\n    return (\r\n        <div className='character-face'>\r\n            { getData() }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterFace,\r\n}","import React, { useState } from \"react\";\r\nimport { FaLongArrowAltLeft, FaLongArrowAltRight } from \"react-icons/fa\";\r\nimport { useHover } from '@umijs/hooks';\r\n\r\ntype Props = {\r\n    onLeftClick: () => any;\r\n    onRightClick: () => any;\r\n    topText?: string;\r\n    value: any;\r\n};\r\n\r\nfunction AnySelect(props: Props) {\r\n    const { onLeftClick, onRightClick, value, topText } = props;\r\n    const [isHoverLeft, hoverLeftRef] = useHover<HTMLDivElement>();\r\n    const [isHoverRight, hoverRightRef] = useHover<HTMLDivElement>();\r\n    // const [isHovering, hoverRef] = useHover<HTMLDivElement>();\r\n\r\n    const cssSelectContainer: any = {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '13rem',\r\n        textAlign: 'center',\r\n        margin: '0 auto',\r\n    }\r\n    \r\n    const cssSelectHeadArrowLeft = {\r\n        fontSize: '3rem',\r\n        color: '#34c3ff',\r\n        verticalAlign: 'middle',\r\n        opacity: isHoverLeft ? .5 : 1,\r\n\r\n    }\r\n    const cssSelectHeadArrowRight = {\r\n        fontSize: '3rem',\r\n        color: '#34c3ff',\r\n        verticalAlign: 'middle',\r\n        opacity: isHoverRight ? .5 : 1,\r\n    }\r\n\r\n    const cssSelectHeadValue = {\r\n        width: '10rem',\r\n        fontSize: '1.5rem'\r\n    }\r\n\r\n    const cssTopText: any = {\r\n        textAlign: 'center',\r\n        position: 'absolute',\r\n        top: '-0.2rem',\r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        width: '100%',\r\n        color: '#fff',\r\n        textShadow: '0px 2px 9px #000000',\r\n    };\r\n\r\n    return (\r\n        <div style={ cssSelectContainer }>\r\n            <div style={ cssTopText }>\r\n                { topText }\r\n            </div>\r\n\r\n            <div style={ cssSelectHeadArrowLeft } onClick={ onLeftClick } ref={ hoverLeftRef }>\r\n                <FaLongArrowAltLeft style={ {verticalAlign: 'middle'} } />\r\n            </div>\r\n            <div style={ cssSelectHeadValue }>\r\n                { value }\r\n            </div>\r\n            <div style={ cssSelectHeadArrowRight } onClick={ onRightClick } ref={ hoverRightRef }>\r\n                <FaLongArrowAltRight style={ {verticalAlign: 'middle'} } />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    AnySelect,\r\n}","import React, { useState } from \"react\";\r\nimport { FaLongArrowAltLeft, FaLongArrowAltRight } from \"react-icons/fa\";\r\nimport { setCharacterHeadProp } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { State } from \"../../../../reducers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setParentIndex } from \"../../../../actions/characterActions\";\r\nimport { AnySelect } from \"../../../shared/AnySelect\";\r\n\r\ntype Props = {\r\n    parentsObj: any;\r\n    parents: { father: any, mother: any };\r\n    parent: 'father' | 'mother';\r\n    text: string;\r\n    sendData: (name: any, value: any) => any;\r\n};\r\n\r\nfunction CharacterHeadParent(props: Props) {\r\n    const { parents, parent, sendData, parentsObj, text } = props;\r\n    const characterState = useSelector((state: State) => state || []);\r\n    const parentIndex = characterState.character.head[parent].index;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onIncrement = () => {\r\n        const length = parents[parent].length - 1;\r\n        let c = parentIndex;\r\n        \r\n        c += 1;\r\n        if (c > length) {\r\n            c = length;\r\n        }\r\n\r\n        dispatch(setParentIndex(parent, c));\r\n        sendData(parent, parentsObj[parents[parent][c]]);\r\n    };\r\n\r\n    const onDecrement = () => {\r\n        let c = parentIndex;\r\n\r\n        c -= 1;\r\n        if (c <= 0) {\r\n            c = 0;\r\n        }\r\n\r\n        dispatch(setParentIndex(parent, c));\r\n        sendData(parent, parentsObj[parents[parent][c]]);\r\n    };\r\n\r\n    return (\r\n        <div className='character-head'>\r\n            <AnySelect onLeftClick={ onDecrement } onRightClick={ onIncrement } value={ parents[parent][parentIndex] } topText={ text } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterHeadParent,\r\n}\r\n","import React from \"react\";\r\nimport { CharacterHeadParent } from \"../CharacterHeadParent\";\r\nimport { CharacterSlider } from \"../CharacterSlider\";\r\nimport { setCharacterHeadProp } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { State } from \"../../../../reducers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setHeadProp } from \"../../../../actions/characterActions\";\r\n\r\nconst fatherObj = {\r\n    \"Benjamin\": 0, \r\n    \"Daniel\": 1, \r\n    \"Joshua\": 2, \r\n    \"Noah\": 3, \r\n    \"Andrew\": 4, \r\n    \"Juan\": 5, \r\n    \"Alex\": 6, \r\n    \"Isaac\": 7, \r\n    \"Evan\": 8, \r\n    \"Ethan\": 9, \r\n    \"Vincent\": 10, \r\n    \"Angel\": 11, \r\n    \"Diego\": 12, \r\n    \"Adrian\": 13, \r\n    \"Gabriel\": 14, \r\n    \"Michael\": 15, \r\n    \"Santiago\": 16, \r\n    \"Kevin\": 17, \r\n    \"Louis\": 18, \r\n    \"Samuel\": 19, \r\n    \"Anthony\": 20, \r\n    \"Claude\": 42, \r\n    \"Niko\": 43, \r\n    \"John\": 44,\r\n};\r\n\r\nconst motherObj = {\r\n    \"Hannah\": 21, \r\n    \"Aubrey\": 22,\r\n    \"Jasmine\": 23, \r\n    \"Gisele\": 24, \r\n    \"Amelia\": 25, \r\n    \"Isabella\": 26, \r\n    \"Zoe\": 27, \r\n    \"Ava\": 28, \r\n    \"Camila\": 29, \r\n    \"Violet\": 30, \r\n    \"Sophia\": 31, \r\n    \"Evelyn\": 32, \r\n    \"Nicole\": 33, \r\n    \"Ashley\": 34, \r\n    \"Gracie\": 35, \r\n    \"Brianna\": 36, \r\n    \"Natalie\": 37, \r\n    \"Olivia\": 38, \r\n    \"Elizabeth\": 39, \r\n    \"Charlotte\": 40, \r\n    \"Emma\": 41, \r\n    \"Misty\": 45,\r\n};\r\n\r\nconst father = [\"Benjamin\", \"Daniel\", \"Joshua\", \"Noah\", \"Andrew\", \"Juan\", \"Alex\", \"Isaac\", \"Evan\", \"Ethan\", \"Vincent\", \"Angel\", \"Diego\", \"Adrian\", \"Gabriel\", \"Michael\", \"Santiago\", \"Kevin\", \"Louis\", \"Samuel\", \"Anthony\", \"Claude\", \"Niko\", \"John\"];\r\nconst mother = [\"Hannah\", \"Aubrey\", \"Jasmine\", \"Gisele\", \"Amelia\", \"Isabella\", \"Zoe\", \"Ava\", \"Camila\", \"Violet\", \"Sophia\", \"Evelyn\", \"Nicole\", \"Ashley\", \"Gracie\", \"Brianna\", \"Natalie\", \"Olivia\", \"Elizabeth\", \"Charlotte\", \"Emma\", \"Misty\"];\r\nconst parents = { father, mother };\r\n\r\nfunction CharacterHead() {\r\n    const sendData = (name: any, val: number) => {\r\n        setCharacterHeadProp({name, val});\r\n    };\r\n\r\n    const state = useSelector((state: State) => state || []);\r\n    const dispatch = useDispatch();\r\n\r\n    const onChange = (name: string, val: number) => {\r\n        sendData(name, val);\r\n        dispatch(setHeadProp(name, val));\r\n    };\r\n\r\n    return (\r\n        <div className='character-head-container'>\r\n            <CharacterHeadParent parent={ 'father' } sendData={ sendData } parents={ parents } parentsObj={ fatherObj } text='Отец' />\r\n            <CharacterHeadParent parent={ 'mother' } sendData={ sendData } parents={ parents } parentsObj={ motherObj } text='Мать' />\r\n\r\n            <div className='character-head-container__title' style={{margin: '1rem 0'}}>Схожесть</div>\r\n            <CharacterSlider min={ 0 } max={ 1 } step={ 0.1 } value={ state.character.similarity } onChange={ (val) => { onChange('similarity', val) } } />\r\n\r\n            <div className='character-head-container__title' style={{margin: '1rem 0'}}>Цвет кожи</div>\r\n            <CharacterSlider min={ 0 } max={ 1 } step={ 0.1 } value={ state.character.skin } onChange={ (val) => { onChange('skin', val) } } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterHead,\r\n}","import React from \"react\";\r\nimport { AnySelect } from \"../../../shared/AnySelect\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { State } from \"../../../../reducers\";\r\nimport { setHairId, setHairColor } from \"../../../../actions/characterActions\";\r\nimport { setCharacterHair, setCharacterHairColor } from \"../../../../helpers/playerEvents/rpcCall\";\r\n\r\n// drawableIds.\r\nconst hairList = {\r\n    male: [\r\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, \r\n        24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, \r\n        44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, \r\n        65, 66, 67, 68, 69, 70, 71, 72, 73, 74,\r\n    ],\r\n    female: [\r\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, \r\n        22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, \r\n        42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, \r\n        62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,\r\n    ],\r\n};\r\n\r\nfunction CharacterHair() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const dispatch = useDispatch();\r\n    const gender = state.character.gender; \r\n    let hairId = state.character.hair;\r\n    let hairColorId = state.character.hairColorId;\r\n\r\n    const onLeftClick = async () => {      \r\n        hairId -= 1;\r\n\r\n        if (hairId < 0) {\r\n            hairId = hairList[gender].length - 1;\r\n        }\r\n\r\n        // Отправка на клиент.\r\n        await setCharacterHair(hairList[gender][hairId]);\r\n        \r\n        dispatch(\r\n            setHairId(hairId)\r\n        );\r\n    };\r\n\r\n    const onRightClick = async () => {\r\n        hairId += 1;\r\n\r\n        if (hairId > hairList[gender].length - 1) {\r\n            hairId = 0;\r\n        }\r\n\r\n        // Отправка на клиент.\r\n        await setCharacterHair(hairList[gender][hairId]);\r\n        \r\n        dispatch(\r\n            setHairId(hairId)\r\n        );\r\n    };\r\n\r\n    const onHairColorRightClick = () => {\r\n        hairColorId += 1;\r\n        if (hairColorId > 63) {\r\n            hairColorId = 0;\r\n        } \r\n\r\n        // Отправка на клиент.\r\n        setCharacterHairColor(hairColorId);\r\n\r\n        dispatch(setHairColor(hairColorId));\r\n    };\r\n\r\n    const onHairColorLeftClick = () => {\r\n        hairColorId -= 1;\r\n        if (hairColorId < 0) {\r\n            hairColorId = 63;\r\n        } \r\n        \r\n        // Отправка на клиент.\r\n        setCharacterHairColor(hairColorId);\r\n\r\n        dispatch(setHairColor(hairColorId));\r\n    };\r\n    \r\n    return (\r\n        <div className='character-hair'>\r\n            <AnySelect value={ hairList[gender][hairId] } onRightClick={ onRightClick } onLeftClick={ onLeftClick } topText='Тип волос' />\r\n            <AnySelect value={ hairColorId } onRightClick={ onHairColorRightClick } onLeftClick={ onHairColorLeftClick } topText='Цвет волос' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterHair,\r\n}","import React from \"react\";\r\nimport ReactSlider from \"react-slider\";\r\nimport { Animation } from 'rsuite';\r\nimport { setCharacterHeading, setCharacterCamera } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction CharacterHeading() {\r\n    const { Bounce } = Animation;\r\n    \r\n    const onSliderHeadingChange = (value: any) => {\r\n        if (typeof value === 'number') {\r\n            setCharacterHeading(value)\r\n        }\r\n    };\r\n\r\n    const onSliderCameraChange = (coord: 'x' | 'y' | 'z', n: number) => {\r\n        if (typeof n === 'number') {\r\n            setCharacterCamera(coord, n);\r\n        }\r\n    };\r\n\r\n    const cssSlider: any = {\r\n        textAlign: 'center', \r\n        fontSize: '1.5rem', \r\n        color: '#fff', \r\n        paddingBottom: '.5rem',\r\n        textShadow: '0px 0px 7px rgba(0,0,0,0.37)'\r\n    };\r\n    \r\n    return (\r\n        <div className=\"character-heading\">\r\n        <Bounce in={ true }>\r\n            <div>\r\n                <div>\r\n                    <span style={cssSlider}\r\n                    >Направление камеры по вертикали</span>\r\n                    <ReactSlider\r\n                        className=\"heading-slider\"\r\n                        thumbClassName=\"heading-thumb\"\r\n                        trackClassName=\"heading-track\"\r\n                        min={ 15.5 }\r\n                        max={ 17.5 }\r\n                        step={ .1 }\r\n                        defaultValue={ 16.5 }\r\n                        renderThumb={(props, state) => <div {...props}></div>}\r\n                        onChange={ (v: any) => onSliderCameraChange('z', v) }\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <span style={cssSlider}\r\n                    >Направление камеры по горизонтали</span>\r\n                    <ReactSlider\r\n                        className=\"heading-slider\"\r\n                        thumbClassName=\"heading-thumb\"\r\n                        trackClassName=\"heading-track\"\r\n                        min={ 5179 }\r\n                        max={ 5180 }\r\n                        step={ .1 }\r\n                        defaultValue={ 5179.5 }\r\n                        renderThumb={(props, state) => <div {...props}></div>}\r\n                        onChange={ (v: any) => onSliderCameraChange('y', v) }\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <span style={cssSlider}\r\n                    >Направление персонажа</span>\r\n                    <ReactSlider\r\n                        className=\"heading-slider\"\r\n                        thumbClassName=\"heading-thumb\"\r\n                        trackClassName=\"heading-track\"\r\n                        min={ 1 }\r\n                        max={ 360 }\r\n                        defaultValue={ 180 }\r\n                        renderThumb={(props, state) => <div {...props}></div>}\r\n                        onChange={ onSliderHeadingChange }\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterHeading,\r\n}","function range(value: number, min: number, max: number) {\r\n    if (value < min) {\r\n        value = min;\r\n    }\r\n    if (value > max) {\r\n        value = max;\r\n    }\r\n    return value;\r\n};\r\n\r\nexport {\r\n    range,\r\n}","import React from \"react\";\r\nimport { AnySelect } from \"../../../shared/AnySelect\";\r\nimport { range } from \"../../../../helpers/helps\";\r\nimport { setCharacterHeadOverlay } from \"../../../../helpers/playerEvents/rpcCall\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { State } from \"../../../../reducers\";\r\nimport { setHeadOverlayProp } from \"../../../../actions/characterActions\";\r\n\r\n\r\nfunction CharacterHeadOverlay() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const dispatch = useDispatch();\r\n\r\n    // state.character.headOverlay[1].overlayId\r\n \r\n    const getIndex = (overlayId, index) => {\r\n        switch (overlayId) {\r\n            case 0: {\r\n                return range(index, 0, 23);\r\n            }\r\n            case 1: {\r\n                return range(index, 0, 28);\r\n            }\r\n            case 2: {\r\n                return range(index, 0, 33);\r\n            }\r\n            case 3: {\r\n                return range(index, 0, 14);\r\n            }\r\n            case 4: {\r\n                return range(index, 0, 74);\r\n            }\r\n            case 5: {\r\n                return range(index, 0, 6);\r\n            }\r\n            case 6: {\r\n                return range(index, 0, 11);\r\n            }\r\n            case 7: {\r\n                return range(index, 0, 10);\r\n            }\r\n            case 8: {\r\n                return range(index, 0, 9);\r\n            }\r\n            case 9: {\r\n                return range(index, 0, 17);\r\n            }\r\n            case 10: {\r\n                return range(index, 0, 16);\r\n            }\r\n            case 11: {\r\n                return range(index, 0, 11);\r\n            }\r\n            case 12: {\r\n                return range(index, 0, 1);\r\n            }\r\n            default: {\r\n                return -1;\r\n            }\r\n        }\r\n    };\r\n\r\n    const onLeft = (overlayId: number, index: number) => {\r\n        index = getIndex(overlayId, --index);\r\n        dispatch(\r\n            setHeadOverlayProp(overlayId, getIndex(overlayId, index))\r\n        );\r\n        setCharacterHeadOverlay(overlayId, index);\r\n    };\r\n\r\n    const onRight = (overlayId: number, index: number) => {\r\n        index = getIndex(overlayId, ++index);\r\n        dispatch(\r\n            setHeadOverlayProp(overlayId, getIndex(overlayId, index))\r\n        );\r\n        setCharacterHeadOverlay(overlayId, index);\r\n    };\r\n\r\n    const getData = () => {\r\n        return state.character.headOverlay.map(i => {\r\n            const { index, overlayId } = state.character.headOverlay[i.overlayId];\r\n            \r\n            let value: any = index;\r\n\r\n            if (overlayId === 12) {\r\n                value = index === 1 ? 'Да' : 'Нет';\r\n            }\r\n\r\n            return (\r\n                <div key={ `${i.name}_${i.index}` }>\r\n                    <AnySelect \r\n                        onLeftClick={ () => onLeft(i.overlayId, i.index) } \r\n                        onRightClick={ () => onRight(i.overlayId, i.index) } \r\n                        value={ value } \r\n                        topText={ i.name } \r\n                    />\r\n                </div>\r\n            )\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className='character-head-overlay'>\r\n            { getData() }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterHeadOverlay,\r\n}","import React from \"react\";\r\nimport ReactSlider from \"react-slider\";\r\nimport { AnySelect } from \"../../../shared/AnySelect\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { State } from \"../../../../reducers\";\r\nimport { range } from \"../../../../helpers/helps\";\r\nimport { setEyesColor } from \"../../../../actions/characterActions\";\r\nimport { setCharacterEyes } from \"../../../../helpers/playerEvents/rpcCall\";\r\n\r\nfunction CharacterEyes() {\r\n    const state = useSelector((state: State) => state || []);\r\n    const dispatch = useDispatch();\r\n    let eyes = state.character.eyes;\r\n\r\n    const onLeft = () => {\r\n        eyes -= 1;\r\n        eyes = range(eyes, 0, 31);\r\n        dispatch(\r\n            setEyesColor(eyes)\r\n        );\r\n        setCharacterEyes(eyes);\r\n    };\r\n    const onRight = () => {\r\n        eyes += 1;\r\n        eyes = range(eyes, 0, 31);\r\n        dispatch(\r\n            setEyesColor(eyes)\r\n        );\r\n        setCharacterEyes(eyes);\r\n    };\r\n\r\n    return (\r\n        <div className='character-eyes'>\r\n            <AnySelect \r\n                onLeftClick={ () => onLeft() } \r\n                onRightClick={ () => onRight() } \r\n                value={ eyes }\r\n                topText={ 'Цвет глаз' } \r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    CharacterEyes,\r\n}","import React, { useEffect } from \"react\";\r\nimport './character.css';\r\nimport { Drawer, Button, Slider, Animation } from 'rsuite';\r\nimport { Previous } from \"../Previous\";\r\nimport { push } from \"connected-react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactSlider from 'react-slider'\r\nimport { setCharacterHeading, setCharacterGender, resetCharacter, serverRegister, updateCharacterCameraPosition, serverCharacterReady } from \"../../../helpers/playerEvents/rpcCall\";\r\nimport { CharacterFace } from \"./CharacterFace\";\r\nimport { CharacterHead } from \"./CharacterHead\";\r\nimport { setInitialCharacter, setGender } from \"../../../actions/characterActions\";\r\nimport { State } from \"../../../reducers\";\r\nimport { CharacterHair } from \"./CharacterHair\";\r\nimport { CharacterHeading } from \"./CharacterHeading\";\r\nimport { CharacterHeadOverlay } from \"./CharacterHeadOverlay\";\r\nimport { CharacterEyes } from \"./CharacterEyes\";\r\nimport { enqueueSnackbar, NotifyVariant } from \"../../../actions/notificationActions\";\r\n\r\nconst { Bounce } = Animation;\r\n\r\nfunction CharacterTitle(props: { title: string; }) {\r\n    const { title } = props;\r\n    \r\n    return (\r\n        <div style={ {fontSize: '1.6rem', margin: '2rem 0', textAlign: 'center', textTransform: 'uppercase'} }>{ title }</div>\r\n    );\r\n}\r\n\r\nfunction Character() {\r\n    const state = useSelector((state: State) => state.character || []);\r\n    const registerState = useSelector((state: State) => state.auth.register || []);\r\n    const dispatch = useDispatch();\r\n    const { login, email, password } = registerState;\r\n\r\n    const onGenderClick = async (gender: 'male' | 'female') => {\r\n        await resetCharacter();\r\n        await setCharacterGender(gender);\r\n        dispatch(\r\n            setGender(gender)\r\n        );\r\n        dispatch(\r\n            setInitialCharacter()\r\n        );\r\n    };\r\n\r\n    const onClickReset = async () => {\r\n        // Отправка на клиент.\r\n        await resetCharacter();\r\n        dispatch(\r\n            setInitialCharacter()\r\n        );\r\n    };\r\n\r\n    const onReady = async () => {\r\n        const serverResult = await serverCharacterReady({\r\n            login: login.val, \r\n            email: email.val, \r\n            password: password.val,\r\n        });\r\n        // Занести данные в бд.\r\n\r\n        dispatch(\r\n            enqueueSnackbar({\r\n                message: serverResult.text,\r\n                    options: {\r\n                        key: new Date().getTime() + Math.random(),\r\n                        variant: serverResult.result ? NotifyVariant.SUCCESS : NotifyVariant.ERROR,\r\n                        anchorOrigin: {\r\n                            horizontal: 'center',\r\n                            vertical: 'bottom',\r\n                        }\r\n                },\r\n            })\r\n        );\r\n        \r\n        dispatch(push('clear'));\r\n    };\r\n\r\n    return (\r\n        <div className='character'>\r\n            <Drawer\r\n                backdrop={ false }\r\n                size={ 'xs' }\r\n                placement={ 'left' }\r\n                show={ true }\r\n                className='character-drawer'\r\n            >\r\n                <Drawer.Header>\r\n                    <span className='character-reset' onClick={ () => onClickReset() }>Сбросить</span>\r\n                </Drawer.Header>\r\n                <Drawer.Body>\r\n                    <div className=\"character-content\">\r\n                        <div className=\"character-gender\">\r\n                            <Button appearance=\"ghost\" color='red' size='lg' active onClick={ () => onGenderClick('male') }>Мужской</Button>\r\n                            <Button appearance=\"ghost\" color='violet' size='lg' active onClick={ () => onGenderClick('female') }>Женский</Button>\r\n                        </div>\r\n                        <CharacterTitle title='Лицо' />\r\n                        <CharacterHead />\r\n                        <CharacterTitle title='Лицо' />\r\n                        <CharacterFace />\r\n                        <CharacterTitle title='Внешний вид' />\r\n                        <CharacterEyes />\r\n                        <CharacterHair />\r\n                        <CharacterHeadOverlay />\r\n\r\n                    </div>\r\n                </Drawer.Body>\r\n                <Drawer.Footer>\r\n                    <div style={ {textAlign: 'center'} }>\r\n                        <Button appearance=\"ghost\" size='lg' style={{textAlign: 'center', width: '8rem'}} onClick={ onReady }>ГОТОВО</Button>\r\n                    </div>\r\n                </Drawer.Footer>\r\n            </Drawer>\r\n\r\n            <CharacterHeading />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    Character,\r\n}","import React from \"react\";\r\nimport './startMenu.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\nimport { Animation } from 'rsuite';\r\nconst { Bounce } = Animation;\r\n\r\nfunction StartMenu() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Bounce in={ true }>\r\n            <div className='start-menu'>\r\n                <div className=\"start-menu__interface\">\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    );\r\n}\r\n\r\nexport {\r\n    StartMenu,\r\n}","import React from \"react\";\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport './styles.css';\r\nimport { ItemsUI } from \"../UserInterface\";\r\nimport { emitter } from \"../../helpers/emitter\";\r\nimport { NotifyComp } from \"./NotifyComp\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { DisplayUI } from \"../../reducers/UIReducer\";\r\nimport { Huds } from \"./Huds\";\r\nimport { push } from \"connected-react-router\";\r\nimport { AdminInterface } from \"../AdminInterface\";\r\nimport { Auth } from \"../StartMenu/Auth\";\r\nimport { Character } from \"../StartMenu/Character\";\r\nimport { StartMenu } from \"../StartMenu\";\r\n\r\nfunction RoutesComp() {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div style={{position: 'absolute', top: '50px', left: 0}}>\r\n      <div>\r\n        <ul>\r\n          <li><a href='#' onClick={ () => dispatch(push('/clear')) }>clear</a></li>\r\n          <li><a href='#' onClick={ () => dispatch(push('/UIItems')) }>Items UI</a></li>\r\n          <li><a href='#' onClick={ () => dispatch(push('/AdminInterface')) }>Admin Interface</a></li>\r\n          <li><a href='#' onClick={ () => dispatch(push('/auth')) }>Auth</a></li>\r\n          <li><a href='#' onClick={ () => dispatch(push('/character')) }>Character</a></li>\r\n          <li><a href='#' onClick={ () => dispatch(push('/StartMenu')) }>StartMenu</a></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Clear() {\r\n  return (<div></div>);\r\n}\r\n\r\nfunction App() {\r\n  const store = useSelector((store: any) => store || []);\r\n  const displayUI: DisplayUI = store.UI.displayUI;\r\n  const { huds } = displayUI;\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      { huds && <Huds />}\r\n      <NotifyComp />\r\n      <Switch>\r\n        <Route exact path='/clear' component={ Clear } />\r\n        <Route exact path='/UIItems' component={ ItemsUI } />\r\n        <Route exact path='/AdminInterface' component={ AdminInterface } />\r\n        <Route exact path='/auth' component={ Auth } />\r\n        <Route exact path='/character' component={ Character } />\r\n        <Route exact path='/StartMenu' component={ StartMenu } />\r\n      </Switch>\r\n      <Redirect to=\"/character\" />\r\n      {/* <RoutesComp /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {\r\n  App,\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from 'react-redux';\r\nimport { store } from \"../../store/config\";\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { App } from \"../App\";\r\nimport { history } from '../../store/config';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nfunction Root() {\r\n    return (\r\n        <Provider store={ store }>\r\n            <SnackbarProvider hideIconVariant={ false } maxSnack={ 5 } autoHideDuration={ 3000 }>\r\n                <ConnectedRouter history={ history }>\r\n                    <App />\r\n                </ConnectedRouter>\r\n            </SnackbarProvider>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport {\r\n    Root,\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'typeface-roboto';\r\nimport 'rsuite/dist/styles/rsuite-dark.css';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Root } from './components/Root';\r\nimport { rpcRegister } from './helpers/playerEvents/rpcRegister';\r\n\r\nReactDOM.render(\r\n  <Root />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n// Регистрация всех RPC события для RAGEMP.\r\nrpcRegister(); ","import { register } from 'rage-rpc';\r\nimport { Item } from '../../types';\r\nimport { NotifyOrigin } from '../../actions/notificationActions';\r\nimport { DisplayUI } from '../../reducers/UIReducer';\r\nimport { emitter } from '../emitter';\r\n\r\ntype NotifyData = {\r\n    msg: string; \r\n    variant: string; \r\n    origin: NotifyOrigin;\r\n};\r\n\r\nfunction rpcRegister() {\r\n    console.log(' ---> rpcRegister');\r\n    \r\n    register('cef_set_ground_items', (items: Item[]) => {\r\n        emitter.emit('eventSetGroundItems', items);\r\n    });\r\n\r\n    register('cef_set_inventory_slots', (slots: number) => {\r\n        emitter.emit('eventSetInventorySlots', slots);\r\n    });\r\n\r\n    register('cef_set_notify', (jsonData: string) => {\r\n        const data: NotifyData = JSON.parse(jsonData);\r\n        emitter.emit('setNotify', data.msg, data.variant, data.origin);\r\n    });\r\n\r\n    register('cef_set_display_ui', (displayUI: DisplayUI) => {\r\n        emitter.emit('cef_set_display_ui', displayUI);\r\n    });\r\n    \r\n    register('cef_change_UI', (name: string) => {\r\n        emitter.emit('change_UI', name);\r\n    });\r\n\r\n    register('cef_set_health_huds', (health: number) => {\r\n        emitter.emit('cef_set_health_huds', health);\r\n    });\r\n\r\n    register('cef_set_armor_huds', (armor: number) => {\r\n        emitter.emit('cef_set_armor_huds', armor);\r\n    });\r\n\r\n    register('cef_set_hunger_huds', (hunger: number) => {\r\n        emitter.emit('cef_set_hunger_huds', hunger);\r\n    });\r\n\r\n    register('cef_set_dehydration_huds', (hunger: number) => {\r\n        emitter.emit('cef_set_dehydration_huds', hunger);\r\n    });\r\n\r\n    register('cef_set_inventory_weight', (weight: number) => {\r\n        emitter.emit('cef_set_inventory_weight', weight);\r\n    });\r\n};\r\n\r\nexport {\r\n    rpcRegister,\r\n}"],"sourceRoot":""}